/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 267.0, "minX": 0.0, "maxY": 63305.0, "series": [{"data": [[0.0, 1182.0], [0.1, 1182.0], [0.2, 1191.0], [0.3, 1191.0], [0.4, 1193.0], [0.5, 1205.0], [0.6, 1205.0], [0.7, 1212.0], [0.8, 1212.0], [0.9, 1218.0], [1.0, 1250.0], [1.1, 1250.0], [1.2, 1283.0], [1.3, 1283.0], [1.4, 1287.0], [1.5, 1312.0], [1.6, 1312.0], [1.7, 1328.0], [1.8, 1328.0], [1.9, 1381.0], [2.0, 1581.0], [2.1, 1581.0], [2.2, 1584.0], [2.3, 1584.0], [2.4, 1797.0], [2.5, 1877.0], [2.6, 1877.0], [2.7, 1884.0], [2.8, 1884.0], [2.9, 1888.0], [3.0, 1921.0], [3.1, 1921.0], [3.2, 1998.0], [3.3, 1998.0], [3.4, 1999.0], [3.5, 2001.0], [3.6, 2001.0], [3.7, 2013.0], [3.8, 2013.0], [3.9, 2030.0], [4.0, 2054.0], [4.1, 2054.0], [4.2, 2058.0], [4.3, 2058.0], [4.4, 2060.0], [4.5, 2099.0], [4.6, 2099.0], [4.7, 2134.0], [4.8, 2134.0], [4.9, 2150.0], [5.0, 2165.0], [5.1, 2165.0], [5.2, 2176.0], [5.3, 2176.0], [5.4, 2181.0], [5.5, 2181.0], [5.6, 2196.0], [5.7, 2198.0], [5.8, 2198.0], [5.9, 2200.0], [6.0, 2200.0], [6.1, 2244.0], [6.2, 2247.0], [6.3, 2247.0], [6.4, 2248.0], [6.5, 2248.0], [6.6, 2250.0], [6.7, 2347.0], [6.8, 2347.0], [6.9, 2354.0], [7.0, 2354.0], [7.1, 2379.0], [7.2, 2388.0], [7.3, 2388.0], [7.4, 2390.0], [7.5, 2390.0], [7.6, 2408.0], [7.7, 2442.0], [7.8, 2442.0], [7.9, 2471.0], [8.0, 2471.0], [8.1, 2487.0], [8.2, 2545.0], [8.3, 2545.0], [8.4, 2592.0], [8.5, 2592.0], [8.6, 2664.0], [8.7, 2698.0], [8.8, 2698.0], [8.9, 2733.0], [9.0, 2733.0], [9.1, 2747.0], [9.2, 2750.0], [9.3, 2750.0], [9.4, 2785.0], [9.5, 2803.0], [9.6, 2803.0], [9.7, 2815.0], [9.8, 2815.0], [9.9, 2840.0], [10.0, 2882.0], [10.1, 2882.0], [10.2, 2885.0], [10.3, 2885.0], [10.4, 2887.0], [10.5, 2953.0], [10.6, 2953.0], [10.7, 2963.0], [10.8, 2963.0], [10.9, 2965.0], [11.0, 2990.0], [11.1, 2990.0], [11.2, 2994.0], [11.3, 2994.0], [11.4, 2996.0], [11.5, 3006.0], [11.6, 3006.0], [11.7, 3006.0], [11.8, 3006.0], [11.9, 3007.0], [12.0, 3009.0], [12.1, 3009.0], [12.2, 3019.0], [12.3, 3019.0], [12.4, 3050.0], [12.5, 3061.0], [12.6, 3061.0], [12.7, 3063.0], [12.8, 3063.0], [12.9, 3068.0], [13.0, 3071.0], [13.1, 3071.0], [13.2, 3071.0], [13.3, 3071.0], [13.4, 3085.0], [13.5, 3086.0], [13.6, 3086.0], [13.7, 3100.0], [13.8, 3100.0], [13.9, 3107.0], [14.0, 3127.0], [14.1, 3127.0], [14.2, 3143.0], [14.3, 3143.0], [14.4, 3151.0], [14.5, 3159.0], [14.6, 3159.0], [14.7, 3179.0], [14.8, 3179.0], [14.9, 3183.0], [15.0, 3192.0], [15.1, 3192.0], [15.2, 3194.0], [15.3, 3194.0], [15.4, 3209.0], [15.5, 3220.0], [15.6, 3220.0], [15.7, 3233.0], [15.8, 3233.0], [15.9, 3245.0], [16.0, 3246.0], [16.1, 3246.0], [16.2, 3250.0], [16.3, 3250.0], [16.4, 3266.0], [16.5, 3286.0], [16.6, 3286.0], [16.7, 3288.0], [16.8, 3288.0], [16.9, 3299.0], [17.0, 3303.0], [17.1, 3303.0], [17.2, 3315.0], [17.3, 3315.0], [17.4, 3317.0], [17.5, 3327.0], [17.6, 3327.0], [17.7, 3337.0], [17.8, 3337.0], [17.9, 3347.0], [18.0, 3348.0], [18.1, 3348.0], [18.2, 3367.0], [18.3, 3367.0], [18.4, 3371.0], [18.5, 3373.0], [18.6, 3373.0], [18.7, 3377.0], [18.8, 3377.0], [18.9, 3379.0], [19.0, 3406.0], [19.1, 3406.0], [19.2, 3410.0], [19.3, 3410.0], [19.4, 3418.0], [19.5, 3418.0], [19.6, 3434.0], [19.7, 3453.0], [19.8, 3453.0], [19.9, 3460.0], [20.0, 3460.0], [20.1, 3483.0], [20.2, 3487.0], [20.3, 3487.0], [20.4, 3491.0], [20.5, 3491.0], [20.6, 3503.0], [20.7, 3505.0], [20.8, 3505.0], [20.9, 3509.0], [21.0, 3509.0], [21.1, 3512.0], [21.2, 3522.0], [21.3, 3522.0], [21.4, 3539.0], [21.5, 3539.0], [21.6, 3554.0], [21.7, 3560.0], [21.8, 3560.0], [21.9, 3593.0], [22.0, 3593.0], [22.1, 3604.0], [22.2, 3620.0], [22.3, 3620.0], [22.4, 3624.0], [22.5, 3624.0], [22.6, 3629.0], [22.7, 3664.0], [22.8, 3664.0], [22.9, 3665.0], [23.0, 3665.0], [23.1, 3675.0], [23.2, 3678.0], [23.3, 3678.0], [23.4, 3680.0], [23.5, 3680.0], [23.6, 3689.0], [23.7, 3708.0], [23.8, 3708.0], [23.9, 3708.0], [24.0, 3708.0], [24.1, 3717.0], [24.2, 3720.0], [24.3, 3720.0], [24.4, 3753.0], [24.5, 3753.0], [24.6, 3763.0], [24.7, 3778.0], [24.8, 3778.0], [24.9, 3842.0], [25.0, 3842.0], [25.1, 3848.0], [25.2, 3862.0], [25.3, 3862.0], [25.4, 3868.0], [25.5, 3868.0], [25.6, 3881.0], [25.7, 3883.0], [25.8, 3883.0], [25.9, 3893.0], [26.0, 3893.0], [26.1, 3917.0], [26.2, 3951.0], [26.3, 3951.0], [26.4, 3955.0], [26.5, 3955.0], [26.6, 3958.0], [26.7, 3964.0], [26.8, 3964.0], [26.9, 3970.0], [27.0, 3970.0], [27.1, 3974.0], [27.2, 3989.0], [27.3, 3989.0], [27.4, 3990.0], [27.5, 3990.0], [27.6, 3991.0], [27.7, 3999.0], [27.8, 3999.0], [27.9, 4020.0], [28.0, 4020.0], [28.1, 4026.0], [28.2, 4026.0], [28.3, 4026.0], [28.4, 4053.0], [28.5, 4053.0], [28.6, 4058.0], [28.7, 4073.0], [28.8, 4073.0], [28.9, 4084.0], [29.0, 4084.0], [29.1, 4086.0], [29.2, 4095.0], [29.3, 4095.0], [29.4, 4110.0], [29.5, 4110.0], [29.6, 4134.0], [29.7, 4152.0], [29.8, 4152.0], [29.9, 4152.0], [30.0, 4152.0], [30.1, 4159.0], [30.2, 4180.0], [30.3, 4180.0], [30.4, 4182.0], [30.5, 4182.0], [30.6, 4220.0], [30.7, 4237.0], [30.8, 4237.0], [30.9, 4241.0], [31.0, 4241.0], [31.1, 4254.0], [31.2, 4265.0], [31.3, 4265.0], [31.4, 4282.0], [31.5, 4282.0], [31.6, 4285.0], [31.7, 4312.0], [31.8, 4312.0], [31.9, 4312.0], [32.0, 4312.0], [32.1, 4358.0], [32.2, 4369.0], [32.3, 4369.0], [32.4, 4386.0], [32.5, 4386.0], [32.6, 4390.0], [32.7, 4400.0], [32.8, 4400.0], [32.9, 4415.0], [33.0, 4415.0], [33.1, 4417.0], [33.2, 4418.0], [33.3, 4418.0], [33.4, 4429.0], [33.5, 4429.0], [33.6, 4437.0], [33.7, 4481.0], [33.8, 4481.0], [33.9, 4484.0], [34.0, 4484.0], [34.1, 4494.0], [34.2, 4528.0], [34.3, 4528.0], [34.4, 4531.0], [34.5, 4531.0], [34.6, 4541.0], [34.7, 4554.0], [34.8, 4554.0], [34.9, 4558.0], [35.0, 4558.0], [35.1, 4565.0], [35.2, 4568.0], [35.3, 4568.0], [35.4, 4578.0], [35.5, 4578.0], [35.6, 4587.0], [35.7, 4590.0], [35.8, 4590.0], [35.9, 4598.0], [36.0, 4598.0], [36.1, 4654.0], [36.2, 4675.0], [36.3, 4675.0], [36.4, 4691.0], [36.5, 4691.0], [36.6, 4698.0], [36.7, 4718.0], [36.8, 4718.0], [36.9, 4724.0], [37.0, 4724.0], [37.1, 4727.0], [37.2, 4729.0], [37.3, 4729.0], [37.4, 4739.0], [37.5, 4744.0], [37.6, 4744.0], [37.7, 4745.0], [37.8, 4745.0], [37.9, 4753.0], [38.0, 4797.0], [38.1, 4797.0], [38.2, 4797.0], [38.3, 4797.0], [38.4, 4799.0], [38.5, 4804.0], [38.6, 4804.0], [38.7, 4829.0], [38.8, 4829.0], [38.9, 4832.0], [39.0, 4835.0], [39.1, 4835.0], [39.2, 4874.0], [39.3, 4874.0], [39.4, 4894.0], [39.5, 4902.0], [39.6, 4902.0], [39.7, 4904.0], [39.8, 4904.0], [39.9, 4910.0], [40.0, 4921.0], [40.1, 4921.0], [40.2, 4927.0], [40.3, 4927.0], [40.4, 4927.0], [40.5, 4965.0], [40.6, 4965.0], [40.7, 4985.0], [40.8, 4985.0], [40.9, 4990.0], [41.0, 5015.0], [41.1, 5015.0], [41.2, 5054.0], [41.3, 5054.0], [41.4, 5067.0], [41.5, 5071.0], [41.6, 5071.0], [41.7, 5085.0], [41.8, 5085.0], [41.9, 5086.0], [42.0, 5107.0], [42.1, 5107.0], [42.2, 5109.0], [42.3, 5109.0], [42.4, 5111.0], [42.5, 5116.0], [42.6, 5116.0], [42.7, 5123.0], [42.8, 5123.0], [42.9, 5126.0], [43.0, 5132.0], [43.1, 5132.0], [43.2, 5132.0], [43.3, 5132.0], [43.4, 5136.0], [43.5, 5153.0], [43.6, 5153.0], [43.7, 5182.0], [43.8, 5182.0], [43.9, 5204.0], [44.0, 5205.0], [44.1, 5205.0], [44.2, 5213.0], [44.3, 5213.0], [44.4, 5215.0], [44.5, 5217.0], [44.6, 5217.0], [44.7, 5227.0], [44.8, 5227.0], [44.9, 5233.0], [45.0, 5251.0], [45.1, 5251.0], [45.2, 5255.0], [45.3, 5255.0], [45.4, 5282.0], [45.5, 5284.0], [45.6, 5284.0], [45.7, 5288.0], [45.8, 5288.0], [45.9, 5301.0], [46.0, 5307.0], [46.1, 5307.0], [46.2, 5315.0], [46.3, 5315.0], [46.4, 5341.0], [46.5, 5376.0], [46.6, 5376.0], [46.7, 5378.0], [46.8, 5378.0], [46.9, 5379.0], [47.0, 5379.0], [47.1, 5379.0], [47.2, 5412.0], [47.3, 5412.0], [47.4, 5445.0], [47.5, 5472.0], [47.6, 5472.0], [47.7, 5474.0], [47.8, 5474.0], [47.9, 5478.0], [48.0, 5483.0], [48.1, 5483.0], [48.2, 5484.0], [48.3, 5484.0], [48.4, 5528.0], [48.5, 5546.0], [48.6, 5546.0], [48.7, 5555.0], [48.8, 5555.0], [48.9, 5568.0], [49.0, 5588.0], [49.1, 5588.0], [49.2, 5607.0], [49.3, 5607.0], [49.4, 5615.0], [49.5, 5625.0], [49.6, 5625.0], [49.7, 5625.0], [49.8, 5625.0], [49.9, 5632.0], [50.0, 5637.0], [50.1, 5637.0], [50.2, 5664.0], [50.3, 5664.0], [50.4, 5680.0], [50.5, 5709.0], [50.6, 5709.0], [50.7, 5710.0], [50.8, 5710.0], [50.9, 5736.0], [51.0, 5736.0], [51.1, 5736.0], [51.2, 5785.0], [51.3, 5785.0], [51.4, 5791.0], [51.5, 5792.0], [51.6, 5792.0], [51.7, 5809.0], [51.8, 5809.0], [51.9, 5811.0], [52.0, 5837.0], [52.1, 5837.0], [52.2, 5846.0], [52.3, 5846.0], [52.4, 5857.0], [52.5, 5874.0], [52.6, 5874.0], [52.7, 5903.0], [52.8, 5903.0], [52.9, 5910.0], [53.0, 5914.0], [53.1, 5914.0], [53.2, 5914.0], [53.3, 5914.0], [53.4, 5930.0], [53.5, 5931.0], [53.6, 5931.0], [53.7, 5933.0], [53.8, 5933.0], [53.9, 5938.0], [54.0, 5948.0], [54.1, 5948.0], [54.2, 5950.0], [54.3, 5950.0], [54.4, 5955.0], [54.5, 5965.0], [54.6, 5965.0], [54.7, 5980.0], [54.8, 5980.0], [54.9, 5986.0], [55.0, 5991.0], [55.1, 5991.0], [55.2, 6013.0], [55.3, 6013.0], [55.4, 6020.0], [55.5, 6036.0], [55.6, 6036.0], [55.7, 6051.0], [55.8, 6051.0], [55.9, 6071.0], [56.0, 6116.0], [56.1, 6116.0], [56.2, 6125.0], [56.3, 6125.0], [56.4, 6150.0], [56.5, 6158.0], [56.6, 6158.0], [56.7, 6166.0], [56.8, 6166.0], [56.9, 6215.0], [57.0, 6222.0], [57.1, 6222.0], [57.2, 6227.0], [57.3, 6227.0], [57.4, 6244.0], [57.5, 6258.0], [57.6, 6258.0], [57.7, 6309.0], [57.8, 6309.0], [57.9, 6326.0], [58.0, 6354.0], [58.1, 6354.0], [58.2, 6356.0], [58.3, 6356.0], [58.4, 6402.0], [58.5, 6415.0], [58.6, 6415.0], [58.7, 6425.0], [58.8, 6425.0], [58.9, 6460.0], [59.0, 6462.0], [59.1, 6462.0], [59.2, 6472.0], [59.3, 6472.0], [59.4, 6479.0], [59.5, 6491.0], [59.6, 6491.0], [59.7, 6501.0], [59.8, 6501.0], [59.9, 6520.0], [60.0, 6531.0], [60.1, 6531.0], [60.2, 6535.0], [60.3, 6535.0], [60.4, 6547.0], [60.5, 6550.0], [60.6, 6550.0], [60.7, 6558.0], [60.8, 6558.0], [60.9, 6562.0], [61.0, 6573.0], [61.1, 6573.0], [61.2, 6577.0], [61.3, 6577.0], [61.4, 6579.0], [61.5, 6581.0], [61.6, 6581.0], [61.7, 6590.0], [61.8, 6590.0], [61.9, 6593.0], [62.0, 6598.0], [62.1, 6598.0], [62.2, 6612.0], [62.3, 6612.0], [62.4, 6633.0], [62.5, 6677.0], [62.6, 6677.0], [62.7, 6727.0], [62.8, 6727.0], [62.9, 6750.0], [63.0, 6754.0], [63.1, 6754.0], [63.2, 6764.0], [63.3, 6764.0], [63.4, 6770.0], [63.5, 6785.0], [63.6, 6785.0], [63.7, 6813.0], [63.8, 6813.0], [63.9, 6852.0], [64.0, 6858.0], [64.1, 6858.0], [64.2, 6862.0], [64.3, 6862.0], [64.4, 6864.0], [64.5, 6899.0], [64.6, 6899.0], [64.7, 6901.0], [64.8, 6901.0], [64.9, 6902.0], [65.0, 6910.0], [65.1, 6910.0], [65.2, 6931.0], [65.3, 6931.0], [65.4, 6940.0], [65.5, 6941.0], [65.6, 6941.0], [65.7, 6956.0], [65.8, 6956.0], [65.9, 6957.0], [66.0, 6959.0], [66.1, 6959.0], [66.2, 6965.0], [66.3, 6965.0], [66.4, 6969.0], [66.5, 6969.0], [66.6, 6969.0], [66.7, 6972.0], [66.8, 6972.0], [66.9, 6997.0], [67.0, 7010.0], [67.1, 7010.0], [67.2, 7059.0], [67.3, 7059.0], [67.4, 7066.0], [67.5, 7078.0], [67.6, 7078.0], [67.7, 7142.0], [67.8, 7142.0], [67.9, 7200.0], [68.0, 7208.0], [68.1, 7208.0], [68.2, 7213.0], [68.3, 7213.0], [68.4, 7234.0], [68.5, 7321.0], [68.6, 7321.0], [68.7, 7336.0], [68.8, 7336.0], [68.9, 7358.0], [69.0, 7402.0], [69.1, 7402.0], [69.2, 7493.0], [69.3, 7493.0], [69.4, 7659.0], [69.5, 7673.0], [69.6, 7673.0], [69.7, 7701.0], [69.8, 7701.0], [69.9, 7737.0], [70.0, 7747.0], [70.1, 7747.0], [70.2, 7855.0], [70.3, 7855.0], [70.4, 7863.0], [70.5, 7866.0], [70.6, 7866.0], [70.7, 7867.0], [70.8, 7867.0], [70.9, 7881.0], [71.0, 7888.0], [71.1, 7888.0], [71.2, 7937.0], [71.3, 7937.0], [71.4, 7994.0], [71.5, 8028.0], [71.6, 8028.0], [71.7, 8069.0], [71.8, 8069.0], [71.9, 8082.0], [72.0, 8144.0], [72.1, 8144.0], [72.2, 8200.0], [72.3, 8200.0], [72.4, 8205.0], [72.5, 8411.0], [72.6, 8411.0], [72.7, 8426.0], [72.8, 8426.0], [72.9, 8518.0], [73.0, 8599.0], [73.1, 8599.0], [73.2, 8606.0], [73.3, 8606.0], [73.4, 8693.0], [73.5, 8735.0], [73.6, 8735.0], [73.7, 8780.0], [73.8, 8780.0], [73.9, 8810.0], [74.0, 8890.0], [74.1, 8890.0], [74.2, 8939.0], [74.3, 8939.0], [74.4, 8949.0], [74.5, 8977.0], [74.6, 8977.0], [74.7, 9056.0], [74.8, 9056.0], [74.9, 9081.0], [75.0, 9090.0], [75.1, 9090.0], [75.2, 9100.0], [75.3, 9100.0], [75.4, 9226.0], [75.5, 9229.0], [75.6, 9229.0], [75.7, 9271.0], [75.8, 9271.0], [75.9, 9306.0], [76.0, 9343.0], [76.1, 9343.0], [76.2, 9366.0], [76.3, 9366.0], [76.4, 9415.0], [76.5, 9415.0], [76.6, 9432.0], [76.7, 9454.0], [76.8, 9454.0], [76.9, 9460.0], [77.0, 9460.0], [77.1, 9499.0], [77.2, 9531.0], [77.3, 9531.0], [77.4, 9544.0], [77.5, 9544.0], [77.6, 9549.0], [77.7, 9553.0], [77.8, 9553.0], [77.9, 9595.0], [78.0, 9595.0], [78.1, 9626.0], [78.2, 9682.0], [78.3, 9682.0], [78.4, 9769.0], [78.5, 9769.0], [78.6, 9771.0], [78.7, 9829.0], [78.8, 9829.0], [78.9, 9863.0], [79.0, 9863.0], [79.1, 9901.0], [79.2, 9956.0], [79.3, 9956.0], [79.4, 10004.0], [79.5, 10004.0], [79.6, 10027.0], [79.7, 10031.0], [79.8, 10031.0], [79.9, 10125.0], [80.0, 10125.0], [80.1, 10135.0], [80.2, 10148.0], [80.3, 10148.0], [80.4, 10195.0], [80.5, 10195.0], [80.6, 10287.0], [80.7, 10312.0], [80.8, 10312.0], [80.9, 10341.0], [81.0, 10341.0], [81.1, 10346.0], [81.2, 10417.0], [81.3, 10417.0], [81.4, 10433.0], [81.5, 10433.0], [81.6, 10527.0], [81.7, 10597.0], [81.8, 10597.0], [81.9, 10668.0], [82.0, 10668.0], [82.1, 10673.0], [82.2, 10684.0], [82.3, 10684.0], [82.4, 10773.0], [82.5, 10773.0], [82.6, 10845.0], [82.7, 10855.0], [82.8, 10855.0], [82.9, 10863.0], [83.0, 10863.0], [83.1, 10940.0], [83.2, 10949.0], [83.3, 10949.0], [83.4, 10975.0], [83.5, 10975.0], [83.6, 11126.0], [83.7, 11136.0], [83.8, 11136.0], [83.9, 11153.0], [84.0, 11153.0], [84.1, 11260.0], [84.2, 11278.0], [84.3, 11278.0], [84.4, 11373.0], [84.5, 11373.0], [84.6, 11544.0], [84.7, 11559.0], [84.8, 11559.0], [84.9, 11775.0], [85.0, 11775.0], [85.1, 11824.0], [85.2, 11888.0], [85.3, 11888.0], [85.4, 11983.0], [85.5, 11983.0], [85.6, 12063.0], [85.7, 12352.0], [85.8, 12352.0], [85.9, 12367.0], [86.0, 12367.0], [86.1, 12443.0], [86.2, 12660.0], [86.3, 12660.0], [86.4, 12697.0], [86.5, 12697.0], [86.6, 12756.0], [86.7, 12909.0], [86.8, 12909.0], [86.9, 13043.0], [87.0, 13043.0], [87.1, 13104.0], [87.2, 13159.0], [87.3, 13159.0], [87.4, 13237.0], [87.5, 13237.0], [87.6, 13299.0], [87.7, 13377.0], [87.8, 13377.0], [87.9, 13553.0], [88.0, 13553.0], [88.1, 13785.0], [88.2, 14057.0], [88.3, 14057.0], [88.4, 14496.0], [88.5, 14496.0], [88.6, 14618.0], [88.7, 14966.0], [88.8, 14966.0], [88.9, 15714.0], [89.0, 15714.0], [89.1, 16358.0], [89.2, 16379.0], [89.3, 16379.0], [89.4, 16825.0], [89.5, 16825.0], [89.6, 16828.0], [89.7, 16831.0], [89.8, 16831.0], [89.9, 16959.0], [90.0, 16959.0], [90.1, 16975.0], [90.2, 17008.0], [90.3, 17008.0], [90.4, 17073.0], [90.5, 17073.0], [90.6, 17080.0], [90.7, 17113.0], [90.8, 17113.0], [90.9, 17120.0], [91.0, 17120.0], [91.1, 17207.0], [91.2, 17312.0], [91.3, 17312.0], [91.4, 17333.0], [91.5, 17333.0], [91.6, 17344.0], [91.7, 17367.0], [91.8, 17367.0], [91.9, 17521.0], [92.0, 17521.0], [92.1, 17652.0], [92.2, 17661.0], [92.3, 17661.0], [92.4, 17694.0], [92.5, 17694.0], [92.6, 17819.0], [92.7, 17824.0], [92.8, 17824.0], [92.9, 17853.0], [93.0, 17853.0], [93.1, 17870.0], [93.2, 18184.0], [93.3, 18184.0], [93.4, 18262.0], [93.5, 18262.0], [93.6, 18296.0], [93.7, 18373.0], [93.8, 18373.0], [93.9, 18447.0], [94.0, 18447.0], [94.1, 18477.0], [94.2, 18784.0], [94.3, 18784.0], [94.4, 18894.0], [94.5, 18894.0], [94.6, 18917.0], [94.7, 19396.0], [94.8, 19396.0], [94.9, 19435.0], [95.0, 19435.0], [95.1, 19495.0], [95.2, 19522.0], [95.3, 19522.0], [95.4, 19592.0], [95.5, 19592.0], [95.6, 19649.0], [95.7, 19829.0], [95.8, 19829.0], [95.9, 19850.0], [96.0, 19850.0], [96.1, 19932.0], [96.2, 20231.0], [96.3, 20231.0], [96.4, 20511.0], [96.5, 20511.0], [96.6, 20891.0], [96.7, 21199.0], [96.8, 21199.0], [96.9, 21422.0], [97.0, 21422.0], [97.1, 22270.0], [97.2, 25566.0], [97.3, 25566.0], [97.4, 26221.0], [97.5, 26221.0], [97.6, 27971.0], [97.7, 28664.0], [97.8, 28664.0], [97.9, 32050.0], [98.0, 32050.0], [98.1, 32106.0], [98.2, 32222.0], [98.3, 32222.0], [98.4, 32608.0], [98.5, 32608.0], [98.6, 33915.0], [98.7, 35014.0], [98.8, 35014.0], [98.9, 35194.0], [99.0, 35194.0], [99.1, 38738.0], [99.2, 51349.0], [99.3, 51349.0], [99.4, 52340.0], [99.5, 52340.0], [99.6, 56968.0], [99.7, 58103.0], [99.8, 58103.0], [99.9, 63305.0], [100.0, 63305.0]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[0.0, 890.0], [0.1, 890.0], [0.2, 1224.0], [0.3, 1224.0], [0.4, 1243.0], [0.5, 1381.0], [0.6, 1381.0], [0.7, 1476.0], [0.8, 1476.0], [0.9, 1477.0], [1.0, 1478.0], [1.1, 1478.0], [1.2, 1487.0], [1.3, 1487.0], [1.4, 1750.0], [1.5, 1756.0], [1.6, 1756.0], [1.7, 1763.0], [1.8, 1763.0], [1.9, 1778.0], [2.0, 1783.0], [2.1, 1783.0], [2.2, 1785.0], [2.3, 1785.0], [2.4, 1786.0], [2.5, 1794.0], [2.6, 1794.0], [2.7, 1807.0], [2.8, 1807.0], [2.9, 1812.0], [3.0, 1814.0], [3.1, 1814.0], [3.2, 1987.0], [3.3, 1987.0], [3.4, 1989.0], [3.5, 2019.0], [3.6, 2019.0], [3.7, 2022.0], [3.8, 2022.0], [3.9, 2023.0], [4.0, 2038.0], [4.1, 2038.0], [4.2, 2041.0], [4.3, 2041.0], [4.4, 2044.0], [4.5, 2046.0], [4.6, 2046.0], [4.7, 2055.0], [4.8, 2055.0], [4.9, 2063.0], [5.0, 2070.0], [5.1, 2070.0], [5.2, 2074.0], [5.3, 2074.0], [5.4, 2082.0], [5.5, 2082.0], [5.6, 2103.0], [5.7, 2121.0], [5.8, 2121.0], [5.9, 2145.0], [6.0, 2145.0], [6.1, 2145.0], [6.2, 2158.0], [6.3, 2158.0], [6.4, 2161.0], [6.5, 2161.0], [6.6, 2164.0], [6.7, 2206.0], [6.8, 2206.0], [6.9, 2308.0], [7.0, 2308.0], [7.1, 2356.0], [7.2, 2357.0], [7.3, 2357.0], [7.4, 2394.0], [7.5, 2394.0], [7.6, 2404.0], [7.7, 2418.0], [7.8, 2418.0], [7.9, 2424.0], [8.0, 2424.0], [8.1, 2424.0], [8.2, 2436.0], [8.3, 2436.0], [8.4, 2449.0], [8.5, 2449.0], [8.6, 2485.0], [8.7, 2546.0], [8.8, 2546.0], [8.9, 2552.0], [9.0, 2552.0], [9.1, 2565.0], [9.2, 2580.0], [9.3, 2580.0], [9.4, 2631.0], [9.5, 2671.0], [9.6, 2671.0], [9.7, 2687.0], [9.8, 2687.0], [9.9, 2697.0], [10.0, 2719.0], [10.1, 2719.0], [10.2, 2726.0], [10.3, 2726.0], [10.4, 2731.0], [10.5, 2733.0], [10.6, 2733.0], [10.7, 2739.0], [10.8, 2739.0], [10.9, 2771.0], [11.0, 2784.0], [11.1, 2784.0], [11.2, 2804.0], [11.3, 2804.0], [11.4, 2806.0], [11.5, 2825.0], [11.6, 2825.0], [11.7, 2861.0], [11.8, 2861.0], [11.9, 2864.0], [12.0, 2864.0], [12.1, 2864.0], [12.2, 2887.0], [12.3, 2887.0], [12.4, 2895.0], [12.5, 2898.0], [12.6, 2898.0], [12.7, 2909.0], [12.8, 2909.0], [12.9, 2938.0], [13.0, 2940.0], [13.1, 2940.0], [13.2, 2952.0], [13.3, 2952.0], [13.4, 2959.0], [13.5, 2974.0], [13.6, 2974.0], [13.7, 2988.0], [13.8, 2988.0], [13.9, 2998.0], [14.0, 3002.0], [14.1, 3002.0], [14.2, 3009.0], [14.3, 3009.0], [14.4, 3024.0], [14.5, 3034.0], [14.6, 3034.0], [14.7, 3039.0], [14.8, 3039.0], [14.9, 3043.0], [15.0, 3044.0], [15.1, 3044.0], [15.2, 3052.0], [15.3, 3052.0], [15.4, 3056.0], [15.5, 3065.0], [15.6, 3065.0], [15.7, 3071.0], [15.8, 3071.0], [15.9, 3072.0], [16.0, 3076.0], [16.1, 3076.0], [16.2, 3077.0], [16.3, 3077.0], [16.4, 3114.0], [16.5, 3129.0], [16.6, 3129.0], [16.7, 3146.0], [16.8, 3146.0], [16.9, 3150.0], [17.0, 3190.0], [17.1, 3190.0], [17.2, 3200.0], [17.3, 3200.0], [17.4, 3203.0], [17.5, 3205.0], [17.6, 3205.0], [17.7, 3222.0], [17.8, 3222.0], [17.9, 3265.0], [18.0, 3287.0], [18.1, 3287.0], [18.2, 3297.0], [18.3, 3297.0], [18.4, 3307.0], [18.5, 3307.0], [18.6, 3307.0], [18.7, 3307.0], [18.8, 3307.0], [18.9, 3308.0], [19.0, 3368.0], [19.1, 3368.0], [19.2, 3373.0], [19.3, 3373.0], [19.4, 3377.0], [19.5, 3384.0], [19.6, 3384.0], [19.7, 3418.0], [19.8, 3418.0], [19.9, 3425.0], [20.0, 3425.0], [20.1, 3445.0], [20.2, 3469.0], [20.3, 3469.0], [20.4, 3473.0], [20.5, 3473.0], [20.6, 3474.0], [20.7, 3489.0], [20.8, 3489.0], [20.9, 3494.0], [21.0, 3494.0], [21.1, 3494.0], [21.2, 3504.0], [21.3, 3504.0], [21.4, 3520.0], [21.5, 3520.0], [21.6, 3535.0], [21.7, 3550.0], [21.8, 3550.0], [21.9, 3555.0], [22.0, 3555.0], [22.1, 3572.0], [22.2, 3584.0], [22.3, 3584.0], [22.4, 3592.0], [22.5, 3592.0], [22.6, 3597.0], [22.7, 3598.0], [22.8, 3598.0], [22.9, 3602.0], [23.0, 3602.0], [23.1, 3608.0], [23.2, 3613.0], [23.3, 3613.0], [23.4, 3616.0], [23.5, 3616.0], [23.6, 3653.0], [23.7, 3693.0], [23.8, 3693.0], [23.9, 3703.0], [24.0, 3703.0], [24.1, 3715.0], [24.2, 3717.0], [24.3, 3717.0], [24.4, 3718.0], [24.5, 3718.0], [24.6, 3727.0], [24.7, 3733.0], [24.8, 3733.0], [24.9, 3772.0], [25.0, 3772.0], [25.1, 3790.0], [25.2, 3797.0], [25.3, 3797.0], [25.4, 3813.0], [25.5, 3813.0], [25.6, 3845.0], [25.7, 3866.0], [25.8, 3866.0], [25.9, 3884.0], [26.0, 3884.0], [26.1, 3891.0], [26.2, 3916.0], [26.3, 3916.0], [26.4, 3921.0], [26.5, 3921.0], [26.6, 3925.0], [26.7, 3930.0], [26.8, 3930.0], [26.9, 3943.0], [27.0, 3943.0], [27.1, 3948.0], [27.2, 3975.0], [27.3, 3975.0], [27.4, 3981.0], [27.5, 3981.0], [27.6, 3982.0], [27.7, 3989.0], [27.8, 3989.0], [27.9, 3989.0], [28.0, 3989.0], [28.1, 3993.0], [28.2, 3998.0], [28.3, 3998.0], [28.4, 4009.0], [28.5, 4009.0], [28.6, 4010.0], [28.7, 4030.0], [28.8, 4030.0], [28.9, 4040.0], [29.0, 4040.0], [29.1, 4043.0], [29.2, 4046.0], [29.3, 4046.0], [29.4, 4048.0], [29.5, 4048.0], [29.6, 4051.0], [29.7, 4061.0], [29.8, 4061.0], [29.9, 4063.0], [30.0, 4063.0], [30.1, 4066.0], [30.2, 4071.0], [30.3, 4071.0], [30.4, 4096.0], [30.5, 4096.0], [30.6, 4116.0], [30.7, 4200.0], [30.8, 4200.0], [30.9, 4207.0], [31.0, 4207.0], [31.1, 4221.0], [31.2, 4242.0], [31.3, 4242.0], [31.4, 4248.0], [31.5, 4248.0], [31.6, 4249.0], [31.7, 4272.0], [31.8, 4272.0], [31.9, 4300.0], [32.0, 4300.0], [32.1, 4308.0], [32.2, 4315.0], [32.3, 4315.0], [32.4, 4316.0], [32.5, 4316.0], [32.6, 4317.0], [32.7, 4319.0], [32.8, 4319.0], [32.9, 4321.0], [33.0, 4321.0], [33.1, 4324.0], [33.2, 4329.0], [33.3, 4329.0], [33.4, 4331.0], [33.5, 4331.0], [33.6, 4333.0], [33.7, 4339.0], [33.8, 4339.0], [33.9, 4353.0], [34.0, 4353.0], [34.1, 4365.0], [34.2, 4370.0], [34.3, 4370.0], [34.4, 4382.0], [34.5, 4382.0], [34.6, 4400.0], [34.7, 4411.0], [34.8, 4411.0], [34.9, 4412.0], [35.0, 4412.0], [35.1, 4413.0], [35.2, 4419.0], [35.3, 4419.0], [35.4, 4420.0], [35.5, 4420.0], [35.6, 4422.0], [35.7, 4427.0], [35.8, 4427.0], [35.9, 4431.0], [36.0, 4431.0], [36.1, 4438.0], [36.2, 4460.0], [36.3, 4460.0], [36.4, 4460.0], [36.5, 4460.0], [36.6, 4468.0], [36.7, 4472.0], [36.8, 4472.0], [36.9, 4492.0], [37.0, 4492.0], [37.1, 4509.0], [37.2, 4512.0], [37.3, 4512.0], [37.4, 4539.0], [37.5, 4539.0], [37.6, 4550.0], [37.7, 4570.0], [37.8, 4570.0], [37.9, 4584.0], [38.0, 4584.0], [38.1, 4584.0], [38.2, 4585.0], [38.3, 4585.0], [38.4, 4587.0], [38.5, 4595.0], [38.6, 4595.0], [38.7, 4601.0], [38.8, 4601.0], [38.9, 4654.0], [39.0, 4664.0], [39.1, 4664.0], [39.2, 4678.0], [39.3, 4678.0], [39.4, 4682.0], [39.5, 4690.0], [39.6, 4690.0], [39.7, 4699.0], [39.8, 4699.0], [39.9, 4713.0], [40.0, 4713.0], [40.1, 4713.0], [40.2, 4736.0], [40.3, 4736.0], [40.4, 4753.0], [40.5, 4792.0], [40.6, 4792.0], [40.7, 4815.0], [40.8, 4815.0], [40.9, 4822.0], [41.0, 4823.0], [41.1, 4823.0], [41.2, 4829.0], [41.3, 4829.0], [41.4, 4831.0], [41.5, 4833.0], [41.6, 4833.0], [41.7, 4837.0], [41.8, 4837.0], [41.9, 4844.0], [42.0, 4846.0], [42.1, 4846.0], [42.2, 4882.0], [42.3, 4882.0], [42.4, 4883.0], [42.5, 4909.0], [42.6, 4909.0], [42.7, 4916.0], [42.8, 4916.0], [42.9, 4918.0], [43.0, 4963.0], [43.1, 4963.0], [43.2, 4974.0], [43.3, 4974.0], [43.4, 4976.0], [43.5, 4977.0], [43.6, 4977.0], [43.7, 4983.0], [43.8, 4983.0], [43.9, 4998.0], [44.0, 5047.0], [44.1, 5047.0], [44.2, 5052.0], [44.3, 5052.0], [44.4, 5052.0], [44.5, 5065.0], [44.6, 5065.0], [44.7, 5069.0], [44.8, 5069.0], [44.9, 5095.0], [45.0, 5104.0], [45.1, 5104.0], [45.2, 5104.0], [45.3, 5104.0], [45.4, 5122.0], [45.5, 5128.0], [45.6, 5128.0], [45.7, 5131.0], [45.8, 5131.0], [45.9, 5136.0], [46.0, 5144.0], [46.1, 5144.0], [46.2, 5148.0], [46.3, 5148.0], [46.4, 5158.0], [46.5, 5205.0], [46.6, 5205.0], [46.7, 5211.0], [46.8, 5211.0], [46.9, 5240.0], [47.0, 5250.0], [47.1, 5250.0], [47.2, 5253.0], [47.3, 5253.0], [47.4, 5280.0], [47.5, 5309.0], [47.6, 5309.0], [47.7, 5348.0], [47.8, 5348.0], [47.9, 5348.0], [48.0, 5361.0], [48.1, 5361.0], [48.2, 5366.0], [48.3, 5366.0], [48.4, 5376.0], [48.5, 5384.0], [48.6, 5384.0], [48.7, 5384.0], [48.8, 5384.0], [48.9, 5391.0], [49.0, 5407.0], [49.1, 5407.0], [49.2, 5459.0], [49.3, 5459.0], [49.4, 5470.0], [49.5, 5475.0], [49.6, 5475.0], [49.7, 5481.0], [49.8, 5481.0], [49.9, 5483.0], [50.0, 5511.0], [50.1, 5511.0], [50.2, 5519.0], [50.3, 5519.0], [50.4, 5526.0], [50.5, 5539.0], [50.6, 5539.0], [50.7, 5540.0], [50.8, 5540.0], [50.9, 5611.0], [51.0, 5641.0], [51.1, 5641.0], [51.2, 5653.0], [51.3, 5653.0], [51.4, 5695.0], [51.5, 5701.0], [51.6, 5701.0], [51.7, 5706.0], [51.8, 5706.0], [51.9, 5744.0], [52.0, 5756.0], [52.1, 5756.0], [52.2, 5768.0], [52.3, 5768.0], [52.4, 5797.0], [52.5, 5799.0], [52.6, 5799.0], [52.7, 5803.0], [52.8, 5803.0], [52.9, 5835.0], [53.0, 5843.0], [53.1, 5843.0], [53.2, 5846.0], [53.3, 5846.0], [53.4, 5854.0], [53.5, 5869.0], [53.6, 5869.0], [53.7, 5883.0], [53.8, 5883.0], [53.9, 5972.0], [54.0, 5986.0], [54.1, 5986.0], [54.2, 6003.0], [54.3, 6003.0], [54.4, 6036.0], [54.5, 6043.0], [54.6, 6043.0], [54.7, 6057.0], [54.8, 6057.0], [54.9, 6063.0], [55.0, 6072.0], [55.1, 6072.0], [55.2, 6129.0], [55.3, 6129.0], [55.4, 6129.0], [55.5, 6137.0], [55.6, 6137.0], [55.7, 6194.0], [55.8, 6194.0], [55.9, 6195.0], [56.0, 6209.0], [56.1, 6209.0], [56.2, 6228.0], [56.3, 6228.0], [56.4, 6235.0], [56.5, 6267.0], [56.6, 6267.0], [56.7, 6277.0], [56.8, 6277.0], [56.9, 6300.0], [57.0, 6315.0], [57.1, 6315.0], [57.2, 6318.0], [57.3, 6318.0], [57.4, 6321.0], [57.5, 6334.0], [57.6, 6334.0], [57.7, 6352.0], [57.8, 6352.0], [57.9, 6353.0], [58.0, 6397.0], [58.1, 6397.0], [58.2, 6411.0], [58.3, 6411.0], [58.4, 6427.0], [58.5, 6429.0], [58.6, 6429.0], [58.7, 6441.0], [58.8, 6441.0], [58.9, 6445.0], [59.0, 6462.0], [59.1, 6462.0], [59.2, 6468.0], [59.3, 6468.0], [59.4, 6541.0], [59.5, 6545.0], [59.6, 6545.0], [59.7, 6574.0], [59.8, 6574.0], [59.9, 6580.0], [60.0, 6598.0], [60.1, 6598.0], [60.2, 6657.0], [60.3, 6657.0], [60.4, 6665.0], [60.5, 6679.0], [60.6, 6679.0], [60.7, 6737.0], [60.8, 6737.0], [60.9, 6756.0], [61.0, 6831.0], [61.1, 6831.0], [61.2, 6879.0], [61.3, 6879.0], [61.4, 6890.0], [61.5, 6919.0], [61.6, 6919.0], [61.7, 6928.0], [61.8, 6928.0], [61.9, 6994.0], [62.0, 7030.0], [62.1, 7030.0], [62.2, 7035.0], [62.3, 7035.0], [62.4, 7064.0], [62.5, 7086.0], [62.6, 7086.0], [62.7, 7088.0], [62.8, 7088.0], [62.9, 7101.0], [63.0, 7133.0], [63.1, 7133.0], [63.2, 7149.0], [63.3, 7149.0], [63.4, 7201.0], [63.5, 7223.0], [63.6, 7223.0], [63.7, 7250.0], [63.8, 7250.0], [63.9, 7255.0], [64.0, 7291.0], [64.1, 7291.0], [64.2, 7301.0], [64.3, 7301.0], [64.4, 7317.0], [64.5, 7426.0], [64.6, 7426.0], [64.7, 7441.0], [64.8, 7441.0], [64.9, 7483.0], [65.0, 7507.0], [65.1, 7507.0], [65.2, 7525.0], [65.3, 7525.0], [65.4, 7535.0], [65.5, 7545.0], [65.6, 7545.0], [65.7, 7623.0], [65.8, 7623.0], [65.9, 7626.0], [66.0, 7636.0], [66.1, 7636.0], [66.2, 7677.0], [66.3, 7677.0], [66.4, 7699.0], [66.5, 7747.0], [66.6, 7747.0], [66.7, 7753.0], [66.8, 7753.0], [66.9, 7832.0], [67.0, 7861.0], [67.1, 7861.0], [67.2, 7876.0], [67.3, 7876.0], [67.4, 7881.0], [67.5, 7902.0], [67.6, 7902.0], [67.7, 7907.0], [67.8, 7907.0], [67.9, 7965.0], [68.0, 7985.0], [68.1, 7985.0], [68.2, 8000.0], [68.3, 8000.0], [68.4, 8007.0], [68.5, 8022.0], [68.6, 8022.0], [68.7, 8040.0], [68.8, 8040.0], [68.9, 8062.0], [69.0, 8081.0], [69.1, 8081.0], [69.2, 8082.0], [69.3, 8082.0], [69.4, 8087.0], [69.5, 8110.0], [69.6, 8110.0], [69.7, 8132.0], [69.8, 8132.0], [69.9, 8133.0], [70.0, 8147.0], [70.1, 8147.0], [70.2, 8152.0], [70.3, 8152.0], [70.4, 8160.0], [70.5, 8194.0], [70.6, 8194.0], [70.7, 8208.0], [70.8, 8208.0], [70.9, 8224.0], [71.0, 8225.0], [71.1, 8225.0], [71.2, 8271.0], [71.3, 8271.0], [71.4, 8289.0], [71.5, 8323.0], [71.6, 8323.0], [71.7, 8325.0], [71.8, 8325.0], [71.9, 8369.0], [72.0, 8377.0], [72.1, 8377.0], [72.2, 8420.0], [72.3, 8420.0], [72.4, 8423.0], [72.5, 8433.0], [72.6, 8433.0], [72.7, 8455.0], [72.8, 8455.0], [72.9, 8464.0], [73.0, 8533.0], [73.1, 8533.0], [73.2, 8548.0], [73.3, 8548.0], [73.4, 8606.0], [73.5, 8624.0], [73.6, 8624.0], [73.7, 8677.0], [73.8, 8677.0], [73.9, 8686.0], [74.0, 8733.0], [74.1, 8733.0], [74.2, 8798.0], [74.3, 8798.0], [74.4, 8814.0], [74.5, 8865.0], [74.6, 8865.0], [74.7, 8880.0], [74.8, 8880.0], [74.9, 8918.0], [75.0, 8990.0], [75.1, 8990.0], [75.2, 9142.0], [75.3, 9142.0], [75.4, 9148.0], [75.5, 9181.0], [75.6, 9181.0], [75.7, 9217.0], [75.8, 9217.0], [75.9, 9240.0], [76.0, 9240.0], [76.1, 9253.0], [76.2, 9268.0], [76.3, 9268.0], [76.4, 9287.0], [76.5, 9287.0], [76.6, 9294.0], [76.7, 9375.0], [76.8, 9375.0], [76.9, 9403.0], [77.0, 9403.0], [77.1, 9445.0], [77.2, 9476.0], [77.3, 9476.0], [77.4, 9527.0], [77.5, 9527.0], [77.6, 9536.0], [77.7, 9576.0], [77.8, 9576.0], [77.9, 9670.0], [78.0, 9670.0], [78.1, 9674.0], [78.2, 9680.0], [78.3, 9680.0], [78.4, 9706.0], [78.5, 9706.0], [78.6, 9782.0], [78.7, 9802.0], [78.8, 9802.0], [78.9, 9816.0], [79.0, 9816.0], [79.1, 9844.0], [79.2, 9852.0], [79.3, 9852.0], [79.4, 9894.0], [79.5, 9894.0], [79.6, 9941.0], [79.7, 9947.0], [79.8, 9947.0], [79.9, 9970.0], [80.0, 9970.0], [80.1, 10019.0], [80.2, 10027.0], [80.3, 10027.0], [80.4, 10028.0], [80.5, 10028.0], [80.6, 10094.0], [80.7, 10248.0], [80.8, 10248.0], [80.9, 10290.0], [81.0, 10290.0], [81.1, 10300.0], [81.2, 10460.0], [81.3, 10460.0], [81.4, 10694.0], [81.5, 10694.0], [81.6, 10727.0], [81.7, 10739.0], [81.8, 10739.0], [81.9, 10796.0], [82.0, 10796.0], [82.1, 10816.0], [82.2, 10885.0], [82.3, 10885.0], [82.4, 10919.0], [82.5, 10919.0], [82.6, 10922.0], [82.7, 10947.0], [82.8, 10947.0], [82.9, 10958.0], [83.0, 10958.0], [83.1, 11107.0], [83.2, 11124.0], [83.3, 11124.0], [83.4, 11148.0], [83.5, 11148.0], [83.6, 11533.0], [83.7, 11551.0], [83.8, 11551.0], [83.9, 11556.0], [84.0, 11556.0], [84.1, 11650.0], [84.2, 11666.0], [84.3, 11666.0], [84.4, 11691.0], [84.5, 11691.0], [84.6, 11699.0], [84.7, 11747.0], [84.8, 11747.0], [84.9, 11768.0], [85.0, 11768.0], [85.1, 11810.0], [85.2, 11841.0], [85.3, 11841.0], [85.4, 11923.0], [85.5, 11923.0], [85.6, 12018.0], [85.7, 12020.0], [85.8, 12020.0], [85.9, 12105.0], [86.0, 12105.0], [86.1, 12112.0], [86.2, 12291.0], [86.3, 12291.0], [86.4, 12301.0], [86.5, 12301.0], [86.6, 12343.0], [86.7, 12514.0], [86.8, 12514.0], [86.9, 12535.0], [87.0, 12535.0], [87.1, 12661.0], [87.2, 12749.0], [87.3, 12749.0], [87.4, 12752.0], [87.5, 12752.0], [87.6, 12910.0], [87.7, 12924.0], [87.8, 12924.0], [87.9, 13064.0], [88.0, 13064.0], [88.1, 13132.0], [88.2, 13205.0], [88.3, 13205.0], [88.4, 13279.0], [88.5, 13279.0], [88.6, 13345.0], [88.7, 13463.0], [88.8, 13463.0], [88.9, 13625.0], [89.0, 13625.0], [89.1, 13678.0], [89.2, 13702.0], [89.3, 13702.0], [89.4, 13907.0], [89.5, 13907.0], [89.6, 13992.0], [89.7, 13995.0], [89.8, 13995.0], [89.9, 14044.0], [90.0, 14044.0], [90.1, 14139.0], [90.2, 14311.0], [90.3, 14311.0], [90.4, 14329.0], [90.5, 14329.0], [90.6, 14365.0], [90.7, 14375.0], [90.8, 14375.0], [90.9, 14459.0], [91.0, 14459.0], [91.1, 14823.0], [91.2, 14865.0], [91.3, 14865.0], [91.4, 14928.0], [91.5, 14928.0], [91.6, 14986.0], [91.7, 15087.0], [91.8, 15087.0], [91.9, 15089.0], [92.0, 15089.0], [92.1, 15098.0], [92.2, 15163.0], [92.3, 15163.0], [92.4, 15575.0], [92.5, 15575.0], [92.6, 15576.0], [92.7, 15618.0], [92.8, 15618.0], [92.9, 15670.0], [93.0, 15670.0], [93.1, 15672.0], [93.2, 15676.0], [93.3, 15676.0], [93.4, 15685.0], [93.5, 15685.0], [93.6, 15827.0], [93.7, 16018.0], [93.8, 16018.0], [93.9, 16102.0], [94.0, 16102.0], [94.1, 16331.0], [94.2, 16538.0], [94.3, 16538.0], [94.4, 16573.0], [94.5, 16573.0], [94.6, 16878.0], [94.7, 16889.0], [94.8, 16889.0], [94.9, 16923.0], [95.0, 16923.0], [95.1, 17133.0], [95.2, 17547.0], [95.3, 17547.0], [95.4, 17581.0], [95.5, 17581.0], [95.6, 17707.0], [95.7, 17759.0], [95.8, 17759.0], [95.9, 17768.0], [96.0, 17768.0], [96.1, 18295.0], [96.2, 18420.0], [96.3, 18420.0], [96.4, 18538.0], [96.5, 18538.0], [96.6, 18545.0], [96.7, 18953.0], [96.8, 18953.0], [96.9, 19130.0], [97.0, 19130.0], [97.1, 19244.0], [97.2, 19459.0], [97.3, 19459.0], [97.4, 19964.0], [97.5, 19964.0], [97.6, 20765.0], [97.7, 20878.0], [97.8, 20878.0], [97.9, 21485.0], [98.0, 21485.0], [98.1, 21618.0], [98.2, 21944.0], [98.3, 21944.0], [98.4, 22287.0], [98.5, 22287.0], [98.6, 22946.0], [98.7, 24917.0], [98.8, 24917.0], [98.9, 28194.0], [99.0, 28194.0], [99.1, 34883.0], [99.2, 36194.0], [99.3, 36194.0], [99.4, 37343.0], [99.5, 37343.0], [99.6, 53829.0], [99.7, 56836.0], [99.8, 56836.0], [99.9, 60843.0], [100.0, 60843.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[0.0, 267.0], [0.1, 267.0], [0.2, 267.0], [0.3, 267.0], [0.4, 267.0], [0.5, 267.0], [0.6, 267.0], [0.7, 267.0], [0.8, 267.0], [0.9, 267.0], [1.0, 267.0], [1.1, 267.0], [1.2, 267.0], [1.3, 267.0], [1.4, 268.0], [1.5, 268.0], [1.6, 268.0], [1.7, 268.0], [1.8, 268.0], [1.9, 269.0], [2.0, 269.0], [2.1, 269.0], [2.2, 269.0], [2.3, 269.0], [2.4, 269.0], [2.5, 269.0], [2.6, 269.0], [2.7, 269.0], [2.8, 269.0], [2.9, 269.0], [3.0, 270.0], [3.1, 270.0], [3.2, 270.0], [3.3, 270.0], [3.4, 270.0], [3.5, 270.0], [3.6, 270.0], [3.7, 270.0], [3.8, 270.0], [3.9, 270.0], [4.0, 270.0], [4.1, 270.0], [4.2, 270.0], [4.3, 270.0], [4.4, 270.0], [4.5, 270.0], [4.6, 270.0], [4.7, 271.0], [4.8, 271.0], [4.9, 271.0], [5.0, 271.0], [5.1, 271.0], [5.2, 272.0], [5.3, 272.0], [5.4, 272.0], [5.5, 272.0], [5.6, 272.0], [5.7, 272.0], [5.8, 272.0], [5.9, 272.0], [6.0, 273.0], [6.1, 273.0], [6.2, 274.0], [6.3, 274.0], [6.4, 274.0], [6.5, 274.0], [6.6, 274.0], [6.7, 274.0], [6.8, 274.0], [6.9, 274.0], [7.0, 275.0], [7.1, 275.0], [7.2, 275.0], [7.3, 275.0], [7.4, 275.0], [7.5, 275.0], [7.6, 275.0], [7.7, 275.0], [7.8, 275.0], [7.9, 275.0], [8.0, 275.0], [8.1, 275.0], [8.2, 276.0], [8.3, 276.0], [8.4, 276.0], [8.5, 277.0], [8.6, 277.0], [8.7, 278.0], [8.8, 278.0], [8.9, 278.0], [9.0, 278.0], [9.1, 278.0], [9.2, 278.0], [9.3, 278.0], [9.4, 278.0], [9.5, 279.0], [9.6, 279.0], [9.7, 279.0], [9.8, 279.0], [9.9, 279.0], [10.0, 279.0], [10.1, 279.0], [10.2, 279.0], [10.3, 279.0], [10.4, 279.0], [10.5, 279.0], [10.6, 279.0], [10.7, 279.0], [10.8, 279.0], [10.9, 280.0], [11.0, 280.0], [11.1, 280.0], [11.2, 280.0], [11.3, 280.0], [11.4, 280.0], [11.5, 281.0], [11.6, 281.0], [11.7, 281.0], [11.8, 281.0], [11.9, 281.0], [12.0, 281.0], [12.1, 281.0], [12.2, 281.0], [12.3, 281.0], [12.4, 281.0], [12.5, 281.0], [12.6, 281.0], [12.7, 281.0], [12.8, 281.0], [12.9, 281.0], [13.0, 281.0], [13.1, 281.0], [13.2, 282.0], [13.3, 282.0], [13.4, 283.0], [13.5, 283.0], [13.6, 283.0], [13.7, 283.0], [13.8, 283.0], [13.9, 283.0], [14.0, 283.0], [14.1, 283.0], [14.2, 283.0], [14.3, 283.0], [14.4, 284.0], [14.5, 284.0], [14.6, 284.0], [14.7, 284.0], [14.8, 284.0], [14.9, 284.0], [15.0, 284.0], [15.1, 284.0], [15.2, 284.0], [15.3, 284.0], [15.4, 284.0], [15.5, 285.0], [15.6, 285.0], [15.7, 285.0], [15.8, 285.0], [15.9, 285.0], [16.0, 285.0], [16.1, 285.0], [16.2, 285.0], [16.3, 285.0], [16.4, 285.0], [16.5, 285.0], [16.6, 285.0], [16.7, 285.0], [16.8, 285.0], [16.9, 285.0], [17.0, 285.0], [17.1, 285.0], [17.2, 285.0], [17.3, 285.0], [17.4, 286.0], [17.5, 286.0], [17.6, 286.0], [17.7, 286.0], [17.8, 286.0], [17.9, 286.0], [18.0, 286.0], [18.1, 286.0], [18.2, 287.0], [18.3, 287.0], [18.4, 287.0], [18.5, 287.0], [18.6, 287.0], [18.7, 287.0], [18.8, 287.0], [18.9, 287.0], [19.0, 288.0], [19.1, 288.0], [19.2, 288.0], [19.3, 288.0], [19.4, 288.0], [19.5, 288.0], [19.6, 288.0], [19.7, 288.0], [19.8, 288.0], [19.9, 288.0], [20.0, 288.0], [20.1, 288.0], [20.2, 288.0], [20.3, 288.0], [20.4, 288.0], [20.5, 288.0], [20.6, 288.0], [20.7, 289.0], [20.8, 289.0], [20.9, 289.0], [21.0, 289.0], [21.1, 289.0], [21.2, 289.0], [21.3, 289.0], [21.4, 289.0], [21.5, 289.0], [21.6, 289.0], [21.7, 289.0], [21.8, 289.0], [21.9, 289.0], [22.0, 289.0], [22.1, 289.0], [22.2, 289.0], [22.3, 289.0], [22.4, 289.0], [22.5, 289.0], [22.6, 289.0], [22.7, 290.0], [22.8, 290.0], [22.9, 290.0], [23.0, 290.0], [23.1, 290.0], [23.2, 290.0], [23.3, 290.0], [23.4, 290.0], [23.5, 290.0], [23.6, 290.0], [23.7, 290.0], [23.8, 290.0], [23.9, 290.0], [24.0, 290.0], [24.1, 290.0], [24.2, 290.0], [24.3, 290.0], [24.4, 290.0], [24.5, 291.0], [24.6, 291.0], [24.7, 291.0], [24.8, 291.0], [24.9, 291.0], [25.0, 291.0], [25.1, 291.0], [25.2, 291.0], [25.3, 291.0], [25.4, 291.0], [25.5, 291.0], [25.6, 291.0], [25.7, 291.0], [25.8, 291.0], [25.9, 291.0], [26.0, 292.0], [26.1, 292.0], [26.2, 292.0], [26.3, 292.0], [26.4, 292.0], [26.5, 292.0], [26.6, 292.0], [26.7, 292.0], [26.8, 292.0], [26.9, 292.0], [27.0, 292.0], [27.1, 292.0], [27.2, 292.0], [27.3, 292.0], [27.4, 292.0], [27.5, 292.0], [27.6, 292.0], [27.7, 292.0], [27.8, 292.0], [27.9, 292.0], [28.0, 292.0], [28.1, 292.0], [28.2, 292.0], [28.3, 292.0], [28.4, 292.0], [28.5, 292.0], [28.6, 292.0], [28.7, 292.0], [28.8, 292.0], [28.9, 293.0], [29.0, 293.0], [29.1, 293.0], [29.2, 293.0], [29.3, 293.0], [29.4, 293.0], [29.5, 293.0], [29.6, 293.0], [29.7, 293.0], [29.8, 293.0], [29.9, 293.0], [30.0, 293.0], [30.1, 293.0], [30.2, 293.0], [30.3, 293.0], [30.4, 293.0], [30.5, 293.0], [30.6, 293.0], [30.7, 293.0], [30.8, 293.0], [30.9, 293.0], [31.0, 293.0], [31.1, 293.0], [31.2, 293.0], [31.3, 293.0], [31.4, 293.0], [31.5, 293.0], [31.6, 293.0], [31.7, 293.0], [31.8, 293.0], [31.9, 293.0], [32.0, 293.0], [32.1, 293.0], [32.2, 293.0], [32.3, 293.0], [32.4, 293.0], [32.5, 294.0], [32.6, 294.0], [32.7, 294.0], [32.8, 294.0], [32.9, 294.0], [33.0, 294.0], [33.1, 294.0], [33.2, 294.0], [33.3, 294.0], [33.4, 294.0], [33.5, 294.0], [33.6, 294.0], [33.7, 294.0], [33.8, 294.0], [33.9, 294.0], [34.0, 294.0], [34.1, 294.0], [34.2, 294.0], [34.3, 294.0], [34.4, 294.0], [34.5, 294.0], [34.6, 294.0], [34.7, 294.0], [34.8, 294.0], [34.9, 294.0], [35.0, 294.0], [35.1, 294.0], [35.2, 294.0], [35.3, 294.0], [35.4, 294.0], [35.5, 294.0], [35.6, 294.0], [35.7, 294.0], [35.8, 294.0], [35.9, 294.0], [36.0, 294.0], [36.1, 294.0], [36.2, 294.0], [36.3, 294.0], [36.4, 294.0], [36.5, 294.0], [36.6, 294.0], [36.7, 294.0], [36.8, 294.0], [36.9, 294.0], [37.0, 294.0], [37.1, 294.0], [37.2, 294.0], [37.3, 294.0], [37.4, 294.0], [37.5, 294.0], [37.6, 294.0], [37.7, 294.0], [37.8, 294.0], [37.9, 295.0], [38.0, 295.0], [38.1, 295.0], [38.2, 295.0], [38.3, 295.0], [38.4, 295.0], [38.5, 295.0], [38.6, 295.0], [38.7, 295.0], [38.8, 295.0], [38.9, 295.0], [39.0, 295.0], [39.1, 295.0], [39.2, 295.0], [39.3, 295.0], [39.4, 295.0], [39.5, 295.0], [39.6, 295.0], [39.7, 295.0], [39.8, 295.0], [39.9, 295.0], [40.0, 295.0], [40.1, 295.0], [40.2, 295.0], [40.3, 295.0], [40.4, 295.0], [40.5, 295.0], [40.6, 295.0], [40.7, 295.0], [40.8, 295.0], [40.9, 295.0], [41.0, 295.0], [41.1, 295.0], [41.2, 295.0], [41.3, 295.0], [41.4, 296.0], [41.5, 296.0], [41.6, 296.0], [41.7, 296.0], [41.8, 296.0], [41.9, 296.0], [42.0, 296.0], [42.1, 296.0], [42.2, 296.0], [42.3, 296.0], [42.4, 296.0], [42.5, 296.0], [42.6, 296.0], [42.7, 296.0], [42.8, 296.0], [42.9, 296.0], [43.0, 296.0], [43.1, 296.0], [43.2, 296.0], [43.3, 296.0], [43.4, 296.0], [43.5, 296.0], [43.6, 296.0], [43.7, 296.0], [43.8, 296.0], [43.9, 296.0], [44.0, 296.0], [44.1, 296.0], [44.2, 296.0], [44.3, 296.0], [44.4, 296.0], [44.5, 296.0], [44.6, 296.0], [44.7, 296.0], [44.8, 296.0], [44.9, 296.0], [45.0, 296.0], [45.1, 296.0], [45.2, 296.0], [45.3, 296.0], [45.4, 296.0], [45.5, 296.0], [45.6, 296.0], [45.7, 296.0], [45.8, 296.0], [45.9, 296.0], [46.0, 296.0], [46.1, 296.0], [46.2, 296.0], [46.3, 296.0], [46.4, 296.0], [46.5, 296.0], [46.6, 296.0], [46.7, 296.0], [46.8, 296.0], [46.9, 296.0], [47.0, 296.0], [47.1, 296.0], [47.2, 296.0], [47.3, 296.0], [47.4, 296.0], [47.5, 296.0], [47.6, 296.0], [47.7, 296.0], [47.8, 296.0], [47.9, 297.0], [48.0, 297.0], [48.1, 297.0], [48.2, 297.0], [48.3, 297.0], [48.4, 297.0], [48.5, 297.0], [48.6, 297.0], [48.7, 297.0], [48.8, 297.0], [48.9, 297.0], [49.0, 297.0], [49.1, 297.0], [49.2, 297.0], [49.3, 297.0], [49.4, 297.0], [49.5, 297.0], [49.6, 297.0], [49.7, 297.0], [49.8, 297.0], [49.9, 297.0], [50.0, 297.0], [50.1, 297.0], [50.2, 297.0], [50.3, 297.0], [50.4, 297.0], [50.5, 297.0], [50.6, 297.0], [50.7, 297.0], [50.8, 297.0], [50.9, 297.0], [51.0, 297.0], [51.1, 297.0], [51.2, 297.0], [51.3, 297.0], [51.4, 297.0], [51.5, 297.0], [51.6, 297.0], [51.7, 297.0], [51.8, 297.0], [51.9, 297.0], [52.0, 297.0], [52.1, 297.0], [52.2, 297.0], [52.3, 297.0], [52.4, 297.0], [52.5, 297.0], [52.6, 297.0], [52.7, 297.0], [52.8, 297.0], [52.9, 297.0], [53.0, 297.0], [53.1, 297.0], [53.2, 297.0], [53.3, 297.0], [53.4, 298.0], [53.5, 298.0], [53.6, 298.0], [53.7, 298.0], [53.8, 298.0], [53.9, 298.0], [54.0, 298.0], [54.1, 298.0], [54.2, 298.0], [54.3, 298.0], [54.4, 298.0], [54.5, 298.0], [54.6, 298.0], [54.7, 298.0], [54.8, 298.0], [54.9, 298.0], [55.0, 298.0], [55.1, 298.0], [55.2, 298.0], [55.3, 298.0], [55.4, 298.0], [55.5, 298.0], [55.6, 298.0], [55.7, 298.0], [55.8, 298.0], [55.9, 298.0], [56.0, 298.0], [56.1, 298.0], [56.2, 298.0], [56.3, 298.0], [56.4, 298.0], [56.5, 298.0], [56.6, 298.0], [56.7, 298.0], [56.8, 298.0], [56.9, 298.0], [57.0, 298.0], [57.1, 298.0], [57.2, 298.0], [57.3, 298.0], [57.4, 298.0], [57.5, 298.0], [57.6, 298.0], [57.7, 298.0], [57.8, 298.0], [57.9, 298.0], [58.0, 298.0], [58.1, 298.0], [58.2, 298.0], [58.3, 298.0], [58.4, 298.0], [58.5, 298.0], [58.6, 298.0], [58.7, 298.0], [58.8, 298.0], [58.9, 298.0], [59.0, 298.0], [59.1, 298.0], [59.2, 298.0], [59.3, 298.0], [59.4, 298.0], [59.5, 299.0], [59.6, 299.0], [59.7, 299.0], [59.8, 299.0], [59.9, 299.0], [60.0, 299.0], [60.1, 299.0], [60.2, 299.0], [60.3, 299.0], [60.4, 299.0], [60.5, 299.0], [60.6, 299.0], [60.7, 299.0], [60.8, 299.0], [60.9, 299.0], [61.0, 299.0], [61.1, 299.0], [61.2, 299.0], [61.3, 299.0], [61.4, 299.0], [61.5, 299.0], [61.6, 299.0], [61.7, 299.0], [61.8, 299.0], [61.9, 299.0], [62.0, 299.0], [62.1, 299.0], [62.2, 299.0], [62.3, 299.0], [62.4, 299.0], [62.5, 299.0], [62.6, 299.0], [62.7, 299.0], [62.8, 299.0], [62.9, 299.0], [63.0, 299.0], [63.1, 299.0], [63.2, 299.0], [63.3, 299.0], [63.4, 299.0], [63.5, 300.0], [63.6, 300.0], [63.7, 300.0], [63.8, 300.0], [63.9, 300.0], [64.0, 300.0], [64.1, 300.0], [64.2, 300.0], [64.3, 300.0], [64.4, 300.0], [64.5, 300.0], [64.6, 300.0], [64.7, 300.0], [64.8, 300.0], [64.9, 300.0], [65.0, 300.0], [65.1, 300.0], [65.2, 300.0], [65.3, 300.0], [65.4, 300.0], [65.5, 300.0], [65.6, 300.0], [65.7, 300.0], [65.8, 300.0], [65.9, 300.0], [66.0, 300.0], [66.1, 300.0], [66.2, 300.0], [66.3, 300.0], [66.4, 300.0], [66.5, 300.0], [66.6, 300.0], [66.7, 300.0], [66.8, 300.0], [66.9, 300.0], [67.0, 300.0], [67.1, 300.0], [67.2, 300.0], [67.3, 300.0], [67.4, 300.0], [67.5, 301.0], [67.6, 301.0], [67.7, 301.0], [67.8, 301.0], [67.9, 301.0], [68.0, 301.0], [68.1, 301.0], [68.2, 301.0], [68.3, 301.0], [68.4, 301.0], [68.5, 301.0], [68.6, 301.0], [68.7, 301.0], [68.8, 301.0], [68.9, 301.0], [69.0, 301.0], [69.1, 301.0], [69.2, 301.0], [69.3, 301.0], [69.4, 301.0], [69.5, 301.0], [69.6, 301.0], [69.7, 301.0], [69.8, 301.0], [69.9, 301.0], [70.0, 301.0], [70.1, 301.0], [70.2, 301.0], [70.3, 301.0], [70.4, 301.0], [70.5, 301.0], [70.6, 301.0], [70.7, 301.0], [70.8, 301.0], [70.9, 301.0], [71.0, 301.0], [71.1, 301.0], [71.2, 301.0], [71.3, 301.0], [71.4, 301.0], [71.5, 301.0], [71.6, 301.0], [71.7, 302.0], [71.8, 302.0], [71.9, 302.0], [72.0, 302.0], [72.1, 302.0], [72.2, 302.0], [72.3, 302.0], [72.4, 302.0], [72.5, 302.0], [72.6, 302.0], [72.7, 302.0], [72.8, 302.0], [72.9, 302.0], [73.0, 302.0], [73.1, 302.0], [73.2, 302.0], [73.3, 302.0], [73.4, 302.0], [73.5, 302.0], [73.6, 302.0], [73.7, 302.0], [73.8, 302.0], [73.9, 303.0], [74.0, 303.0], [74.1, 303.0], [74.2, 303.0], [74.3, 303.0], [74.4, 303.0], [74.5, 303.0], [74.6, 303.0], [74.7, 303.0], [74.8, 303.0], [74.9, 303.0], [75.0, 303.0], [75.1, 303.0], [75.2, 303.0], [75.3, 303.0], [75.4, 303.0], [75.5, 303.0], [75.6, 303.0], [75.7, 304.0], [75.8, 304.0], [75.9, 304.0], [76.0, 304.0], [76.1, 304.0], [76.2, 304.0], [76.3, 304.0], [76.4, 304.0], [76.5, 304.0], [76.6, 304.0], [76.7, 305.0], [76.8, 305.0], [76.9, 305.0], [77.0, 305.0], [77.1, 305.0], [77.2, 305.0], [77.3, 305.0], [77.4, 305.0], [77.5, 305.0], [77.6, 305.0], [77.7, 305.0], [77.8, 305.0], [77.9, 306.0], [78.0, 306.0], [78.1, 306.0], [78.2, 306.0], [78.3, 306.0], [78.4, 306.0], [78.5, 306.0], [78.6, 306.0], [78.7, 307.0], [78.8, 307.0], [78.9, 307.0], [79.0, 307.0], [79.1, 307.0], [79.2, 307.0], [79.3, 307.0], [79.4, 308.0], [79.5, 308.0], [79.6, 308.0], [79.7, 308.0], [79.8, 308.0], [79.9, 309.0], [80.0, 309.0], [80.1, 309.0], [80.2, 311.0], [80.3, 311.0], [80.4, 311.0], [80.5, 312.0], [80.6, 312.0], [80.7, 312.0], [80.8, 312.0], [80.9, 313.0], [81.0, 313.0], [81.1, 313.0], [81.2, 314.0], [81.3, 314.0], [81.4, 316.0], [81.5, 318.0], [81.6, 318.0], [81.7, 320.0], [81.8, 320.0], [81.9, 321.0], [82.0, 321.0], [82.1, 326.0], [82.2, 326.0], [82.3, 326.0], [82.4, 328.0], [82.5, 328.0], [82.6, 329.0], [82.7, 330.0], [82.8, 330.0], [82.9, 331.0], [83.0, 331.0], [83.1, 333.0], [83.2, 333.0], [83.3, 333.0], [83.4, 333.0], [83.5, 333.0], [83.6, 334.0], [83.7, 335.0], [83.8, 335.0], [83.9, 336.0], [84.0, 336.0], [84.1, 336.0], [84.2, 336.0], [84.3, 336.0], [84.4, 341.0], [84.5, 341.0], [84.6, 345.0], [84.7, 349.0], [84.8, 349.0], [84.9, 359.0], [85.0, 359.0], [85.1, 359.0], [85.2, 361.0], [85.3, 361.0], [85.4, 381.0], [85.5, 381.0], [85.6, 383.0], [85.7, 391.0], [85.8, 391.0], [85.9, 401.0], [86.0, 401.0], [86.1, 407.0], [86.2, 409.0], [86.3, 409.0], [86.4, 415.0], [86.5, 415.0], [86.6, 531.0], [86.7, 563.0], [86.8, 563.0], [86.9, 581.0], [87.0, 581.0], [87.1, 583.0], [87.2, 585.0], [87.3, 585.0], [87.4, 588.0], [87.5, 588.0], [87.6, 593.0], [87.7, 620.0], [87.8, 620.0], [87.9, 669.0], [88.0, 669.0], [88.1, 670.0], [88.2, 788.0], [88.3, 788.0], [88.4, 816.0], [88.5, 816.0], [88.6, 817.0], [88.7, 823.0], [88.8, 823.0], [88.9, 829.0], [89.0, 829.0], [89.1, 835.0], [89.2, 837.0], [89.3, 837.0], [89.4, 863.0], [89.5, 863.0], [89.6, 877.0], [89.7, 878.0], [89.8, 878.0], [89.9, 889.0], [90.0, 889.0], [90.1, 892.0], [90.2, 893.0], [90.3, 893.0], [90.4, 902.0], [90.5, 902.0], [90.6, 906.0], [90.7, 908.0], [90.8, 908.0], [90.9, 910.0], [91.0, 910.0], [91.1, 910.0], [91.2, 911.0], [91.3, 911.0], [91.4, 912.0], [91.5, 912.0], [91.6, 913.0], [91.7, 915.0], [91.8, 915.0], [91.9, 919.0], [92.0, 919.0], [92.1, 921.0], [92.2, 921.0], [92.3, 921.0], [92.4, 923.0], [92.5, 923.0], [92.6, 929.0], [92.7, 948.0], [92.8, 948.0], [92.9, 952.0], [93.0, 952.0], [93.1, 953.0], [93.2, 956.0], [93.3, 956.0], [93.4, 967.0], [93.5, 967.0], [93.6, 973.0], [93.7, 976.0], [93.8, 976.0], [93.9, 1012.0], [94.0, 1012.0], [94.1, 1020.0], [94.2, 1086.0], [94.3, 1086.0], [94.4, 1103.0], [94.5, 1103.0], [94.6, 1103.0], [94.7, 1106.0], [94.8, 1106.0], [94.9, 1114.0], [95.0, 1114.0], [95.1, 1117.0], [95.2, 1123.0], [95.3, 1123.0], [95.4, 1136.0], [95.5, 1136.0], [95.6, 1141.0], [95.7, 1142.0], [95.8, 1142.0], [95.9, 1146.0], [96.0, 1146.0], [96.1, 1152.0], [96.2, 1153.0], [96.3, 1153.0], [96.4, 1177.0], [96.5, 1177.0], [96.6, 1179.0], [96.7, 1184.0], [96.8, 1184.0], [96.9, 1192.0], [97.0, 1192.0], [97.1, 1238.0], [97.2, 1370.0], [97.3, 1370.0], [97.4, 1380.0], [97.5, 1380.0], [97.6, 1390.0], [97.7, 1405.0], [97.8, 1405.0], [97.9, 1458.0], [98.0, 1458.0], [98.1, 1495.0], [98.2, 1509.0], [98.3, 1509.0], [98.4, 1519.0], [98.5, 1519.0], [98.6, 1560.0], [98.7, 1571.0], [98.8, 1571.0], [98.9, 1579.0], [99.0, 1579.0], [99.1, 1628.0], [99.2, 1658.0], [99.3, 1658.0], [99.4, 1747.0], [99.5, 1747.0], [99.6, 2219.0], [99.7, 2402.0], [99.8, 2402.0], [99.9, 2856.0], [100.0, 2856.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 381.0, "series": [{"data": [[33900.0, 1.0], [35100.0, 1.0], [38700.0, 1.0], [52300.0, 1.0], [51300.0, 1.0], [56900.0, 1.0], [58100.0, 1.0], [63300.0, 1.0], [1100.0, 3.0], [1200.0, 6.0], [1300.0, 3.0], [1500.0, 2.0], [1700.0, 1.0], [1800.0, 3.0], [1900.0, 3.0], [2000.0, 7.0], [2100.0, 7.0], [2200.0, 5.0], [2300.0, 5.0], [2400.0, 4.0], [2500.0, 2.0], [2600.0, 2.0], [2700.0, 4.0], [2800.0, 6.0], [2900.0, 6.0], [3000.0, 13.0], [3100.0, 10.0], [3300.0, 12.0], [3200.0, 10.0], [3400.0, 9.0], [3500.0, 9.0], [3600.0, 10.0], [3700.0, 7.0], [3800.0, 7.0], [3900.0, 11.0], [4000.0, 9.0], [4200.0, 7.0], [4300.0, 6.0], [4100.0, 7.0], [4400.0, 9.0], [4500.0, 11.0], [4600.0, 4.0], [4700.0, 11.0], [4800.0, 6.0], [4900.0, 9.0], [5100.0, 11.0], [5000.0, 6.0], [5300.0, 8.0], [5200.0, 12.0], [5500.0, 5.0], [5600.0, 8.0], [5400.0, 7.0], [5700.0, 7.0], [5800.0, 6.0], [5900.0, 15.0], [6000.0, 5.0], [6100.0, 5.0], [6200.0, 5.0], [6300.0, 4.0], [6400.0, 8.0], [6500.0, 15.0], [6600.0, 3.0], [6700.0, 6.0], [6800.0, 6.0], [6900.0, 14.0], [7000.0, 4.0], [7100.0, 1.0], [7300.0, 3.0], [7400.0, 2.0], [7200.0, 4.0], [7600.0, 2.0], [7800.0, 6.0], [7900.0, 2.0], [7700.0, 3.0], [8100.0, 1.0], [8000.0, 3.0], [8400.0, 2.0], [8200.0, 2.0], [8600.0, 2.0], [8500.0, 2.0], [8700.0, 2.0], [8900.0, 3.0], [9000.0, 3.0], [9200.0, 3.0], [8800.0, 2.0], [9100.0, 1.0], [9400.0, 5.0], [9500.0, 5.0], [9300.0, 3.0], [9600.0, 2.0], [9700.0, 2.0], [9800.0, 2.0], [9900.0, 2.0], [10200.0, 1.0], [10000.0, 3.0], [10100.0, 4.0], [10400.0, 2.0], [10600.0, 3.0], [10500.0, 2.0], [10300.0, 3.0], [10700.0, 1.0], [11100.0, 3.0], [10800.0, 3.0], [11200.0, 2.0], [10900.0, 3.0], [11500.0, 2.0], [11300.0, 1.0], [11700.0, 1.0], [11900.0, 1.0], [11800.0, 2.0], [12000.0, 1.0], [12300.0, 2.0], [12600.0, 2.0], [12400.0, 1.0], [12700.0, 1.0], [13100.0, 2.0], [12900.0, 1.0], [13000.0, 1.0], [13300.0, 1.0], [13200.0, 2.0], [13700.0, 1.0], [13500.0, 1.0], [14000.0, 1.0], [14600.0, 1.0], [14400.0, 1.0], [14900.0, 1.0], [15700.0, 1.0], [16300.0, 2.0], [17300.0, 4.0], [17000.0, 3.0], [17200.0, 1.0], [16800.0, 3.0], [17100.0, 2.0], [16900.0, 2.0], [18100.0, 1.0], [18200.0, 2.0], [17800.0, 4.0], [17600.0, 3.0], [18400.0, 2.0], [17500.0, 1.0], [18300.0, 1.0], [19400.0, 2.0], [18900.0, 1.0], [18700.0, 1.0], [18800.0, 1.0], [19300.0, 1.0], [19900.0, 1.0], [19800.0, 2.0], [19500.0, 2.0], [19600.0, 1.0], [20200.0, 1.0], [20800.0, 1.0], [21100.0, 1.0], [21400.0, 1.0], [20500.0, 1.0], [22200.0, 1.0], [25500.0, 1.0], [26200.0, 1.0], [27900.0, 1.0], [28600.0, 1.0], [32100.0, 1.0], [32600.0, 1.0], [32200.0, 1.0], [32000.0, 1.0], [35000.0, 1.0]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[36100.0, 1.0], [37300.0, 1.0], [800.0, 1.0], [1200.0, 2.0], [1300.0, 1.0], [1400.0, 4.0], [1700.0, 8.0], [1800.0, 3.0], [1900.0, 2.0], [2000.0, 12.0], [2100.0, 7.0], [2200.0, 1.0], [2300.0, 4.0], [2400.0, 7.0], [2500.0, 4.0], [2600.0, 4.0], [2800.0, 9.0], [2700.0, 7.0], [2900.0, 8.0], [3000.0, 14.0], [3100.0, 5.0], [3200.0, 7.0], [3300.0, 8.0], [3400.0, 9.0], [3500.0, 10.0], [3600.0, 6.0], [3700.0, 9.0], [3800.0, 5.0], [3900.0, 13.0], [4000.0, 13.0], [4200.0, 7.0], [4100.0, 1.0], [4300.0, 16.0], [4400.0, 15.0], [4500.0, 10.0], [4600.0, 7.0], [4700.0, 5.0], [4800.0, 11.0], [4900.0, 9.0], [5100.0, 9.0], [5000.0, 6.0], [5300.0, 9.0], [5200.0, 6.0], [5600.0, 4.0], [5500.0, 5.0], [5400.0, 6.0], [5700.0, 7.0], [5800.0, 7.0], [6100.0, 5.0], [6000.0, 6.0], [5900.0, 2.0], [6300.0, 8.0], [6200.0, 5.0], [6400.0, 7.0], [6600.0, 3.0], [6500.0, 5.0], [6900.0, 3.0], [6700.0, 2.0], [6800.0, 3.0], [7100.0, 3.0], [7000.0, 5.0], [7200.0, 5.0], [7400.0, 3.0], [7300.0, 2.0], [7600.0, 5.0], [7500.0, 4.0], [7800.0, 4.0], [7900.0, 4.0], [7700.0, 2.0], [8000.0, 8.0], [8100.0, 7.0], [8300.0, 4.0], [8700.0, 2.0], [8500.0, 2.0], [8200.0, 5.0], [8600.0, 4.0], [8400.0, 5.0], [8900.0, 2.0], [9200.0, 6.0], [8800.0, 3.0], [9100.0, 3.0], [9500.0, 3.0], [9600.0, 3.0], [9400.0, 3.0], [9700.0, 2.0], [9300.0, 1.0], [10000.0, 4.0], [9800.0, 5.0], [10200.0, 2.0], [9900.0, 3.0], [10400.0, 1.0], [10300.0, 1.0], [10600.0, 1.0], [10700.0, 3.0], [10900.0, 4.0], [10800.0, 2.0], [11100.0, 3.0], [11500.0, 3.0], [11700.0, 2.0], [11600.0, 4.0], [12000.0, 2.0], [12100.0, 2.0], [11800.0, 2.0], [12200.0, 1.0], [11900.0, 1.0], [12700.0, 2.0], [12300.0, 2.0], [12500.0, 2.0], [12600.0, 1.0], [12900.0, 2.0], [13200.0, 2.0], [13300.0, 1.0], [13000.0, 1.0], [13100.0, 1.0], [13700.0, 1.0], [13600.0, 2.0], [13400.0, 1.0], [14300.0, 4.0], [14100.0, 1.0], [13900.0, 3.0], [14000.0, 1.0], [14800.0, 2.0], [14400.0, 1.0], [15000.0, 3.0], [14900.0, 2.0], [15100.0, 1.0], [15600.0, 5.0], [15500.0, 2.0], [15800.0, 1.0], [16300.0, 1.0], [16000.0, 1.0], [16100.0, 1.0], [16500.0, 2.0], [16800.0, 2.0], [17100.0, 1.0], [16900.0, 1.0], [18200.0, 1.0], [17700.0, 3.0], [17500.0, 2.0], [18400.0, 1.0], [19100.0, 1.0], [18500.0, 2.0], [18900.0, 1.0], [19400.0, 1.0], [19200.0, 1.0], [19900.0, 1.0], [20700.0, 1.0], [21400.0, 1.0], [20800.0, 1.0], [21900.0, 1.0], [22200.0, 1.0], [21600.0, 1.0], [22900.0, 1.0], [24900.0, 1.0], [28100.0, 1.0], [34800.0, 1.0], [53800.0, 1.0], [56800.0, 1.0], [60800.0, 1.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[2200.0, 1.0], [2400.0, 1.0], [600.0, 3.0], [2800.0, 1.0], [700.0, 1.0], [200.0, 381.0], [800.0, 12.0], [900.0, 21.0], [1000.0, 3.0], [1100.0, 16.0], [300.0, 134.0], [1200.0, 1.0], [1300.0, 3.0], [1400.0, 3.0], [1500.0, 5.0], [1600.0, 2.0], [400.0, 4.0], [1700.0, 1.0], [500.0, 7.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 63300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 90.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1191.0, "series": [{"data": [[0.0, 519.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 90.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1191.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.25, "minX": 1.70943558E12, "maxY": 358.7500000000001, "series": [{"data": [[1.70943564E12, 350.9066901408449], [1.70943558E12, 358.7500000000001], [1.7094357E12, 1.25]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7094357E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 267.0, "minX": 1.0, "maxY": 63305.0, "series": [{"data": [[8.0, 54690.0], [15.0, 38738.0], [21.0, 33915.0], [23.0, 32050.0], [24.0, 32222.0], [27.0, 32608.0], [30.0, 32957.333333333336], [33.0, 32106.0], [37.0, 26221.0], [43.0, 25566.0], [65.0, 27971.0], [75.0, 17824.0], [74.0, 22270.0], [81.0, 17690.5], [80.0, 16975.0], [85.0, 18911.5], [91.0, 19850.0], [89.0, 16862.5], [92.0, 17521.0], [97.0, 17113.0], [105.0, 18240.5], [109.0, 21422.0], [112.0, 17120.0], [118.0, 17073.0], [116.0, 19396.0], [121.0, 19246.5], [126.0, 15063.5], [131.0, 17661.0], [142.0, 19649.0], [141.0, 17694.0], [140.0, 18447.0], [151.0, 18894.0], [150.0, 19435.0], [147.0, 13159.0], [165.0, 16831.0], [175.0, 16379.0], [172.0, 16979.333333333332], [169.0, 21199.0], [190.0, 12697.0], [189.0, 20891.0], [187.0, 17652.0], [185.0, 18165.0], [198.0, 13377.0], [203.0, 16825.0], [202.0, 17653.0], [214.0, 17207.0], [222.0, 19932.0], [220.0, 17080.0], [218.0, 19829.0], [217.0, 17870.0], [225.0, 17819.0], [239.0, 11775.0], [238.0, 11888.0], [235.0, 13043.0], [234.0, 14057.0], [243.0, 16125.5], [242.0, 9771.0], [254.0, 12909.0], [269.0, 9454.0], [264.0, 15224.0], [263.0, 9769.0], [256.0, 18296.0], [278.0, 4400.0], [274.0, 3883.0], [286.0, 2442.0], [275.0, 9863.0], [290.0, 4049.0], [295.0, 2664.0], [296.0, 3675.0], [301.0, 3009.0], [302.0, 8079.0], [299.0, 10684.0], [289.0, 18184.0], [311.0, 4080.0], [312.0, 4282.0], [314.0, 2747.0], [318.0, 9271.0], [315.0, 13553.0], [306.0, 17333.0], [327.0, 3974.0], [328.0, 7855.0], [332.0, 4990.0], [334.0, 10203.5], [336.0, 3794.0], [339.0, 3917.0], [340.0, 8705.0], [346.0, 4339.8], [349.0, 6159.2], [338.0, 9859.666666666666], [364.0, 4358.0], [352.0, 4994.2], [353.0, 4482.666666666667], [366.0, 1312.0], [367.0, 4830.5], [357.0, 3985.0], [358.0, 2704.5], [359.0, 3860.4], [360.0, 2054.0], [361.0, 6240.0], [362.0, 3214.6666666666665], [363.0, 3612.5], [371.0, 1720.5], [369.0, 4528.0], [368.0, 3745.0], [370.0, 6810.5], [373.0, 9149.0], [374.0, 4921.0], [376.0, 3586.5], [377.0, 4797.0], [380.0, 4744.0], [383.0, 10346.0], [382.0, 12352.0], [385.0, 3889.3333333333335], [387.0, 2408.0], [388.0, 7471.666666666667], [389.0, 3086.0], [391.0, 1999.0], [396.0, 4691.0], [399.0, 7493.0], [395.0, 9572.5], [401.0, 4856.5], [406.0, 4923.2], [407.0, 4927.0], [408.0, 3657.0], [409.0, 4099.0], [411.0, 6562.0], [412.0, 3491.0], [413.0, 4753.0], [428.0, 6858.0], [416.0, 3143.0], [418.0, 4534.5], [421.0, 4374.0], [422.0, 5828.0], [423.0, 4160.666666666667], [426.0, 2200.0], [427.0, 4180.0], [429.0, 5647.5], [431.0, 5900.333333333333], [432.0, 6217.0], [434.0, 5521.0], [436.0, 3717.0], [438.0, 2698.0], [440.0, 5277.25], [443.0, 7012.5], [445.0, 4598.0], [446.0, 5918.25], [450.0, 2803.0], [451.0, 7322.0], [453.0, 4742.333333333333], [455.0, 5687.714285714285], [459.0, 6593.5], [462.0, 8035.75], [463.0, 10125.0], [458.0, 6547.0], [448.0, 9901.0], [478.0, 8144.0], [467.0, 4437.0], [468.0, 6061.5], [471.0, 7695.5], [464.0, 9306.0], [472.0, 9041.333333333334], [473.0, 3554.0], [474.0, 4106.0], [475.0, 6265.0], [476.0, 1182.0], [477.0, 6020.0], [495.0, 6227.0], [487.0, 3539.0], [485.0, 6644.6], [488.0, 5089.0], [489.0, 6339.833333333333], [490.0, 6851.0], [491.0, 1212.0], [492.0, 7183.0], [483.0, 6902.0], [482.0, 6105.5], [481.0, 10508.5], [486.0, 5472.0], [508.0, 5010.666666666667], [497.0, 3576.3333333333335], [498.0, 5785.0], [501.0, 2030.0], [503.0, 3763.0], [504.0, 3317.0], [506.0, 4237.0], [505.0, 6910.0], [507.0, 5743.0], [509.0, 5562.0], [510.0, 7673.0], [511.0, 7526.75], [540.0, 6535.0], [515.0, 7471.0], [514.0, 4240.166666666667], [516.0, 5217.0], [517.0, 4587.0], [524.0, 2250.0], [521.0, 6214.0], [520.0, 5874.0], [525.0, 3006.0], [526.0, 7345.25], [527.0, 5966.25], [528.0, 6037.666666666667], [542.0, 6496.25], [539.0, 3897.0], [538.0, 5104.0], [536.0, 6125.0], [519.0, 5568.5], [518.0, 7976.0], [543.0, 8285.666666666666], [529.0, 7729.666666666667], [530.0, 7547.333333333333], [531.0, 4108.5], [533.0, 6986.0], [532.0, 6737.0], [534.0, 3720.0], [535.0, 1205.0], [569.0, 6357.0], [546.0, 8977.0], [544.0, 5607.0], [545.0, 6318.333333333333], [559.0, 6084.5], [558.0, 5938.0], [547.0, 6171.666666666667], [550.0, 6733.0], [548.0, 4447.0], [551.0, 5821.333333333333], [552.0, 5907.333333333333], [554.0, 11906.5], [555.0, 5916.5], [556.0, 2951.0], [557.0, 6111.5], [560.0, 3719.3333333333335], [572.0, 4647.0], [574.0, 5360.466666666665], [573.0, 5554.75], [575.0, 3406.0], [570.0, 5964.666666666667], [571.0, 4567.0], [568.0, 6250.529411764706], [561.0, 6558.2], [563.0, 5941.0], [562.0, 7002.333333333333], [564.0, 6116.0], [567.0, 4109.25], [565.0, 3684.2], [577.0, 4110.0], [576.0, 6415.0], [578.0, 4665.777777777777], [579.0, 4554.0], [580.0, 6568.5], [581.0, 4141.15625], [583.0, 4490.5], [582.0, 5751.733333333334], [584.0, 5657.5], [586.0, 4502.333333333333], [587.0, 5639.166666666666], [588.0, 6728.5], [1.0, 63305.0]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[440.29500000000013, 7758.748333333338]], "isOverall": false, "label": "auth-Aggregated", "isController": false}, {"data": [[3.0, 60843.0], [4.0, 30316.5], [5.0, 5158.0], [6.0, 3845.0], [7.0, 6194.0], [8.0, 53829.0], [10.0, 12676.5], [11.0, 10816.0], [12.0, 11699.0], [13.0, 10290.0], [14.0, 10958.0], [15.0, 10922.0], [18.0, 17343.0], [19.0, 36194.0], [20.0, 10739.0], [21.0, 34883.0], [23.0, 11877.5], [24.0, 11923.0], [27.0, 14102.5], [28.0, 28194.0], [30.0, 8582.0], [33.0, 8490.0], [32.0, 6587.0], [34.0, 5052.0], [37.0, 13373.5], [36.0, 4427.0], [43.0, 22946.0], [45.0, 14595.5], [44.0, 17376.666666666668], [47.0, 3373.0], [48.0, 13610.333333333334], [50.0, 17581.0], [55.0, 4870.666666666666], [54.0, 8455.0], [61.0, 21485.0], [60.0, 5361.0], [63.0, 6027.333333333333], [65.0, 15292.5], [64.0, 9217.0], [71.0, 6412.75], [73.0, 7301.0], [72.0, 19459.0], [77.0, 5370.666666666667], [81.0, 18953.0], [80.0, 9718.0], [87.0, 4822.0], [84.0, 13625.0], [91.0, 11521.666666666666], [89.0, 10748.5], [95.0, 18834.0], [98.0, 11641.0], [97.0, 11483.0], [96.0, 3171.5], [103.0, 17768.0], [100.0, 12652.0], [107.0, 2023.0], [104.0, 4040.0], [109.0, 16018.0], [108.0, 5136.0], [115.0, 10957.0], [114.0, 4370.0], [113.0, 9059.0], [112.0, 3445.0], [119.0, 2898.0], [118.0, 4066.0], [116.0, 3891.5], [121.0, 13815.0], [120.0, 11493.5], [125.0, 4998.0], [134.0, 4308.0], [132.0, 15005.666666666666], [131.0, 3203.0], [143.0, 5679.5], [142.0, 13907.0], [141.0, 11203.5], [140.0, 4974.0], [138.0, 8635.0], [137.0, 9275.666666666666], [150.0, 15087.0], [148.0, 9970.0], [144.0, 8271.0], [155.0, 11691.0], [152.0, 3312.0], [167.0, 9706.0], [166.0, 11062.5], [165.0, 4413.0], [164.0, 10523.5], [163.0, 13064.0], [160.0, 14354.0], [175.0, 11643.333333333334], [174.0, 13205.0], [173.0, 11253.5], [172.0, 14567.5], [171.0, 7699.0], [170.0, 2038.0], [169.0, 10991.333333333334], [182.0, 3307.0], [180.0, 14865.0], [179.0, 8152.0], [178.0, 13345.0], [190.0, 2861.0], [187.0, 1989.0], [185.0, 11644.75], [199.0, 2938.0], [196.0, 4599.0], [193.0, 7269.5], [192.0, 9883.0], [207.0, 7044.0], [206.0, 8733.0], [205.0, 14928.0], [204.0, 3998.0], [202.0, 6850.0], [214.0, 11155.666666666666], [211.0, 4353.0], [208.0, 7899.666666666666], [222.0, 7680.0], [221.0, 15098.0], [220.0, 5205.0], [218.0, 14311.0], [217.0, 9853.333333333334], [216.0, 14459.0], [231.0, 5883.0], [228.0, 8000.0], [227.0, 8194.0], [239.0, 10694.0], [237.0, 6704.0], [235.0, 7876.0], [232.0, 5863.0], [246.0, 6397.0], [245.0, 13702.0], [244.0, 7965.0], [243.0, 6798.0], [242.0, 4890.5], [240.0, 6129.0], [255.0, 7762.5], [254.0, 10248.0], [253.0, 8985.0], [251.0, 6441.0], [248.0, 4316.0], [270.0, 14329.0], [269.0, 9148.0], [268.0, 4948.666666666667], [264.0, 3956.0], [262.0, 10019.0], [261.0, 8861.0], [260.0, 12924.0], [259.0, 9476.0], [283.0, 4462.0], [279.0, 12020.0], [275.0, 4454.5], [274.0, 10423.5], [273.0, 3384.0], [301.0, 5658.25], [293.0, 3268.6666666666665], [292.0, 5217.333333333333], [291.0, 4438.5], [289.0, 7604.0], [319.0, 5744.0], [317.0, 6545.0], [316.0, 5148.0], [310.0, 11768.0], [304.0, 7598.0], [334.0, 6580.0], [332.0, 8770.5], [330.0, 4792.749999999999], [329.0, 6195.0], [326.0, 6273.333333333333], [325.0, 10885.0], [324.0, 7229.2], [322.0, 3943.0], [351.0, 5253.0], [350.0, 7108.0], [349.0, 5540.0], [347.0, 3192.0], [346.0, 10094.0], [342.0, 9375.0], [339.0, 3444.25], [338.0, 2041.0], [362.0, 4697.5], [361.0, 5757.0], [359.0, 7995.5], [357.0, 5595.75], [356.0, 2404.0], [355.0, 2082.0], [353.0, 2103.0], [383.0, 5115.8], [382.0, 4902.666666666667], [381.0, 3287.0], [380.0, 9782.0], [373.0, 5985.666666666666], [372.0, 4506.5], [370.0, 3469.0], [369.0, 890.0], [399.0, 4509.0], [397.0, 6411.0], [396.0, 8224.0], [395.0, 10460.0], [393.0, 7278.0], [392.0, 3337.0], [389.0, 9268.0], [388.0, 4585.0], [414.0, 7063.0], [411.0, 1778.0], [408.0, 4331.0], [406.0, 5129.333333333333], [400.0, 3297.0], [419.0, 7035.0], [431.0, 5293.0], [429.0, 6755.333333333333], [426.0, 5611.0], [425.0, 3343.0], [423.0, 4382.0], [422.0, 5655.8], [420.0, 3718.0], [418.0, 6995.5], [417.0, 3077.0], [447.0, 8423.0], [446.0, 4339.0], [443.0, 2145.0], [442.0, 9294.0], [441.0, 7441.0], [440.0, 6290.5], [439.0, 8155.0], [437.0, 3377.0], [433.0, 4340.0], [460.0, 2449.0], [453.0, 6111.0], [463.0, 2485.0], [459.0, 4512.0], [458.0, 2161.0], [457.0, 4823.0], [455.0, 7291.333333333333], [451.0, 5626.25], [450.0, 4691.666666666667], [454.0, 2771.0], [452.0, 6146.5], [479.0, 3993.0], [478.0, 5311.75], [477.0, 5725.0], [475.0, 4690.0], [474.0, 4866.0], [472.0, 5705.5], [470.0, 5504.333333333333], [464.0, 6228.0], [493.0, 4918.0], [492.0, 8548.0], [488.0, 6352.5], [486.0, 8446.0], [482.0, 5942.142857142857], [481.0, 4592.0], [508.0, 5756.0], [503.0, 4237.5], [510.0, 2565.0], [511.0, 2882.5], [509.0, 7426.0], [501.0, 5078.0], [499.0, 6765.0], [498.0, 2631.0], [496.0, 5803.0], [542.0, 4147.0], [526.0, 4777.0], [525.0, 2952.0], [522.0, 3307.0], [520.0, 2825.0], [527.0, 5136.333333333333], [513.0, 4242.0], [512.0, 3072.0], [516.0, 8377.0], [515.0, 6202.0], [519.0, 2599.0], [518.0, 3560.0], [531.0, 3802.75], [543.0, 4420.0], [528.0, 6315.0], [530.0, 2074.0], [529.0, 2396.0], [538.0, 1812.0], [536.0, 2937.0], [535.0, 2864.0], [533.0, 6847.5], [532.0, 3150.0], [573.0, 3714.5], [552.0, 5123.0], [554.0, 4983.0], [553.0, 4317.0], [558.0, 3613.0], [557.0, 4221.0], [560.0, 4911.0], [562.0, 4545.0], [561.0, 6350.0], [564.0, 3071.0], [574.0, 4878.0], [570.0, 3975.0], [569.0, 1476.0], [568.0, 3747.0], [551.0, 3409.0], [550.0, 3983.0], [548.0, 3014.5], [545.0, 4635.0], [544.0, 3265.0], [559.0, 6468.0], [567.0, 1643.5], [565.0, 3572.0], [576.0, 3597.0], [577.0, 3043.0], [580.0, 3027.0], [581.0, 4084.166666666667], [587.0, 4272.0], [586.0, 3002.0], [583.0, 4736.0], [582.0, 4412.0], [578.0, 5348.0], [1.0, 1381.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[311.69333333333327, 7323.158333333342]], "isOverall": false, "label": "GetBooking-Aggregated", "isController": false}, {"data": [[2.0, 835.0], [3.0, 823.0], [4.0, 817.0], [5.0, 816.0], [6.0, 275.0], [7.0, 267.0], [8.0, 915.0], [9.0, 267.0], [10.0, 271.0], [11.0, 270.0], [12.0, 270.0], [13.0, 267.0], [14.0, 531.0], [15.0, 1177.0], [16.0, 272.0], [17.0, 269.0], [18.0, 269.0], [19.0, 295.0], [20.0, 278.0], [21.0, 588.0], [22.0, 1152.0], [23.0, 309.0], [24.0, 293.0], [25.0, 1390.0], [26.0, 294.0], [27.0, 583.0], [28.0, 299.0], [29.0, 299.0], [30.0, 2219.0], [31.0, 593.0], [33.0, 585.0], [32.0, 291.0], [35.0, 620.0], [34.0, 298.0], [37.0, 293.0], [36.0, 303.0], [39.0, 270.0], [38.0, 270.0], [41.0, 270.0], [40.0, 267.0], [43.0, 269.0], [42.0, 269.0], [45.0, 272.0], [44.0, 270.0], [47.0, 267.0], [46.0, 268.0], [49.0, 272.0], [48.0, 269.0], [51.0, 270.0], [50.0, 267.0], [53.0, 270.0], [52.0, 270.0], [55.0, 268.0], [54.0, 267.0], [57.0, 283.0], [56.0, 284.0], [59.0, 280.0], [58.0, 281.0], [61.0, 280.0], [60.0, 280.0], [63.0, 294.0], [62.0, 296.0], [67.0, 283.0], [66.0, 278.0], [65.0, 293.0], [64.0, 283.0], [71.0, 293.0], [70.0, 1123.0], [69.0, 279.0], [68.0, 281.0], [75.0, 279.0], [74.0, 279.0], [73.0, 302.0], [72.0, 294.0], [79.0, 311.0], [78.0, 295.0], [77.0, 293.0], [76.0, 269.0], [83.0, 293.0], [82.0, 294.0], [81.0, 272.0], [80.0, 295.0], [87.0, 288.0], [86.0, 279.0], [85.0, 306.0], [84.0, 1370.0], [91.0, 292.0], [90.0, 290.0], [89.0, 297.0], [88.0, 293.0], [95.0, 295.0], [94.0, 293.0], [93.0, 300.0], [92.0, 304.0], [99.0, 294.0], [98.0, 298.0], [97.0, 298.0], [96.0, 295.0], [103.0, 280.0], [102.0, 284.0], [101.0, 279.0], [100.0, 292.0], [107.0, 281.0], [106.0, 272.0], [105.0, 278.0], [104.0, 279.0], [111.0, 300.0], [110.0, 296.0], [109.0, 285.0], [108.0, 1238.0], [115.0, 303.0], [114.0, 298.0], [113.0, 294.0], [112.0, 304.0], [119.0, 289.0], [118.0, 293.0], [117.0, 294.0], [116.0, 293.0], [123.0, 929.0], [122.0, 301.0], [121.0, 286.0], [120.0, 281.0], [126.0, 303.0], [125.0, 328.0], [124.0, 299.0], [135.0, 288.0], [134.0, 290.0], [133.0, 292.0], [132.0, 313.0], [131.0, 303.0], [130.0, 305.0], [129.0, 305.0], [128.0, 298.0], [143.0, 300.0], [142.0, 305.0], [141.0, 304.0], [140.0, 298.0], [139.0, 292.0], [138.0, 289.0], [137.0, 284.5], [151.0, 286.0], [150.0, 300.0], [149.0, 294.0], [148.0, 293.0], [147.0, 288.0], [146.0, 294.0], [145.0, 297.0], [144.0, 293.0], [159.0, 302.0], [158.0, 294.0], [157.0, 292.0], [156.0, 1179.0], [155.0, 293.0], [154.0, 287.0], [153.0, 288.0], [152.0, 291.0], [167.0, 285.0], [166.0, 275.0], [165.0, 284.0], [164.0, 279.0], [163.0, 294.0], [162.0, 291.0], [161.0, 1114.0], [160.0, 308.0], [175.0, 290.0], [174.0, 292.0], [173.0, 300.0], [172.0, 295.0], [171.0, 302.0], [170.0, 289.0], [169.0, 290.0], [168.0, 285.0], [182.0, 297.0], [181.0, 292.0], [180.0, 288.0], [179.0, 287.0], [178.0, 283.0], [177.0, 289.5], [191.0, 303.0], [190.0, 296.0], [189.0, 296.0], [188.0, 294.0], [187.0, 302.0], [186.0, 296.0], [185.0, 296.0], [184.0, 297.0], [199.0, 284.0], [198.0, 284.0], [196.0, 289.0], [195.0, 285.0], [194.0, 292.0], [193.0, 563.0], [192.0, 294.0], [207.0, 282.0], [206.0, 281.0], [205.0, 278.0], [204.0, 275.0], [203.0, 281.0], [202.0, 281.0], [201.0, 684.5], [215.0, 1184.0], [214.0, 298.0], [213.0, 300.5], [211.0, 1117.0], [210.0, 579.5], [208.0, 294.0], [222.0, 281.0], [221.0, 281.0], [220.0, 288.0], [219.0, 1106.0], [218.0, 290.0], [217.0, 306.0], [216.0, 301.0], [231.0, 298.0], [230.0, 669.0], [229.0, 297.0], [228.0, 290.0], [227.0, 292.0], [226.0, 286.0], [225.0, 291.0], [224.0, 584.5], [239.0, 296.0], [238.0, 292.0], [237.0, 301.5], [235.0, 670.0], [234.0, 298.0], [233.0, 294.0], [232.0, 302.0], [247.0, 301.0], [246.0, 307.0], [245.0, 581.0], [244.0, 296.0], [243.0, 299.0], [242.0, 302.5], [240.0, 298.0], [255.0, 275.0], [254.0, 1192.0], [253.0, 281.5], [251.0, 295.0], [250.0, 297.0], [249.0, 297.0], [248.0, 301.0], [259.0, 278.5], [269.0, 274.0], [270.0, 268.0], [268.0, 285.5], [257.0, 288.0], [256.0, 285.0], [266.0, 286.5], [264.0, 279.0], [263.0, 281.0], [262.0, 274.0], [261.0, 1405.0], [260.0, 287.0], [275.0, 270.0], [286.0, 294.0], [285.0, 293.0], [282.0, 289.0], [281.0, 275.0], [279.0, 275.0], [278.0, 788.0], [277.0, 837.0], [276.0, 269.0], [274.0, 277.0], [273.0, 271.6666666666667], [302.0, 415.0], [301.0, 382.0], [299.0, 401.0], [298.0, 359.0], [297.0, 360.0], [295.0, 290.5], [293.0, 829.0], [292.0, 271.0], [291.0, 276.0], [289.0, 288.3333333333333], [318.0, 892.0], [319.0, 308.0], [317.0, 1560.0], [316.0, 271.0], [315.0, 301.0], [313.0, 311.0], [312.0, 321.0], [311.0, 333.0], [306.0, 331.0], [305.0, 334.0], [304.0, 408.0], [310.0, 334.5], [334.0, 1103.0], [335.0, 288.0], [333.0, 285.0], [332.0, 292.0], [331.0, 294.0], [330.0, 359.0], [329.0, 361.0], [328.0, 338.5], [326.0, 312.0], [323.0, 911.0], [322.0, 297.0], [325.0, 1509.0], [324.0, 345.0], [350.0, 296.0], [351.0, 295.0], [349.0, 299.0], [348.0, 297.0], [347.0, 349.0], [346.0, 330.5], [344.0, 328.0], [342.0, 314.0], [336.0, 286.0], [339.0, 913.0], [338.0, 295.5], [341.0, 312.0], [340.0, 301.0], [366.0, 298.0], [367.0, 299.0], [365.0, 1103.0], [364.0, 300.0], [363.0, 300.0], [362.0, 1571.0], [361.0, 289.0], [360.0, 287.0], [359.0, 292.0], [353.0, 295.0], [352.0, 295.0], [355.0, 300.0], [354.0, 299.0], [357.0, 298.0], [356.0, 298.0], [382.0, 297.0], [383.0, 295.0], [381.0, 303.0], [380.0, 295.0], [379.0, 1141.0], [378.0, 295.0], [376.0, 299.0], [375.0, 297.0], [370.0, 294.0], [369.0, 298.0], [373.0, 293.0], [372.0, 300.0], [397.0, 293.0], [399.0, 296.5], [396.0, 293.0], [387.0, 598.5], [385.0, 291.0], [395.0, 315.5], [393.0, 305.0], [392.0, 299.0], [391.0, 1658.0], [390.0, 301.0], [389.0, 296.0], [388.0, 293.0], [414.0, 306.0], [415.0, 301.0], [413.0, 301.5], [403.0, 296.0], [402.0, 300.0], [400.0, 297.0], [411.0, 296.0], [410.0, 306.0], [409.0, 296.0], [408.0, 294.0], [406.0, 294.0], [405.0, 297.0], [404.0, 301.0], [430.0, 301.0], [431.0, 297.0], [429.0, 306.0], [428.0, 291.0], [427.0, 878.0], [426.0, 299.0], [425.0, 289.0], [422.0, 948.0], [417.0, 298.0], [416.0, 293.0], [419.0, 296.0], [418.0, 292.0], [421.0, 296.0], [420.0, 292.0], [446.0, 294.0], [447.0, 292.0], [444.0, 902.0], [435.0, 634.5], [433.0, 292.0], [432.0, 300.0], [443.0, 301.0], [442.0, 910.0], [441.0, 300.0], [440.0, 294.0], [439.0, 297.0], [438.0, 298.0], [437.0, 297.0], [436.0, 919.0], [462.0, 292.0], [463.0, 297.0], [461.0, 298.0], [460.0, 296.0], [459.0, 298.0], [458.0, 294.0], [457.0, 301.0], [456.0, 2856.0], [455.0, 299.0], [449.0, 299.0], [448.0, 296.0], [451.0, 1142.0], [450.0, 297.0], [454.0, 303.0], [453.0, 298.0], [452.0, 296.0], [479.0, 293.0], [472.0, 307.5], [478.0, 297.0], [477.0, 300.0], [475.0, 298.0], [474.0, 296.0], [473.0, 297.0], [471.0, 298.0], [465.0, 1519.0], [464.0, 297.0], [467.0, 893.0], [466.0, 294.0], [470.0, 296.0], [469.0, 297.0], [468.0, 298.0], [493.0, 293.0], [495.0, 300.5], [492.0, 297.0], [483.0, 1380.0], [482.0, 953.0], [481.0, 298.5], [491.0, 290.5], [489.0, 290.0], [488.0, 290.0], [487.0, 923.0], [486.0, 297.0], [485.0, 299.0], [484.0, 297.0], [510.0, 300.0], [511.0, 1020.0], [509.0, 299.0], [508.0, 299.0], [507.0, 297.0], [506.0, 294.0], [505.0, 300.0], [504.0, 298.0], [503.0, 296.0], [497.0, 1495.0], [496.0, 302.0], [499.0, 320.0], [498.0, 906.0], [502.0, 296.0], [501.0, 298.0], [500.0, 309.0], [539.0, 308.0], [526.0, 723.0], [525.0, 295.0], [524.0, 956.0], [523.0, 302.0], [522.0, 298.0], [521.0, 307.0], [520.0, 307.0], [527.0, 299.5], [542.0, 299.5], [543.0, 299.0], [528.0, 305.0], [530.0, 297.0], [529.0, 295.0], [532.0, 301.0], [531.0, 295.0], [540.0, 301.0], [538.0, 295.5], [536.0, 296.0], [519.0, 299.0], [518.0, 296.0], [517.0, 921.0], [516.0, 296.0], [515.0, 303.0], [514.0, 302.0], [513.0, 299.0], [512.0, 300.0], [535.0, 606.0], [533.0, 1458.0], [572.0, 296.0], [557.0, 627.5], [556.0, 301.0], [555.0, 301.0], [554.0, 296.0], [553.0, 296.0], [552.0, 301.0], [558.0, 305.0], [569.0, 296.0], [575.0, 296.0], [561.0, 296.0], [560.0, 301.0], [563.0, 297.0], [562.0, 305.0], [565.0, 299.0], [564.0, 296.0], [567.0, 912.0], [566.0, 294.0], [574.0, 1628.0], [573.0, 1747.0], [571.0, 307.0], [570.0, 889.0], [568.0, 298.0], [551.0, 298.0], [550.0, 297.0], [549.0, 921.0], [548.0, 301.0], [547.0, 976.0], [546.0, 297.0], [545.0, 300.0], [544.0, 298.0], [559.0, 298.0], [588.0, 302.0], [577.0, 300.5], [576.0, 298.0], [578.0, 723.6666666666667], [582.0, 633.5], [587.0, 300.0], [586.0, 300.0], [585.0, 301.0], [584.0, 1012.0], [583.0, 1136.0], [581.0, 1146.0], [580.0, 2402.0], [579.0, 299.0], [1.0, 273.0]], "isOverall": false, "label": "CreateBooking", "isController": false}, {"data": [[299.6033333333336, 402.4933333333331]], "isOverall": false, "label": "CreateBooking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 588.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 21.816666666666666, "minX": 1.70943558E12, "maxY": 295173.63333333336, "series": [{"data": [[1.70943564E12, 295173.63333333336], [1.70943558E12, 1190.6], [1.7094357E12, 776.7166666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70943564E12, 8047.116666666667], [1.70943558E12, 371.06666666666666], [1.7094357E12, 21.816666666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7094357E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 401.98662207357836, "minX": 1.70943558E12, "maxY": 63305.0, "series": [{"data": [[1.70943564E12, 8371.055226824465], [1.70943558E12, 3780.6413043478256], [1.7094357E12, 63305.0]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[1.70943564E12, 7333.078464106853], [1.7094357E12, 1381.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.70943564E12, 401.98662207357836], [1.7094357E12, 554.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7094357E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 401.9498327759195, "minX": 1.70943558E12, "maxY": 63305.0, "series": [{"data": [[1.70943564E12, 8371.021696252463], [1.70943558E12, 3780.065217391305], [1.7094357E12, 63305.0]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[1.70943564E12, 5356.300500834725], [1.7094357E12, 1116.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.70943564E12, 401.9498327759195], [1.7094357E12, 554.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7094357E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70943558E12, "maxY": 63033.0, "series": [{"data": [[1.70943564E12, 7650.15779092702], [1.70943558E12, 3328.217391304349], [1.7094357E12, 63033.0]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[1.70943564E12, 0.0], [1.7094357E12, 567.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.70943564E12, 3.8210702341137126], [1.7094357E12, 276.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7094357E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 267.0, "minX": 1.70943558E12, "maxY": 63305.0, "series": [{"data": [[1.70943564E12, 60843.0], [1.70943558E12, 6562.0], [1.7094357E12, 63305.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70943564E12, 267.0], [1.70943558E12, 1250.0], [1.7094357E12, 273.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70943564E12, 12084.0], [1.70943558E12, 5471.900000000001], [1.7094357E12, 63305.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70943564E12, 32103.200000000004], [1.70943558E12, 6562.0], [1.7094357E12, 63305.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70943564E12, 3775.0], [1.70943558E12, 3940.5], [1.7094357E12, 1108.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70943564E12, 17104.75], [1.70943558E12, 5939.2], [1.7094357E12, 63305.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7094357E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 283.0, "minX": 1.0, "maxY": 12535.0, "series": [{"data": [[2.0, 2613.0], [39.0, 2308.0], [45.0, 2898.0], [3.0, 8464.0], [55.0, 3669.5], [57.0, 4020.0], [56.0, 4455.0], [58.0, 4460.5], [67.0, 3981.0], [4.0, 4995.5], [80.0, 4065.0], [5.0, 10801.5], [86.0, 2969.0], [6.0, 4327.0], [96.0, 3643.0], [105.0, 4214.0], [107.0, 4242.0], [110.0, 2082.0], [112.0, 2420.0], [7.0, 12535.0], [117.0, 3129.0], [135.0, 2424.0], [16.0, 5432.0], [1.0, 7724.0], [19.0, 4584.0], [21.0, 283.0], [24.0, 4013.5], [29.0, 3868.0], [30.0, 4620.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 135.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 283.0, "minX": 1.0, "maxY": 7259.0, "series": [{"data": [[2.0, 1622.5], [39.0, 1238.0], [45.0, 1164.0], [3.0, 7259.0], [55.0, 3453.0], [57.0, 4020.0], [56.0, 4290.5], [58.0, 4255.5], [67.0, 3720.0], [4.0, 2556.5], [80.0, 1979.0], [5.0, 4352.0], [86.0, 1830.0], [6.0, 3460.0], [96.0, 2601.0], [105.0, 3568.5], [107.0, 3329.0], [110.0, 1267.5], [112.0, 1471.0], [7.0, 6161.0], [117.0, 1785.0], [135.0, 1197.0], [16.0, 3063.0], [1.0, 3928.5], [19.0, 1750.0], [21.0, 283.0], [24.0, 2446.5], [29.0, 3868.0], [30.0, 3021.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 135.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.70943558E12, "maxY": 21.483333333333334, "series": [{"data": [[1.70943564E12, 21.483333333333334], [1.70943558E12, 8.483333333333333], [1.7094357E12, 0.03333333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7094357E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.70943558E12, "maxY": 28.4, "series": [{"data": [[1.70943564E12, 28.4], [1.70943558E12, 1.5333333333333334], [1.7094357E12, 0.06666666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7094357E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.70943558E12, "maxY": 9.983333333333333, "series": [{"data": [[1.70943564E12, 9.983333333333333], [1.7094357E12, 0.016666666666666666]], "isOverall": false, "label": "GetBooking-success", "isController": false}, {"data": [[1.70943564E12, 9.966666666666667], [1.7094357E12, 0.03333333333333333]], "isOverall": false, "label": "CreateBooking-success", "isController": false}, {"data": [[1.70943564E12, 8.45], [1.70943558E12, 1.5333333333333334], [1.7094357E12, 0.016666666666666666]], "isOverall": false, "label": "auth-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7094357E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.70943558E12, "maxY": 28.4, "series": [{"data": [[1.70943564E12, 28.4], [1.70943558E12, 1.5333333333333334], [1.7094357E12, 0.06666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7094357E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

