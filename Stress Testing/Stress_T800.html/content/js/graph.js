/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 244.0, "minX": 0.0, "maxY": 48555.0, "series": [{"data": [[0.0, 1108.0], [0.1, 1108.0], [0.2, 1110.0], [0.3, 1117.0], [0.4, 1119.0], [0.5, 1119.0], [0.6, 1119.0], [0.7, 1119.0], [0.8, 1121.0], [0.9, 1122.0], [1.0, 1127.0], [1.1, 1127.0], [1.2, 1127.0], [1.3, 1129.0], [1.4, 1130.0], [1.5, 1130.0], [1.6, 1130.0], [1.7, 1132.0], [1.8, 1132.0], [1.9, 1133.0], [2.0, 1133.0], [2.1, 1133.0], [2.2, 1134.0], [2.3, 1134.0], [2.4, 1137.0], [2.5, 1138.0], [2.6, 1138.0], [2.7, 1139.0], [2.8, 1139.0], [2.9, 1143.0], [3.0, 1143.0], [3.1, 1143.0], [3.2, 1144.0], [3.3, 1145.0], [3.4, 1149.0], [3.5, 1151.0], [3.6, 1151.0], [3.7, 1153.0], [3.8, 1155.0], [3.9, 1156.0], [4.0, 1159.0], [4.1, 1159.0], [4.2, 1167.0], [4.3, 1172.0], [4.4, 1177.0], [4.5, 1183.0], [4.6, 1183.0], [4.7, 1198.0], [4.8, 1239.0], [4.9, 1244.0], [5.0, 1314.0], [5.1, 1314.0], [5.2, 1316.0], [5.3, 1328.0], [5.4, 1335.0], [5.5, 1335.0], [5.6, 1335.0], [5.7, 1338.0], [5.8, 1366.0], [5.9, 1409.0], [6.0, 1410.0], [6.1, 1410.0], [6.2, 1455.0], [6.3, 1476.0], [6.4, 1477.0], [6.5, 1495.0], [6.6, 1495.0], [6.7, 1541.0], [6.8, 1545.0], [6.9, 1581.0], [7.0, 1629.0], [7.1, 1629.0], [7.2, 1633.0], [7.3, 1642.0], [7.4, 1644.0], [7.5, 1649.0], [7.6, 1649.0], [7.7, 1651.0], [7.8, 1652.0], [7.9, 1659.0], [8.0, 1661.0], [8.1, 1661.0], [8.2, 1665.0], [8.3, 1674.0], [8.4, 1687.0], [8.5, 1743.0], [8.6, 1743.0], [8.7, 1761.0], [8.8, 1778.0], [8.9, 1780.0], [9.0, 1788.0], [9.1, 1788.0], [9.2, 1790.0], [9.3, 1812.0], [9.4, 1815.0], [9.5, 1820.0], [9.6, 1820.0], [9.7, 1825.0], [9.8, 1832.0], [9.9, 1837.0], [10.0, 1841.0], [10.1, 1841.0], [10.2, 1844.0], [10.3, 1862.0], [10.4, 1869.0], [10.5, 1870.0], [10.6, 1870.0], [10.7, 1881.0], [10.8, 1886.0], [10.9, 1907.0], [11.0, 1909.0], [11.1, 1909.0], [11.2, 1909.0], [11.3, 1909.0], [11.4, 1917.0], [11.5, 1922.0], [11.6, 1922.0], [11.7, 1925.0], [11.8, 1936.0], [11.9, 1944.0], [12.0, 1946.0], [12.1, 1946.0], [12.2, 1950.0], [12.3, 1951.0], [12.4, 1961.0], [12.5, 1966.0], [12.6, 1966.0], [12.7, 1969.0], [12.8, 1982.0], [12.9, 1986.0], [13.0, 2001.0], [13.1, 2001.0], [13.2, 2002.0], [13.3, 2009.0], [13.4, 2013.0], [13.5, 2022.0], [13.6, 2022.0], [13.7, 2028.0], [13.8, 2033.0], [13.9, 2046.0], [14.0, 2049.0], [14.1, 2049.0], [14.2, 2053.0], [14.3, 2062.0], [14.4, 2067.0], [14.5, 2072.0], [14.6, 2072.0], [14.7, 2098.0], [14.8, 2098.0], [14.9, 2105.0], [15.0, 2117.0], [15.1, 2117.0], [15.2, 2125.0], [15.3, 2126.0], [15.4, 2142.0], [15.5, 2143.0], [15.6, 2143.0], [15.7, 2146.0], [15.8, 2156.0], [15.9, 2160.0], [16.0, 2211.0], [16.1, 2211.0], [16.2, 2225.0], [16.3, 2226.0], [16.4, 2244.0], [16.5, 2247.0], [16.6, 2247.0], [16.7, 2247.0], [16.8, 2256.0], [16.9, 2262.0], [17.0, 2274.0], [17.1, 2274.0], [17.2, 2279.0], [17.3, 2280.0], [17.4, 2282.0], [17.5, 2286.0], [17.6, 2286.0], [17.7, 2300.0], [17.8, 2300.0], [17.9, 2306.0], [18.0, 2306.0], [18.1, 2306.0], [18.2, 2308.0], [18.3, 2335.0], [18.4, 2339.0], [18.5, 2350.0], [18.6, 2350.0], [18.7, 2352.0], [18.8, 2356.0], [18.9, 2380.0], [19.0, 2398.0], [19.1, 2398.0], [19.2, 2408.0], [19.3, 2419.0], [19.4, 2428.0], [19.5, 2428.0], [19.6, 2428.0], [19.7, 2431.0], [19.8, 2435.0], [19.9, 2439.0], [20.0, 2441.0], [20.1, 2441.0], [20.2, 2448.0], [20.3, 2484.0], [20.4, 2486.0], [20.5, 2499.0], [20.6, 2499.0], [20.7, 2501.0], [20.8, 2505.0], [20.9, 2528.0], [21.0, 2538.0], [21.1, 2538.0], [21.2, 2540.0], [21.3, 2554.0], [21.4, 2568.0], [21.5, 2568.0], [21.6, 2568.0], [21.7, 2571.0], [21.8, 2575.0], [21.9, 2576.0], [22.0, 2592.0], [22.1, 2592.0], [22.2, 2602.0], [22.3, 2602.0], [22.4, 2607.0], [22.5, 2608.0], [22.6, 2608.0], [22.7, 2608.0], [22.8, 2619.0], [22.9, 2621.0], [23.0, 2626.0], [23.1, 2626.0], [23.2, 2628.0], [23.3, 2645.0], [23.4, 2646.0], [23.5, 2660.0], [23.6, 2660.0], [23.7, 2663.0], [23.8, 2691.0], [23.9, 2705.0], [24.0, 2706.0], [24.1, 2706.0], [24.2, 2707.0], [24.3, 2720.0], [24.4, 2720.0], [24.5, 2721.0], [24.6, 2721.0], [24.7, 2725.0], [24.8, 2725.0], [24.9, 2726.0], [25.0, 2728.0], [25.1, 2728.0], [25.2, 2731.0], [25.3, 2734.0], [25.4, 2736.0], [25.5, 2743.0], [25.6, 2743.0], [25.7, 2746.0], [25.8, 2760.0], [25.9, 2762.0], [26.0, 2772.0], [26.1, 2772.0], [26.2, 2782.0], [26.3, 2782.0], [26.4, 2788.0], [26.5, 2794.0], [26.6, 2794.0], [26.7, 2796.0], [26.8, 2799.0], [26.9, 2801.0], [27.0, 2802.0], [27.1, 2802.0], [27.2, 2814.0], [27.3, 2815.0], [27.4, 2817.0], [27.5, 2822.0], [27.6, 2822.0], [27.7, 2825.0], [27.8, 2826.0], [27.9, 2826.0], [28.0, 2830.0], [28.1, 2830.0], [28.2, 2836.0], [28.3, 2837.0], [28.4, 2845.0], [28.5, 2848.0], [28.6, 2848.0], [28.7, 2851.0], [28.8, 2853.0], [28.9, 2853.0], [29.0, 2856.0], [29.1, 2856.0], [29.2, 2860.0], [29.3, 2873.0], [29.4, 2886.0], [29.5, 2887.0], [29.6, 2887.0], [29.7, 2887.0], [29.8, 2889.0], [29.9, 2892.0], [30.0, 2894.0], [30.1, 2894.0], [30.2, 2895.0], [30.3, 2895.0], [30.4, 2896.0], [30.5, 2902.0], [30.6, 2902.0], [30.7, 2907.0], [30.8, 2908.0], [30.9, 2910.0], [31.0, 2917.0], [31.1, 2917.0], [31.2, 2918.0], [31.3, 2927.0], [31.4, 2927.0], [31.5, 2935.0], [31.6, 2935.0], [31.7, 2945.0], [31.8, 2947.0], [31.9, 2949.0], [32.0, 2960.0], [32.1, 2960.0], [32.2, 2967.0], [32.3, 2977.0], [32.4, 2978.0], [32.5, 2990.0], [32.6, 2990.0], [32.7, 2997.0], [32.8, 2998.0], [32.9, 3011.0], [33.0, 3013.0], [33.1, 3013.0], [33.2, 3014.0], [33.3, 3015.0], [33.4, 3016.0], [33.5, 3030.0], [33.6, 3030.0], [33.7, 3033.0], [33.8, 3033.0], [33.9, 3042.0], [34.0, 3060.0], [34.1, 3060.0], [34.2, 3067.0], [34.3, 3072.0], [34.4, 3085.0], [34.5, 3089.0], [34.6, 3089.0], [34.7, 3093.0], [34.8, 3099.0], [34.9, 3105.0], [35.0, 3120.0], [35.1, 3120.0], [35.2, 3121.0], [35.3, 3124.0], [35.4, 3127.0], [35.5, 3129.0], [35.6, 3129.0], [35.7, 3142.0], [35.8, 3142.0], [35.9, 3145.0], [36.0, 3169.0], [36.1, 3169.0], [36.2, 3173.0], [36.3, 3176.0], [36.4, 3180.0], [36.5, 3180.0], [36.6, 3180.0], [36.7, 3184.0], [36.8, 3184.0], [36.9, 3200.0], [37.0, 3201.0], [37.1, 3201.0], [37.2, 3204.0], [37.3, 3210.0], [37.4, 3213.0], [37.5, 3217.0], [37.6, 3217.0], [37.7, 3220.0], [37.8, 3253.0], [37.9, 3264.0], [38.0, 3264.0], [38.1, 3264.0], [38.2, 3282.0], [38.3, 3299.0], [38.4, 3302.0], [38.5, 3308.0], [38.6, 3308.0], [38.7, 3309.0], [38.8, 3315.0], [38.9, 3324.0], [39.0, 3335.0], [39.1, 3335.0], [39.2, 3336.0], [39.3, 3340.0], [39.4, 3343.0], [39.5, 3351.0], [39.6, 3351.0], [39.7, 3361.0], [39.8, 3386.0], [39.9, 3391.0], [40.0, 3398.0], [40.1, 3398.0], [40.2, 3399.0], [40.3, 3411.0], [40.4, 3415.0], [40.5, 3417.0], [40.6, 3417.0], [40.7, 3419.0], [40.8, 3424.0], [40.9, 3424.0], [41.0, 3430.0], [41.1, 3430.0], [41.2, 3430.0], [41.3, 3434.0], [41.4, 3439.0], [41.5, 3448.0], [41.6, 3448.0], [41.7, 3474.0], [41.8, 3474.0], [41.9, 3501.0], [42.0, 3521.0], [42.1, 3521.0], [42.2, 3523.0], [42.3, 3534.0], [42.4, 3541.0], [42.5, 3550.0], [42.6, 3550.0], [42.7, 3551.0], [42.8, 3556.0], [42.9, 3560.0], [43.0, 3573.0], [43.1, 3573.0], [43.2, 3583.0], [43.3, 3584.0], [43.4, 3590.0], [43.5, 3593.0], [43.6, 3593.0], [43.7, 3599.0], [43.8, 3609.0], [43.9, 3612.0], [44.0, 3616.0], [44.1, 3616.0], [44.2, 3625.0], [44.3, 3626.0], [44.4, 3629.0], [44.5, 3636.0], [44.6, 3636.0], [44.7, 3639.0], [44.8, 3642.0], [44.9, 3647.0], [45.0, 3647.0], [45.1, 3647.0], [45.2, 3648.0], [45.3, 3666.0], [45.4, 3667.0], [45.5, 3669.0], [45.6, 3669.0], [45.7, 3678.0], [45.8, 3697.0], [45.9, 3699.0], [46.0, 3708.0], [46.1, 3708.0], [46.2, 3709.0], [46.3, 3715.0], [46.4, 3719.0], [46.5, 3722.0], [46.6, 3722.0], [46.7, 3736.0], [46.8, 3736.0], [46.9, 3737.0], [47.0, 3744.0], [47.1, 3744.0], [47.2, 3751.0], [47.3, 3755.0], [47.4, 3761.0], [47.5, 3763.0], [47.6, 3763.0], [47.7, 3769.0], [47.8, 3772.0], [47.9, 3774.0], [48.0, 3782.0], [48.1, 3782.0], [48.2, 3786.0], [48.3, 3786.0], [48.4, 3788.0], [48.5, 3789.0], [48.6, 3789.0], [48.7, 3789.0], [48.8, 3790.0], [48.9, 3792.0], [49.0, 3795.0], [49.1, 3795.0], [49.2, 3807.0], [49.3, 3807.0], [49.4, 3807.0], [49.5, 3811.0], [49.6, 3811.0], [49.7, 3813.0], [49.8, 3813.0], [49.9, 3814.0], [50.0, 3815.0], [50.1, 3815.0], [50.2, 3826.0], [50.3, 3836.0], [50.4, 3837.0], [50.5, 3839.0], [50.6, 3839.0], [50.7, 3847.0], [50.8, 3848.0], [50.9, 3850.0], [51.0, 3870.0], [51.1, 3870.0], [51.2, 3875.0], [51.3, 3875.0], [51.4, 3877.0], [51.5, 3879.0], [51.6, 3879.0], [51.7, 3883.0], [51.8, 3906.0], [51.9, 3907.0], [52.0, 3916.0], [52.1, 3916.0], [52.2, 3917.0], [52.3, 3939.0], [52.4, 3943.0], [52.5, 3959.0], [52.6, 3959.0], [52.7, 3963.0], [52.8, 3967.0], [52.9, 3970.0], [53.0, 3975.0], [53.1, 3975.0], [53.2, 3986.0], [53.3, 3994.0], [53.4, 3998.0], [53.5, 3999.0], [53.6, 3999.0], [53.7, 4005.0], [53.8, 4005.0], [53.9, 4009.0], [54.0, 4009.0], [54.1, 4009.0], [54.2, 4010.0], [54.3, 4015.0], [54.4, 4017.0], [54.5, 4018.0], [54.6, 4018.0], [54.7, 4022.0], [54.8, 4029.0], [54.9, 4034.0], [55.0, 4036.0], [55.1, 4036.0], [55.2, 4043.0], [55.3, 4052.0], [55.4, 4063.0], [55.5, 4064.0], [55.6, 4064.0], [55.7, 4067.0], [55.8, 4091.0], [55.9, 4094.0], [56.0, 4098.0], [56.1, 4098.0], [56.2, 4100.0], [56.3, 4101.0], [56.4, 4103.0], [56.5, 4106.0], [56.6, 4106.0], [56.7, 4112.0], [56.8, 4116.0], [56.9, 4124.0], [57.0, 4125.0], [57.1, 4125.0], [57.2, 4134.0], [57.3, 4143.0], [57.4, 4177.0], [57.5, 4181.0], [57.6, 4181.0], [57.7, 4191.0], [57.8, 4222.0], [57.9, 4226.0], [58.0, 4242.0], [58.1, 4242.0], [58.2, 4246.0], [58.3, 4264.0], [58.4, 4284.0], [58.5, 4284.0], [58.6, 4284.0], [58.7, 4285.0], [58.8, 4287.0], [58.9, 4293.0], [59.0, 4295.0], [59.1, 4295.0], [59.2, 4295.0], [59.3, 4316.0], [59.4, 4323.0], [59.5, 4328.0], [59.6, 4328.0], [59.7, 4348.0], [59.8, 4376.0], [59.9, 4404.0], [60.0, 4463.0], [60.1, 4463.0], [60.2, 4471.0], [60.3, 4491.0], [60.4, 4498.0], [60.5, 4516.0], [60.6, 4516.0], [60.7, 4523.0], [60.8, 4523.0], [60.9, 4527.0], [61.0, 4550.0], [61.1, 4550.0], [61.2, 4558.0], [61.3, 4567.0], [61.4, 4567.0], [61.5, 4591.0], [61.6, 4591.0], [61.7, 4593.0], [61.8, 4601.0], [61.9, 4626.0], [62.0, 4630.0], [62.1, 4630.0], [62.2, 4638.0], [62.3, 4646.0], [62.4, 4651.0], [62.5, 4658.0], [62.6, 4658.0], [62.7, 4675.0], [62.8, 4702.0], [62.9, 4703.0], [63.0, 4705.0], [63.1, 4705.0], [63.2, 4708.0], [63.3, 4716.0], [63.4, 4723.0], [63.5, 4753.0], [63.6, 4753.0], [63.7, 4759.0], [63.8, 4760.0], [63.9, 4768.0], [64.0, 4792.0], [64.1, 4792.0], [64.2, 4799.0], [64.3, 4819.0], [64.4, 4820.0], [64.5, 4831.0], [64.6, 4831.0], [64.7, 4878.0], [64.8, 4908.0], [64.9, 4918.0], [65.0, 4924.0], [65.1, 4924.0], [65.2, 4969.0], [65.3, 5007.0], [65.4, 5030.0], [65.5, 5049.0], [65.6, 5049.0], [65.7, 5064.0], [65.8, 5069.0], [65.9, 5072.0], [66.0, 5093.0], [66.1, 5093.0], [66.2, 5095.0], [66.3, 5095.0], [66.4, 5119.0], [66.5, 5124.0], [66.6, 5124.0], [66.7, 5125.0], [66.8, 5130.0], [66.9, 5142.0], [67.0, 5143.0], [67.1, 5143.0], [67.2, 5162.0], [67.3, 5182.0], [67.4, 5183.0], [67.5, 5185.0], [67.6, 5185.0], [67.7, 5186.0], [67.8, 5196.0], [67.9, 5203.0], [68.0, 5212.0], [68.1, 5212.0], [68.2, 5272.0], [68.3, 5279.0], [68.4, 5285.0], [68.5, 5292.0], [68.6, 5292.0], [68.7, 5299.0], [68.8, 5314.0], [68.9, 5333.0], [69.0, 5338.0], [69.1, 5338.0], [69.2, 5352.0], [69.3, 5355.0], [69.4, 5365.0], [69.5, 5371.0], [69.6, 5371.0], [69.7, 5372.0], [69.8, 5396.0], [69.9, 5404.0], [70.0, 5409.0], [70.1, 5409.0], [70.2, 5423.0], [70.3, 5438.0], [70.4, 5445.0], [70.5, 5445.0], [70.6, 5445.0], [70.7, 5475.0], [70.8, 5518.0], [70.9, 5538.0], [71.0, 5554.0], [71.1, 5554.0], [71.2, 5556.0], [71.3, 5557.0], [71.4, 5599.0], [71.5, 5616.0], [71.6, 5616.0], [71.7, 5623.0], [71.8, 5625.0], [71.9, 5625.0], [72.0, 5629.0], [72.1, 5629.0], [72.2, 5636.0], [72.3, 5645.0], [72.4, 5655.0], [72.5, 5656.0], [72.6, 5656.0], [72.7, 5657.0], [72.8, 5674.0], [72.9, 5679.0], [73.0, 5697.0], [73.1, 5697.0], [73.2, 5701.0], [73.3, 5733.0], [73.4, 5755.0], [73.5, 5757.0], [73.6, 5757.0], [73.7, 5762.0], [73.8, 5817.0], [73.9, 5822.0], [74.0, 5854.0], [74.1, 5854.0], [74.2, 5877.0], [74.3, 5886.0], [74.4, 5898.0], [74.5, 5903.0], [74.6, 5903.0], [74.7, 5910.0], [74.8, 5944.0], [74.9, 5945.0], [75.0, 5955.0], [75.1, 5955.0], [75.2, 6074.0], [75.3, 6156.0], [75.4, 6173.0], [75.5, 6217.0], [75.6, 6217.0], [75.7, 6220.0], [75.8, 6284.0], [75.9, 6296.0], [76.0, 6300.0], [76.1, 6300.0], [76.2, 6338.0], [76.3, 6350.0], [76.4, 6381.0], [76.5, 6384.0], [76.6, 6384.0], [76.7, 6401.0], [76.8, 6417.0], [76.9, 6422.0], [77.0, 6493.0], [77.1, 6493.0], [77.2, 6526.0], [77.3, 6527.0], [77.4, 6620.0], [77.5, 6662.0], [77.6, 6662.0], [77.7, 6664.0], [77.8, 6670.0], [77.9, 6804.0], [78.0, 6815.0], [78.1, 6815.0], [78.2, 6816.0], [78.3, 6829.0], [78.4, 6889.0], [78.5, 6944.0], [78.6, 6944.0], [78.7, 6972.0], [78.8, 6998.0], [78.9, 7041.0], [79.0, 7078.0], [79.1, 7078.0], [79.2, 7096.0], [79.3, 7302.0], [79.4, 7328.0], [79.5, 7405.0], [79.6, 7405.0], [79.7, 7424.0], [79.8, 7569.0], [79.9, 7708.0], [80.0, 7754.0], [80.1, 7754.0], [80.2, 7766.0], [80.3, 7783.0], [80.4, 7831.0], [80.5, 7917.0], [80.6, 7917.0], [80.7, 7995.0], [80.8, 8152.0], [80.9, 8199.0], [81.0, 8203.0], [81.1, 8203.0], [81.2, 8218.0], [81.3, 8235.0], [81.4, 8246.0], [81.5, 8265.0], [81.6, 8265.0], [81.7, 8345.0], [81.8, 8416.0], [81.9, 8434.0], [82.0, 8444.0], [82.1, 8444.0], [82.2, 8464.0], [82.3, 8464.0], [82.4, 8466.0], [82.5, 8522.0], [82.6, 8522.0], [82.7, 8568.0], [82.8, 8574.0], [82.9, 8611.0], [83.0, 8622.0], [83.1, 8622.0], [83.2, 8662.0], [83.3, 8699.0], [83.4, 8758.0], [83.5, 8781.0], [83.6, 8781.0], [83.7, 8782.0], [83.8, 8782.0], [83.9, 8792.0], [84.0, 8876.0], [84.1, 8876.0], [84.2, 8885.0], [84.3, 8918.0], [84.4, 8925.0], [84.5, 8939.0], [84.6, 8939.0], [84.7, 8946.0], [84.8, 9002.0], [84.9, 9024.0], [85.0, 9026.0], [85.1, 9026.0], [85.2, 9097.0], [85.3, 9100.0], [85.4, 9114.0], [85.5, 9122.0], [85.6, 9122.0], [85.7, 9152.0], [85.8, 9185.0], [85.9, 9247.0], [86.0, 9295.0], [86.1, 9295.0], [86.2, 9317.0], [86.3, 9355.0], [86.4, 9454.0], [86.5, 9509.0], [86.6, 9509.0], [86.7, 9575.0], [86.8, 9577.0], [86.9, 9599.0], [87.0, 9626.0], [87.1, 9626.0], [87.2, 9629.0], [87.3, 9644.0], [87.4, 9779.0], [87.5, 9794.0], [87.6, 9794.0], [87.7, 9820.0], [87.8, 9835.0], [87.9, 9850.0], [88.0, 9871.0], [88.1, 9871.0], [88.2, 9922.0], [88.3, 9944.0], [88.4, 10099.0], [88.5, 10220.0], [88.6, 10220.0], [88.7, 10220.0], [88.8, 10314.0], [88.9, 10464.0], [89.0, 10576.0], [89.1, 10576.0], [89.2, 10951.0], [89.3, 11039.0], [89.4, 11140.0], [89.5, 11456.0], [89.6, 11456.0], [89.7, 11576.0], [89.8, 11826.0], [89.9, 12053.0], [90.0, 12488.0], [90.1, 12488.0], [90.2, 12850.0], [90.3, 13081.0], [90.4, 13426.0], [90.5, 13629.0], [90.6, 13629.0], [90.7, 14480.0], [90.8, 14723.0], [90.9, 14986.0], [91.0, 15028.0], [91.1, 15028.0], [91.2, 15047.0], [91.3, 15063.0], [91.4, 15195.0], [91.5, 15243.0], [91.6, 15243.0], [91.7, 15293.0], [91.8, 15470.0], [91.9, 15488.0], [92.0, 15494.0], [92.1, 15494.0], [92.2, 15626.0], [92.3, 15637.0], [92.4, 15656.0], [92.5, 15664.0], [92.6, 15664.0], [92.7, 15685.0], [92.8, 15803.0], [92.9, 15811.0], [93.0, 15872.0], [93.1, 15872.0], [93.2, 15951.0], [93.3, 15974.0], [93.4, 15979.0], [93.5, 16036.0], [93.6, 16036.0], [93.7, 16091.0], [93.8, 16118.0], [93.9, 16124.0], [94.0, 16187.0], [94.1, 16187.0], [94.2, 16197.0], [94.3, 16206.0], [94.4, 16216.0], [94.5, 16232.0], [94.6, 16232.0], [94.7, 16277.0], [94.8, 16292.0], [94.9, 16345.0], [95.0, 16353.0], [95.1, 16353.0], [95.2, 16414.0], [95.3, 16443.0], [95.4, 16480.0], [95.5, 16500.0], [95.6, 16500.0], [95.7, 16508.0], [95.8, 16539.0], [95.9, 16651.0], [96.0, 16654.0], [96.1, 16654.0], [96.2, 16849.0], [96.3, 16921.0], [96.4, 17122.0], [96.5, 17290.0], [96.6, 17290.0], [96.7, 17391.0], [96.8, 17445.0], [96.9, 17527.0], [97.0, 17595.0], [97.1, 17595.0], [97.2, 18028.0], [97.3, 18146.0], [97.4, 18171.0], [97.5, 18199.0], [97.6, 18199.0], [97.7, 18330.0], [97.8, 18589.0], [97.9, 18756.0], [98.0, 19261.0], [98.1, 19261.0], [98.2, 19952.0], [98.3, 20784.0], [98.4, 22097.0], [98.5, 23367.0], [98.6, 23367.0], [98.7, 25959.0], [98.8, 26052.0], [98.9, 26914.0], [99.0, 28392.0], [99.1, 28392.0], [99.2, 28392.0], [99.3, 28717.0], [99.4, 29073.0], [99.5, 29207.0], [99.6, 29207.0], [99.7, 29254.0], [99.8, 30194.0], [99.9, 31232.0]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[0.0, 1232.0], [0.1, 1232.0], [0.2, 1271.0], [0.3, 1336.0], [0.4, 1400.0], [0.5, 1408.0], [0.6, 1408.0], [0.7, 1588.0], [0.8, 1673.0], [0.9, 1673.0], [1.0, 1687.0], [1.1, 1687.0], [1.2, 1919.0], [1.3, 1970.0], [1.4, 1973.0], [1.5, 1995.0], [1.6, 1995.0], [1.7, 2042.0], [1.8, 2071.0], [1.9, 2159.0], [2.0, 2212.0], [2.1, 2212.0], [2.2, 2215.0], [2.3, 2227.0], [2.4, 2237.0], [2.5, 2251.0], [2.6, 2251.0], [2.7, 2261.0], [2.8, 2261.0], [2.9, 2267.0], [3.0, 2277.0], [3.1, 2277.0], [3.2, 2280.0], [3.3, 2286.0], [3.4, 2288.0], [3.5, 2294.0], [3.6, 2294.0], [3.7, 2305.0], [3.8, 2411.0], [3.9, 2433.0], [4.0, 2473.0], [4.1, 2473.0], [4.2, 2474.0], [4.3, 2492.0], [4.4, 2497.0], [4.5, 2502.0], [4.6, 2502.0], [4.7, 2505.0], [4.8, 2508.0], [4.9, 2552.0], [5.0, 2555.0], [5.1, 2555.0], [5.2, 2568.0], [5.3, 2604.0], [5.4, 2632.0], [5.5, 2636.0], [5.6, 2636.0], [5.7, 2759.0], [5.8, 2767.0], [5.9, 2800.0], [6.0, 2820.0], [6.1, 2820.0], [6.2, 2959.0], [6.3, 2963.0], [6.4, 2973.0], [6.5, 2975.0], [6.6, 2975.0], [6.7, 2997.0], [6.8, 3006.0], [6.9, 3009.0], [7.0, 3023.0], [7.1, 3023.0], [7.2, 3039.0], [7.3, 3049.0], [7.4, 3060.0], [7.5, 3074.0], [7.6, 3074.0], [7.7, 3099.0], [7.8, 3109.0], [7.9, 3118.0], [8.0, 3123.0], [8.1, 3123.0], [8.2, 3136.0], [8.3, 3139.0], [8.4, 3175.0], [8.5, 3179.0], [8.6, 3179.0], [8.7, 3188.0], [8.8, 3197.0], [8.9, 3214.0], [9.0, 3220.0], [9.1, 3220.0], [9.2, 3225.0], [9.3, 3254.0], [9.4, 3267.0], [9.5, 3268.0], [9.6, 3268.0], [9.7, 3296.0], [9.8, 3315.0], [9.9, 3338.0], [10.0, 3341.0], [10.1, 3341.0], [10.2, 3362.0], [10.3, 3380.0], [10.4, 3409.0], [10.5, 3432.0], [10.6, 3432.0], [10.7, 3465.0], [10.8, 3504.0], [10.9, 3527.0], [11.0, 3535.0], [11.1, 3535.0], [11.2, 3540.0], [11.3, 3570.0], [11.4, 3579.0], [11.5, 3581.0], [11.6, 3581.0], [11.7, 3618.0], [11.8, 3634.0], [11.9, 3645.0], [12.0, 3673.0], [12.1, 3673.0], [12.2, 3677.0], [12.3, 3685.0], [12.4, 3718.0], [12.5, 3720.0], [12.6, 3720.0], [12.7, 3755.0], [12.8, 3767.0], [12.9, 3768.0], [13.0, 3770.0], [13.1, 3770.0], [13.2, 3774.0], [13.3, 3784.0], [13.4, 3789.0], [13.5, 3794.0], [13.6, 3794.0], [13.7, 3799.0], [13.8, 3803.0], [13.9, 3818.0], [14.0, 3820.0], [14.1, 3820.0], [14.2, 3829.0], [14.3, 3833.0], [14.4, 3833.0], [14.5, 3839.0], [14.6, 3839.0], [14.7, 3849.0], [14.8, 3864.0], [14.9, 3878.0], [15.0, 3916.0], [15.1, 3916.0], [15.2, 3919.0], [15.3, 3935.0], [15.4, 3938.0], [15.5, 3941.0], [15.6, 3941.0], [15.7, 3966.0], [15.8, 3977.0], [15.9, 3995.0], [16.0, 4008.0], [16.1, 4008.0], [16.2, 4018.0], [16.3, 4020.0], [16.4, 4032.0], [16.5, 4038.0], [16.6, 4038.0], [16.7, 4044.0], [16.8, 4077.0], [16.9, 4094.0], [17.0, 4116.0], [17.1, 4116.0], [17.2, 4130.0], [17.3, 4139.0], [17.4, 4148.0], [17.5, 4150.0], [17.6, 4150.0], [17.7, 4160.0], [17.8, 4192.0], [17.9, 4201.0], [18.0, 4201.0], [18.1, 4201.0], [18.2, 4219.0], [18.3, 4220.0], [18.4, 4223.0], [18.5, 4240.0], [18.6, 4240.0], [18.7, 4241.0], [18.8, 4243.0], [18.9, 4254.0], [19.0, 4255.0], [19.1, 4255.0], [19.2, 4259.0], [19.3, 4260.0], [19.4, 4264.0], [19.5, 4270.0], [19.6, 4270.0], [19.7, 4283.0], [19.8, 4300.0], [19.9, 4304.0], [20.0, 4326.0], [20.1, 4326.0], [20.2, 4328.0], [20.3, 4329.0], [20.4, 4330.0], [20.5, 4334.0], [20.6, 4334.0], [20.7, 4339.0], [20.8, 4347.0], [20.9, 4352.0], [21.0, 4360.0], [21.1, 4360.0], [21.2, 4361.0], [21.3, 4361.0], [21.4, 4364.0], [21.5, 4419.0], [21.6, 4419.0], [21.7, 4422.0], [21.8, 4439.0], [21.9, 4443.0], [22.0, 4453.0], [22.1, 4453.0], [22.2, 4476.0], [22.3, 4494.0], [22.4, 4499.0], [22.5, 4521.0], [22.6, 4521.0], [22.7, 4531.0], [22.8, 4546.0], [22.9, 4563.0], [23.0, 4578.0], [23.1, 4578.0], [23.2, 4583.0], [23.3, 4600.0], [23.4, 4634.0], [23.5, 4667.0], [23.6, 4667.0], [23.7, 4714.0], [23.8, 4736.0], [23.9, 4739.0], [24.0, 4749.0], [24.1, 4749.0], [24.2, 4764.0], [24.3, 4780.0], [24.4, 4782.0], [24.5, 4834.0], [24.6, 4834.0], [24.7, 4841.0], [24.8, 4866.0], [24.9, 4870.0], [25.0, 4915.0], [25.1, 4915.0], [25.2, 4918.0], [25.3, 4922.0], [25.4, 4928.0], [25.5, 4942.0], [25.6, 4942.0], [25.7, 4962.0], [25.8, 4964.0], [25.9, 4969.0], [26.0, 4979.0], [26.1, 4979.0], [26.2, 5003.0], [26.3, 5010.0], [26.4, 5011.0], [26.5, 5014.0], [26.6, 5014.0], [26.7, 5022.0], [26.8, 5038.0], [26.9, 5042.0], [27.0, 5057.0], [27.1, 5057.0], [27.2, 5064.0], [27.3, 5066.0], [27.4, 5073.0], [27.5, 5079.0], [27.6, 5079.0], [27.7, 5083.0], [27.8, 5124.0], [27.9, 5125.0], [28.0, 5156.0], [28.1, 5156.0], [28.2, 5178.0], [28.3, 5210.0], [28.4, 5218.0], [28.5, 5239.0], [28.6, 5239.0], [28.7, 5241.0], [28.8, 5267.0], [28.9, 5286.0], [29.0, 5309.0], [29.1, 5309.0], [29.2, 5323.0], [29.3, 5324.0], [29.4, 5326.0], [29.5, 5354.0], [29.6, 5354.0], [29.7, 5369.0], [29.8, 5371.0], [29.9, 5393.0], [30.0, 5393.0], [30.1, 5393.0], [30.2, 5396.0], [30.3, 5405.0], [30.4, 5421.0], [30.5, 5456.0], [30.6, 5456.0], [30.7, 5513.0], [30.8, 5523.0], [30.9, 5529.0], [31.0, 5544.0], [31.1, 5544.0], [31.2, 5548.0], [31.3, 5557.0], [31.4, 5565.0], [31.5, 5620.0], [31.6, 5620.0], [31.7, 5635.0], [31.8, 5640.0], [31.9, 5660.0], [32.0, 5672.0], [32.1, 5672.0], [32.2, 5676.0], [32.3, 5686.0], [32.4, 5693.0], [32.5, 5705.0], [32.6, 5705.0], [32.7, 5725.0], [32.8, 5725.0], [32.9, 5727.0], [33.0, 5739.0], [33.1, 5739.0], [33.2, 5767.0], [33.3, 5771.0], [33.4, 5774.0], [33.5, 5791.0], [33.6, 5791.0], [33.7, 5807.0], [33.8, 5808.0], [33.9, 5819.0], [34.0, 5837.0], [34.1, 5837.0], [34.2, 5856.0], [34.3, 5896.0], [34.4, 5903.0], [34.5, 5912.0], [34.6, 5912.0], [34.7, 5918.0], [34.8, 5929.0], [34.9, 5933.0], [35.0, 5940.0], [35.1, 5940.0], [35.2, 5973.0], [35.3, 5991.0], [35.4, 5992.0], [35.5, 6014.0], [35.6, 6014.0], [35.7, 6020.0], [35.8, 6024.0], [35.9, 6040.0], [36.0, 6062.0], [36.1, 6062.0], [36.2, 6062.0], [36.3, 6062.0], [36.4, 6073.0], [36.5, 6074.0], [36.6, 6074.0], [36.7, 6079.0], [36.8, 6109.0], [36.9, 6111.0], [37.0, 6112.0], [37.1, 6112.0], [37.2, 6134.0], [37.3, 6138.0], [37.4, 6151.0], [37.5, 6171.0], [37.6, 6171.0], [37.7, 6171.0], [37.8, 6177.0], [37.9, 6183.0], [38.0, 6197.0], [38.1, 6197.0], [38.2, 6216.0], [38.3, 6247.0], [38.4, 6273.0], [38.5, 6274.0], [38.6, 6274.0], [38.7, 6323.0], [38.8, 6334.0], [38.9, 6349.0], [39.0, 6354.0], [39.1, 6354.0], [39.2, 6357.0], [39.3, 6388.0], [39.4, 6407.0], [39.5, 6440.0], [39.6, 6440.0], [39.7, 6446.0], [39.8, 6456.0], [39.9, 6471.0], [40.0, 6492.0], [40.1, 6492.0], [40.2, 6518.0], [40.3, 6544.0], [40.4, 6560.0], [40.5, 6567.0], [40.6, 6567.0], [40.7, 6583.0], [40.8, 6587.0], [40.9, 6589.0], [41.0, 6600.0], [41.1, 6600.0], [41.2, 6601.0], [41.3, 6605.0], [41.4, 6606.0], [41.5, 6626.0], [41.6, 6626.0], [41.7, 6643.0], [41.8, 6661.0], [41.9, 6690.0], [42.0, 6693.0], [42.1, 6693.0], [42.2, 6701.0], [42.3, 6710.0], [42.4, 6714.0], [42.5, 6721.0], [42.6, 6721.0], [42.7, 6741.0], [42.8, 6769.0], [42.9, 6771.0], [43.0, 6779.0], [43.1, 6779.0], [43.2, 6787.0], [43.3, 6796.0], [43.4, 6799.0], [43.5, 6803.0], [43.6, 6803.0], [43.7, 6815.0], [43.8, 6818.0], [43.9, 6848.0], [44.0, 6859.0], [44.1, 6859.0], [44.2, 6859.0], [44.3, 6861.0], [44.4, 6868.0], [44.5, 6873.0], [44.6, 6873.0], [44.7, 6880.0], [44.8, 6895.0], [44.9, 6936.0], [45.0, 6940.0], [45.1, 6940.0], [45.2, 6950.0], [45.3, 6951.0], [45.4, 6954.0], [45.5, 7059.0], [45.6, 7059.0], [45.7, 7154.0], [45.8, 7175.0], [45.9, 7189.0], [46.0, 7219.0], [46.1, 7219.0], [46.2, 7242.0], [46.3, 7246.0], [46.4, 7249.0], [46.5, 7268.0], [46.6, 7268.0], [46.7, 7272.0], [46.8, 7300.0], [46.9, 7303.0], [47.0, 7310.0], [47.1, 7310.0], [47.2, 7335.0], [47.3, 7339.0], [47.4, 7359.0], [47.5, 7364.0], [47.6, 7364.0], [47.7, 7394.0], [47.8, 7404.0], [47.9, 7413.0], [48.0, 7416.0], [48.1, 7416.0], [48.2, 7423.0], [48.3, 7428.0], [48.4, 7439.0], [48.5, 7443.0], [48.6, 7443.0], [48.7, 7447.0], [48.8, 7452.0], [48.9, 7454.0], [49.0, 7466.0], [49.1, 7466.0], [49.2, 7474.0], [49.3, 7481.0], [49.4, 7496.0], [49.5, 7515.0], [49.6, 7515.0], [49.7, 7527.0], [49.8, 7555.0], [49.9, 7563.0], [50.0, 7589.0], [50.1, 7589.0], [50.2, 7600.0], [50.3, 7606.0], [50.4, 7660.0], [50.5, 7664.0], [50.6, 7664.0], [50.7, 7672.0], [50.8, 7689.0], [50.9, 7712.0], [51.0, 7739.0], [51.1, 7739.0], [51.2, 7765.0], [51.3, 7794.0], [51.4, 7809.0], [51.5, 7812.0], [51.6, 7812.0], [51.7, 7837.0], [51.8, 7838.0], [51.9, 7849.0], [52.0, 7853.0], [52.1, 7853.0], [52.2, 7880.0], [52.3, 7892.0], [52.4, 7909.0], [52.5, 7932.0], [52.6, 7932.0], [52.7, 7985.0], [52.8, 8001.0], [52.9, 8004.0], [53.0, 8036.0], [53.1, 8036.0], [53.2, 8086.0], [53.3, 8123.0], [53.4, 8130.0], [53.5, 8149.0], [53.6, 8149.0], [53.7, 8151.0], [53.8, 8153.0], [53.9, 8166.0], [54.0, 8170.0], [54.1, 8170.0], [54.2, 8193.0], [54.3, 8193.0], [54.4, 8207.0], [54.5, 8232.0], [54.6, 8232.0], [54.7, 8288.0], [54.8, 8297.0], [54.9, 8310.0], [55.0, 8332.0], [55.1, 8332.0], [55.2, 8355.0], [55.3, 8365.0], [55.4, 8374.0], [55.5, 8398.0], [55.6, 8398.0], [55.7, 8405.0], [55.8, 8407.0], [55.9, 8427.0], [56.0, 8444.0], [56.1, 8444.0], [56.2, 8493.0], [56.3, 8512.0], [56.4, 8519.0], [56.5, 8576.0], [56.6, 8576.0], [56.7, 8578.0], [56.8, 8585.0], [56.9, 8591.0], [57.0, 8597.0], [57.1, 8597.0], [57.2, 8600.0], [57.3, 8622.0], [57.4, 8625.0], [57.5, 8629.0], [57.6, 8629.0], [57.7, 8632.0], [57.8, 8656.0], [57.9, 8666.0], [58.0, 8676.0], [58.1, 8676.0], [58.2, 8692.0], [58.3, 8694.0], [58.4, 8708.0], [58.5, 8732.0], [58.6, 8732.0], [58.7, 8834.0], [58.8, 8851.0], [58.9, 8860.0], [59.0, 8862.0], [59.1, 8862.0], [59.2, 8868.0], [59.3, 8871.0], [59.4, 8871.0], [59.5, 8891.0], [59.6, 8891.0], [59.7, 8898.0], [59.8, 8910.0], [59.9, 8944.0], [60.0, 8970.0], [60.1, 8970.0], [60.2, 8986.0], [60.3, 9003.0], [60.4, 9014.0], [60.5, 9014.0], [60.6, 9014.0], [60.7, 9018.0], [60.8, 9025.0], [60.9, 9037.0], [61.0, 9057.0], [61.1, 9057.0], [61.2, 9100.0], [61.3, 9124.0], [61.4, 9190.0], [61.5, 9196.0], [61.6, 9196.0], [61.7, 9203.0], [61.8, 9220.0], [61.9, 9239.0], [62.0, 9265.0], [62.1, 9265.0], [62.2, 9277.0], [62.3, 9291.0], [62.4, 9322.0], [62.5, 9369.0], [62.6, 9369.0], [62.7, 9370.0], [62.8, 9389.0], [62.9, 9395.0], [63.0, 9457.0], [63.1, 9457.0], [63.2, 9462.0], [63.3, 9497.0], [63.4, 9504.0], [63.5, 9524.0], [63.6, 9524.0], [63.7, 9531.0], [63.8, 9544.0], [63.9, 9552.0], [64.0, 9563.0], [64.1, 9563.0], [64.2, 9603.0], [64.3, 9622.0], [64.4, 9667.0], [64.5, 9678.0], [64.6, 9678.0], [64.7, 9688.0], [64.8, 9702.0], [64.9, 9704.0], [65.0, 9716.0], [65.1, 9716.0], [65.2, 9721.0], [65.3, 9725.0], [65.4, 9729.0], [65.5, 9734.0], [65.6, 9734.0], [65.7, 9764.0], [65.8, 9839.0], [65.9, 9842.0], [66.0, 9872.0], [66.1, 9872.0], [66.2, 9880.0], [66.3, 9948.0], [66.4, 9967.0], [66.5, 9995.0], [66.6, 9995.0], [66.7, 10013.0], [66.8, 10078.0], [66.9, 10079.0], [67.0, 10116.0], [67.1, 10116.0], [67.2, 10153.0], [67.3, 10174.0], [67.4, 10186.0], [67.5, 10219.0], [67.6, 10219.0], [67.7, 10228.0], [67.8, 10302.0], [67.9, 10311.0], [68.0, 10320.0], [68.1, 10320.0], [68.2, 10425.0], [68.3, 10429.0], [68.4, 10486.0], [68.5, 10586.0], [68.6, 10586.0], [68.7, 10596.0], [68.8, 10616.0], [68.9, 10622.0], [69.0, 10641.0], [69.1, 10641.0], [69.2, 10652.0], [69.3, 10664.0], [69.4, 10723.0], [69.5, 10769.0], [69.6, 10769.0], [69.7, 10832.0], [69.8, 10833.0], [69.9, 10956.0], [70.0, 10960.0], [70.1, 10960.0], [70.2, 11003.0], [70.3, 11088.0], [70.4, 11091.0], [70.5, 11122.0], [70.6, 11122.0], [70.7, 11145.0], [70.8, 11161.0], [70.9, 11174.0], [71.0, 11282.0], [71.1, 11282.0], [71.2, 11303.0], [71.3, 11335.0], [71.4, 11348.0], [71.5, 11362.0], [71.6, 11362.0], [71.7, 11427.0], [71.8, 11439.0], [71.9, 11443.0], [72.0, 11460.0], [72.1, 11460.0], [72.2, 11500.0], [72.3, 11504.0], [72.4, 11540.0], [72.5, 11556.0], [72.6, 11556.0], [72.7, 11605.0], [72.8, 11613.0], [72.9, 11738.0], [73.0, 11789.0], [73.1, 11789.0], [73.2, 11791.0], [73.3, 11853.0], [73.4, 11915.0], [73.5, 11923.0], [73.6, 11923.0], [73.7, 11980.0], [73.8, 12011.0], [73.9, 12073.0], [74.0, 12094.0], [74.1, 12094.0], [74.2, 12094.0], [74.3, 12095.0], [74.4, 12104.0], [74.5, 12189.0], [74.6, 12189.0], [74.7, 12240.0], [74.8, 12241.0], [74.9, 12280.0], [75.0, 12378.0], [75.1, 12378.0], [75.2, 12479.0], [75.3, 12557.0], [75.4, 12623.0], [75.5, 12645.0], [75.6, 12645.0], [75.7, 12728.0], [75.8, 12733.0], [75.9, 12784.0], [76.0, 12800.0], [76.1, 12800.0], [76.2, 12813.0], [76.3, 12827.0], [76.4, 12888.0], [76.5, 12911.0], [76.6, 12911.0], [76.7, 12978.0], [76.8, 13151.0], [76.9, 13257.0], [77.0, 13274.0], [77.1, 13274.0], [77.2, 13286.0], [77.3, 13419.0], [77.4, 13440.0], [77.5, 13493.0], [77.6, 13493.0], [77.7, 13525.0], [77.8, 13562.0], [77.9, 13576.0], [78.0, 13652.0], [78.1, 13652.0], [78.2, 13831.0], [78.3, 13835.0], [78.4, 13838.0], [78.5, 13851.0], [78.6, 13851.0], [78.7, 13882.0], [78.8, 13894.0], [78.9, 13940.0], [79.0, 13941.0], [79.1, 13941.0], [79.2, 13966.0], [79.3, 14025.0], [79.4, 14043.0], [79.5, 14051.0], [79.6, 14051.0], [79.7, 14119.0], [79.8, 14246.0], [79.9, 14337.0], [80.0, 14356.0], [80.1, 14356.0], [80.2, 14429.0], [80.3, 14470.0], [80.4, 14480.0], [80.5, 14488.0], [80.6, 14488.0], [80.7, 14503.0], [80.8, 14644.0], [80.9, 14660.0], [81.0, 14683.0], [81.1, 14683.0], [81.2, 14708.0], [81.3, 14716.0], [81.4, 14912.0], [81.5, 14923.0], [81.6, 14923.0], [81.7, 14981.0], [81.8, 15053.0], [81.9, 15129.0], [82.0, 15214.0], [82.1, 15214.0], [82.2, 15271.0], [82.3, 15291.0], [82.4, 15318.0], [82.5, 15322.0], [82.6, 15322.0], [82.7, 15329.0], [82.8, 15367.0], [82.9, 15413.0], [83.0, 15467.0], [83.1, 15467.0], [83.2, 15470.0], [83.3, 15509.0], [83.4, 15528.0], [83.5, 15563.0], [83.6, 15563.0], [83.7, 15619.0], [83.8, 15638.0], [83.9, 15791.0], [84.0, 15804.0], [84.1, 15804.0], [84.2, 15919.0], [84.3, 15950.0], [84.4, 15971.0], [84.5, 15999.0], [84.6, 15999.0], [84.7, 16012.0], [84.8, 16118.0], [84.9, 16133.0], [85.0, 16134.0], [85.1, 16134.0], [85.2, 16134.0], [85.3, 16173.0], [85.4, 16189.0], [85.5, 16222.0], [85.6, 16222.0], [85.7, 16259.0], [85.8, 16281.0], [85.9, 16333.0], [86.0, 16336.0], [86.1, 16336.0], [86.2, 16382.0], [86.3, 16438.0], [86.4, 16442.0], [86.5, 16475.0], [86.6, 16475.0], [86.7, 16554.0], [86.8, 16578.0], [86.9, 16602.0], [87.0, 16634.0], [87.1, 16634.0], [87.2, 16649.0], [87.3, 16650.0], [87.4, 16682.0], [87.5, 16711.0], [87.6, 16711.0], [87.7, 16716.0], [87.8, 16731.0], [87.9, 16887.0], [88.0, 16998.0], [88.1, 16998.0], [88.2, 17182.0], [88.3, 17222.0], [88.4, 17238.0], [88.5, 17356.0], [88.6, 17356.0], [88.7, 17438.0], [88.8, 17450.0], [88.9, 17497.0], [89.0, 17531.0], [89.1, 17531.0], [89.2, 17533.0], [89.3, 17576.0], [89.4, 17576.0], [89.5, 17645.0], [89.6, 17645.0], [89.7, 17696.0], [89.8, 17784.0], [89.9, 17828.0], [90.0, 17857.0], [90.1, 17857.0], [90.2, 17953.0], [90.3, 18025.0], [90.4, 18268.0], [90.5, 18289.0], [90.6, 18289.0], [90.7, 18528.0], [90.8, 18673.0], [90.9, 18694.0], [91.0, 18740.0], [91.1, 18740.0], [91.2, 18749.0], [91.3, 18759.0], [91.4, 18854.0], [91.5, 18978.0], [91.6, 18978.0], [91.7, 19034.0], [91.8, 19070.0], [91.9, 19164.0], [92.0, 19228.0], [92.1, 19228.0], [92.2, 19244.0], [92.3, 19294.0], [92.4, 19342.0], [92.5, 19459.0], [92.6, 19459.0], [92.7, 19518.0], [92.8, 19560.0], [92.9, 19612.0], [93.0, 19726.0], [93.1, 19726.0], [93.2, 19735.0], [93.3, 19767.0], [93.4, 19814.0], [93.5, 19820.0], [93.6, 19820.0], [93.7, 19887.0], [93.8, 20059.0], [93.9, 20104.0], [94.0, 20151.0], [94.1, 20151.0], [94.2, 20162.0], [94.3, 20574.0], [94.4, 20681.0], [94.5, 21720.0], [94.6, 21720.0], [94.7, 21727.0], [94.8, 21803.0], [94.9, 22044.0], [95.0, 22242.0], [95.1, 22242.0], [95.2, 22256.0], [95.3, 22345.0], [95.4, 22627.0], [95.5, 23233.0], [95.6, 23233.0], [95.7, 23387.0], [95.8, 23978.0], [95.9, 24194.0], [96.0, 24227.0], [96.1, 24227.0], [96.2, 24499.0], [96.3, 24692.0], [96.4, 24752.0], [96.5, 25222.0], [96.6, 25222.0], [96.7, 25226.0], [96.8, 25229.0], [96.9, 25271.0], [97.0, 25606.0], [97.1, 25606.0], [97.2, 25793.0], [97.3, 26166.0], [97.4, 26555.0], [97.5, 26559.0], [97.6, 26559.0], [97.7, 26567.0], [97.8, 26623.0], [97.9, 27099.0], [98.0, 27179.0], [98.1, 27179.0], [98.2, 27607.0], [98.3, 27701.0], [98.4, 27730.0], [98.5, 27841.0], [98.6, 27841.0], [98.7, 28390.0], [98.8, 28657.0], [98.9, 28717.0], [99.0, 28835.0], [99.1, 28835.0], [99.2, 30280.0], [99.3, 31112.0], [99.4, 31374.0], [99.5, 31756.0], [99.6, 31756.0], [99.7, 31816.0], [99.8, 32123.0], [99.9, 48555.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[0.0, 244.0], [0.1, 244.0], [0.2, 244.0], [0.3, 246.0], [0.4, 246.0], [0.5, 246.0], [0.6, 246.0], [0.7, 246.0], [0.8, 246.0], [0.9, 246.0], [1.0, 247.0], [1.1, 247.0], [1.2, 247.0], [1.3, 247.0], [1.4, 247.0], [1.5, 248.0], [1.6, 248.0], [1.7, 248.0], [1.8, 248.0], [1.9, 248.0], [2.0, 248.0], [2.1, 248.0], [2.2, 248.0], [2.3, 248.0], [2.4, 248.0], [2.5, 248.0], [2.6, 248.0], [2.7, 248.0], [2.8, 248.0], [2.9, 248.0], [3.0, 249.0], [3.1, 249.0], [3.2, 249.0], [3.3, 249.0], [3.4, 249.0], [3.5, 249.0], [3.6, 249.0], [3.7, 249.0], [3.8, 249.0], [3.9, 249.0], [4.0, 249.0], [4.1, 249.0], [4.2, 249.0], [4.3, 249.0], [4.4, 250.0], [4.5, 250.0], [4.6, 250.0], [4.7, 250.0], [4.8, 250.0], [4.9, 250.0], [5.0, 250.0], [5.1, 250.0], [5.2, 250.0], [5.3, 250.0], [5.4, 250.0], [5.5, 250.0], [5.6, 250.0], [5.7, 250.0], [5.8, 250.0], [5.9, 250.0], [6.0, 250.0], [6.1, 250.0], [6.2, 250.0], [6.3, 250.0], [6.4, 250.0], [6.5, 250.0], [6.6, 250.0], [6.7, 250.0], [6.8, 251.0], [6.9, 251.0], [7.0, 251.0], [7.1, 251.0], [7.2, 251.0], [7.3, 251.0], [7.4, 251.0], [7.5, 251.0], [7.6, 251.0], [7.7, 251.0], [7.8, 251.0], [7.9, 251.0], [8.0, 251.0], [8.1, 251.0], [8.2, 251.0], [8.3, 251.0], [8.4, 251.0], [8.5, 251.0], [8.6, 251.0], [8.7, 251.0], [8.8, 251.0], [8.9, 251.0], [9.0, 251.0], [9.1, 251.0], [9.2, 251.0], [9.3, 251.0], [9.4, 251.0], [9.5, 251.0], [9.6, 251.0], [9.7, 251.0], [9.8, 251.0], [9.9, 251.0], [10.0, 251.0], [10.1, 251.0], [10.2, 251.0], [10.3, 251.0], [10.4, 251.0], [10.5, 252.0], [10.6, 252.0], [10.7, 252.0], [10.8, 252.0], [10.9, 252.0], [11.0, 252.0], [11.1, 252.0], [11.2, 252.0], [11.3, 252.0], [11.4, 252.0], [11.5, 252.0], [11.6, 252.0], [11.7, 252.0], [11.8, 252.0], [11.9, 252.0], [12.0, 252.0], [12.1, 252.0], [12.2, 252.0], [12.3, 252.0], [12.4, 252.0], [12.5, 252.0], [12.6, 252.0], [12.7, 252.0], [12.8, 252.0], [12.9, 252.0], [13.0, 252.0], [13.1, 252.0], [13.2, 252.0], [13.3, 252.0], [13.4, 252.0], [13.5, 252.0], [13.6, 252.0], [13.7, 252.0], [13.8, 252.0], [13.9, 253.0], [14.0, 253.0], [14.1, 253.0], [14.2, 253.0], [14.3, 253.0], [14.4, 253.0], [14.5, 253.0], [14.6, 253.0], [14.7, 253.0], [14.8, 253.0], [14.9, 253.0], [15.0, 253.0], [15.1, 253.0], [15.2, 253.0], [15.3, 253.0], [15.4, 253.0], [15.5, 253.0], [15.6, 253.0], [15.7, 253.0], [15.8, 253.0], [15.9, 253.0], [16.0, 253.0], [16.1, 253.0], [16.2, 253.0], [16.3, 253.0], [16.4, 253.0], [16.5, 253.0], [16.6, 253.0], [16.7, 253.0], [16.8, 253.0], [16.9, 253.0], [17.0, 253.0], [17.1, 253.0], [17.2, 253.0], [17.3, 253.0], [17.4, 253.0], [17.5, 253.0], [17.6, 253.0], [17.7, 253.0], [17.8, 253.0], [17.9, 253.0], [18.0, 254.0], [18.1, 254.0], [18.2, 254.0], [18.3, 254.0], [18.4, 254.0], [18.5, 254.0], [18.6, 254.0], [18.7, 254.0], [18.8, 254.0], [18.9, 254.0], [19.0, 254.0], [19.1, 254.0], [19.2, 254.0], [19.3, 254.0], [19.4, 254.0], [19.5, 254.0], [19.6, 254.0], [19.7, 254.0], [19.8, 254.0], [19.9, 254.0], [20.0, 254.0], [20.1, 254.0], [20.2, 254.0], [20.3, 254.0], [20.4, 254.0], [20.5, 254.0], [20.6, 254.0], [20.7, 254.0], [20.8, 254.0], [20.9, 254.0], [21.0, 254.0], [21.1, 254.0], [21.2, 254.0], [21.3, 254.0], [21.4, 254.0], [21.5, 254.0], [21.6, 254.0], [21.7, 254.0], [21.8, 254.0], [21.9, 254.0], [22.0, 254.0], [22.1, 254.0], [22.2, 255.0], [22.3, 255.0], [22.4, 255.0], [22.5, 255.0], [22.6, 255.0], [22.7, 255.0], [22.8, 255.0], [22.9, 255.0], [23.0, 255.0], [23.1, 255.0], [23.2, 255.0], [23.3, 255.0], [23.4, 255.0], [23.5, 255.0], [23.6, 255.0], [23.7, 255.0], [23.8, 255.0], [23.9, 255.0], [24.0, 255.0], [24.1, 255.0], [24.2, 255.0], [24.3, 255.0], [24.4, 255.0], [24.5, 255.0], [24.6, 255.0], [24.7, 255.0], [24.8, 255.0], [24.9, 255.0], [25.0, 255.0], [25.1, 255.0], [25.2, 255.0], [25.3, 255.0], [25.4, 255.0], [25.5, 255.0], [25.6, 255.0], [25.7, 255.0], [25.8, 255.0], [25.9, 255.0], [26.0, 255.0], [26.1, 255.0], [26.2, 256.0], [26.3, 256.0], [26.4, 256.0], [26.5, 256.0], [26.6, 256.0], [26.7, 256.0], [26.8, 256.0], [26.9, 256.0], [27.0, 256.0], [27.1, 256.0], [27.2, 256.0], [27.3, 256.0], [27.4, 256.0], [27.5, 256.0], [27.6, 256.0], [27.7, 256.0], [27.8, 256.0], [27.9, 256.0], [28.0, 256.0], [28.1, 256.0], [28.2, 256.0], [28.3, 256.0], [28.4, 256.0], [28.5, 256.0], [28.6, 256.0], [28.7, 256.0], [28.8, 256.0], [28.9, 256.0], [29.0, 256.0], [29.1, 256.0], [29.2, 256.0], [29.3, 257.0], [29.4, 257.0], [29.5, 257.0], [29.6, 257.0], [29.7, 257.0], [29.8, 257.0], [29.9, 257.0], [30.0, 257.0], [30.1, 257.0], [30.2, 257.0], [30.3, 257.0], [30.4, 257.0], [30.5, 257.0], [30.6, 257.0], [30.7, 257.0], [30.8, 257.0], [30.9, 257.0], [31.0, 257.0], [31.1, 257.0], [31.2, 257.0], [31.3, 257.0], [31.4, 257.0], [31.5, 257.0], [31.6, 257.0], [31.7, 257.0], [31.8, 257.0], [31.9, 257.0], [32.0, 257.0], [32.1, 257.0], [32.2, 257.0], [32.3, 257.0], [32.4, 257.0], [32.5, 257.0], [32.6, 257.0], [32.7, 257.0], [32.8, 258.0], [32.9, 258.0], [33.0, 258.0], [33.1, 258.0], [33.2, 258.0], [33.3, 258.0], [33.4, 258.0], [33.5, 258.0], [33.6, 258.0], [33.7, 258.0], [33.8, 258.0], [33.9, 258.0], [34.0, 258.0], [34.1, 258.0], [34.2, 258.0], [34.3, 258.0], [34.4, 258.0], [34.5, 258.0], [34.6, 258.0], [34.7, 258.0], [34.8, 258.0], [34.9, 258.0], [35.0, 259.0], [35.1, 259.0], [35.2, 259.0], [35.3, 259.0], [35.4, 259.0], [35.5, 259.0], [35.6, 259.0], [35.7, 259.0], [35.8, 259.0], [35.9, 259.0], [36.0, 259.0], [36.1, 259.0], [36.2, 259.0], [36.3, 259.0], [36.4, 259.0], [36.5, 259.0], [36.6, 259.0], [36.7, 259.0], [36.8, 259.0], [36.9, 260.0], [37.0, 260.0], [37.1, 260.0], [37.2, 260.0], [37.3, 260.0], [37.4, 260.0], [37.5, 260.0], [37.6, 260.0], [37.7, 260.0], [37.8, 260.0], [37.9, 260.0], [38.0, 260.0], [38.1, 260.0], [38.2, 260.0], [38.3, 260.0], [38.4, 260.0], [38.5, 260.0], [38.6, 260.0], [38.7, 261.0], [38.8, 261.0], [38.9, 261.0], [39.0, 261.0], [39.1, 261.0], [39.2, 261.0], [39.3, 262.0], [39.4, 262.0], [39.5, 262.0], [39.6, 262.0], [39.7, 262.0], [39.8, 262.0], [39.9, 262.0], [40.0, 262.0], [40.1, 262.0], [40.2, 263.0], [40.3, 263.0], [40.4, 263.0], [40.5, 263.0], [40.6, 263.0], [40.7, 263.0], [40.8, 263.0], [40.9, 263.0], [41.0, 264.0], [41.1, 264.0], [41.2, 264.0], [41.3, 264.0], [41.4, 264.0], [41.5, 264.0], [41.6, 264.0], [41.7, 264.0], [41.8, 265.0], [41.9, 265.0], [42.0, 265.0], [42.1, 265.0], [42.2, 265.0], [42.3, 265.0], [42.4, 266.0], [42.5, 266.0], [42.6, 266.0], [42.7, 266.0], [42.8, 266.0], [42.9, 267.0], [43.0, 267.0], [43.1, 267.0], [43.2, 267.0], [43.3, 267.0], [43.4, 267.0], [43.5, 267.0], [43.6, 267.0], [43.7, 267.0], [43.8, 267.0], [43.9, 268.0], [44.0, 268.0], [44.1, 268.0], [44.2, 268.0], [44.3, 268.0], [44.4, 268.0], [44.5, 268.0], [44.6, 268.0], [44.7, 268.0], [44.8, 268.0], [44.9, 268.0], [45.0, 269.0], [45.1, 269.0], [45.2, 269.0], [45.3, 269.0], [45.4, 270.0], [45.5, 270.0], [45.6, 270.0], [45.7, 270.0], [45.8, 270.0], [45.9, 270.0], [46.0, 270.0], [46.1, 270.0], [46.2, 270.0], [46.3, 270.0], [46.4, 270.0], [46.5, 270.0], [46.6, 270.0], [46.7, 270.0], [46.8, 271.0], [46.9, 271.0], [47.0, 271.0], [47.1, 271.0], [47.2, 271.0], [47.3, 271.0], [47.4, 271.0], [47.5, 271.0], [47.6, 271.0], [47.7, 271.0], [47.8, 271.0], [47.9, 271.0], [48.0, 271.0], [48.1, 271.0], [48.2, 271.0], [48.3, 271.0], [48.4, 272.0], [48.5, 272.0], [48.6, 272.0], [48.7, 272.0], [48.8, 272.0], [48.9, 272.0], [49.0, 272.0], [49.1, 272.0], [49.2, 272.0], [49.3, 272.0], [49.4, 272.0], [49.5, 272.0], [49.6, 272.0], [49.7, 272.0], [49.8, 272.0], [49.9, 272.0], [50.0, 272.0], [50.1, 272.0], [50.2, 272.0], [50.3, 272.0], [50.4, 272.0], [50.5, 272.0], [50.6, 272.0], [50.7, 273.0], [50.8, 273.0], [50.9, 273.0], [51.0, 273.0], [51.1, 273.0], [51.2, 273.0], [51.3, 273.0], [51.4, 273.0], [51.5, 273.0], [51.6, 273.0], [51.7, 273.0], [51.8, 273.0], [51.9, 273.0], [52.0, 274.0], [52.1, 274.0], [52.2, 274.0], [52.3, 274.0], [52.4, 274.0], [52.5, 274.0], [52.6, 274.0], [52.7, 274.0], [52.8, 274.0], [52.9, 274.0], [53.0, 274.0], [53.1, 274.0], [53.2, 274.0], [53.3, 274.0], [53.4, 274.0], [53.5, 274.0], [53.6, 274.0], [53.7, 274.0], [53.8, 274.0], [53.9, 274.0], [54.0, 274.0], [54.1, 274.0], [54.2, 274.0], [54.3, 274.0], [54.4, 274.0], [54.5, 274.0], [54.6, 274.0], [54.7, 274.0], [54.8, 275.0], [54.9, 275.0], [55.0, 275.0], [55.1, 275.0], [55.2, 275.0], [55.3, 275.0], [55.4, 275.0], [55.5, 275.0], [55.6, 275.0], [55.7, 275.0], [55.8, 275.0], [55.9, 275.0], [56.0, 275.0], [56.1, 275.0], [56.2, 275.0], [56.3, 275.0], [56.4, 275.0], [56.5, 275.0], [56.6, 275.0], [56.7, 275.0], [56.8, 275.0], [56.9, 275.0], [57.0, 275.0], [57.1, 275.0], [57.2, 275.0], [57.3, 275.0], [57.4, 275.0], [57.5, 275.0], [57.6, 275.0], [57.7, 275.0], [57.8, 275.0], [57.9, 275.0], [58.0, 276.0], [58.1, 276.0], [58.2, 276.0], [58.3, 276.0], [58.4, 276.0], [58.5, 276.0], [58.6, 276.0], [58.7, 276.0], [58.8, 276.0], [58.9, 276.0], [59.0, 276.0], [59.1, 276.0], [59.2, 276.0], [59.3, 276.0], [59.4, 276.0], [59.5, 276.0], [59.6, 276.0], [59.7, 276.0], [59.8, 276.0], [59.9, 276.0], [60.0, 276.0], [60.1, 276.0], [60.2, 276.0], [60.3, 276.0], [60.4, 276.0], [60.5, 276.0], [60.6, 276.0], [60.7, 276.0], [60.8, 276.0], [60.9, 276.0], [61.0, 276.0], [61.1, 276.0], [61.2, 276.0], [61.3, 277.0], [61.4, 277.0], [61.5, 277.0], [61.6, 277.0], [61.7, 277.0], [61.8, 277.0], [61.9, 277.0], [62.0, 277.0], [62.1, 277.0], [62.2, 277.0], [62.3, 277.0], [62.4, 277.0], [62.5, 277.0], [62.6, 277.0], [62.7, 277.0], [62.8, 277.0], [62.9, 277.0], [63.0, 277.0], [63.1, 277.0], [63.2, 277.0], [63.3, 277.0], [63.4, 277.0], [63.5, 277.0], [63.6, 277.0], [63.7, 277.0], [63.8, 277.0], [63.9, 277.0], [64.0, 277.0], [64.1, 277.0], [64.2, 277.0], [64.3, 277.0], [64.4, 277.0], [64.5, 277.0], [64.6, 277.0], [64.7, 277.0], [64.8, 277.0], [64.9, 277.0], [65.0, 277.0], [65.1, 277.0], [65.2, 277.0], [65.3, 277.0], [65.4, 277.0], [65.5, 277.0], [65.6, 277.0], [65.7, 277.0], [65.8, 278.0], [65.9, 278.0], [66.0, 278.0], [66.1, 278.0], [66.2, 278.0], [66.3, 278.0], [66.4, 278.0], [66.5, 278.0], [66.6, 278.0], [66.7, 278.0], [66.8, 278.0], [66.9, 278.0], [67.0, 278.0], [67.1, 278.0], [67.2, 278.0], [67.3, 278.0], [67.4, 278.0], [67.5, 278.0], [67.6, 278.0], [67.7, 278.0], [67.8, 278.0], [67.9, 278.0], [68.0, 278.0], [68.1, 278.0], [68.2, 278.0], [68.3, 278.0], [68.4, 278.0], [68.5, 278.0], [68.6, 278.0], [68.7, 279.0], [68.8, 279.0], [68.9, 279.0], [69.0, 279.0], [69.1, 279.0], [69.2, 279.0], [69.3, 279.0], [69.4, 279.0], [69.5, 279.0], [69.6, 279.0], [69.7, 279.0], [69.8, 279.0], [69.9, 279.0], [70.0, 279.0], [70.1, 279.0], [70.2, 279.0], [70.3, 279.0], [70.4, 279.0], [70.5, 279.0], [70.6, 279.0], [70.7, 279.0], [70.8, 279.0], [70.9, 279.0], [71.0, 279.0], [71.1, 279.0], [71.2, 279.0], [71.3, 279.0], [71.4, 279.0], [71.5, 279.0], [71.6, 279.0], [71.7, 279.0], [71.8, 279.0], [71.9, 279.0], [72.0, 279.0], [72.1, 279.0], [72.2, 279.0], [72.3, 279.0], [72.4, 280.0], [72.5, 280.0], [72.6, 280.0], [72.7, 280.0], [72.8, 280.0], [72.9, 280.0], [73.0, 280.0], [73.1, 280.0], [73.2, 280.0], [73.3, 280.0], [73.4, 280.0], [73.5, 280.0], [73.6, 280.0], [73.7, 280.0], [73.8, 280.0], [73.9, 280.0], [74.0, 280.0], [74.1, 280.0], [74.2, 280.0], [74.3, 280.0], [74.4, 280.0], [74.5, 280.0], [74.6, 280.0], [74.7, 280.0], [74.8, 280.0], [74.9, 280.0], [75.0, 280.0], [75.1, 280.0], [75.2, 280.0], [75.3, 280.0], [75.4, 280.0], [75.5, 280.0], [75.6, 280.0], [75.7, 281.0], [75.8, 281.0], [75.9, 281.0], [76.0, 281.0], [76.1, 281.0], [76.2, 281.0], [76.3, 281.0], [76.4, 281.0], [76.5, 281.0], [76.6, 281.0], [76.7, 281.0], [76.8, 281.0], [76.9, 281.0], [77.0, 281.0], [77.1, 281.0], [77.2, 281.0], [77.3, 281.0], [77.4, 281.0], [77.5, 281.0], [77.6, 281.0], [77.7, 281.0], [77.8, 281.0], [77.9, 281.0], [78.0, 281.0], [78.1, 281.0], [78.2, 282.0], [78.3, 282.0], [78.4, 282.0], [78.5, 282.0], [78.6, 282.0], [78.7, 282.0], [78.8, 282.0], [78.9, 282.0], [79.0, 282.0], [79.1, 282.0], [79.2, 282.0], [79.3, 282.0], [79.4, 282.0], [79.5, 282.0], [79.6, 282.0], [79.7, 282.0], [79.8, 282.0], [79.9, 282.0], [80.0, 282.0], [80.1, 282.0], [80.2, 283.0], [80.3, 283.0], [80.4, 283.0], [80.5, 283.0], [80.6, 283.0], [80.7, 283.0], [80.8, 283.0], [80.9, 283.0], [81.0, 283.0], [81.1, 283.0], [81.2, 283.0], [81.3, 283.0], [81.4, 283.0], [81.5, 283.0], [81.6, 283.0], [81.7, 283.0], [81.8, 283.0], [81.9, 283.0], [82.0, 284.0], [82.1, 284.0], [82.2, 284.0], [82.3, 284.0], [82.4, 284.0], [82.5, 284.0], [82.6, 284.0], [82.7, 284.0], [82.8, 284.0], [82.9, 284.0], [83.0, 284.0], [83.1, 284.0], [83.2, 284.0], [83.3, 284.0], [83.4, 284.0], [83.5, 285.0], [83.6, 285.0], [83.7, 285.0], [83.8, 285.0], [83.9, 285.0], [84.0, 285.0], [84.1, 285.0], [84.2, 285.0], [84.3, 286.0], [84.4, 286.0], [84.5, 286.0], [84.6, 286.0], [84.7, 286.0], [84.8, 286.0], [84.9, 286.0], [85.0, 287.0], [85.1, 287.0], [85.2, 287.0], [85.3, 287.0], [85.4, 287.0], [85.5, 287.0], [85.6, 287.0], [85.7, 287.0], [85.8, 288.0], [85.9, 288.0], [86.0, 289.0], [86.1, 289.0], [86.2, 289.0], [86.3, 289.0], [86.4, 289.0], [86.5, 290.0], [86.6, 290.0], [86.7, 290.0], [86.8, 291.0], [86.9, 292.0], [87.0, 293.0], [87.1, 293.0], [87.2, 295.0], [87.3, 296.0], [87.4, 297.0], [87.5, 299.0], [87.6, 299.0], [87.7, 299.0], [87.8, 300.0], [87.9, 301.0], [88.0, 309.0], [88.1, 309.0], [88.2, 314.0], [88.3, 318.0], [88.4, 325.0], [88.5, 500.0], [88.6, 500.0], [88.7, 500.0], [88.8, 505.0], [88.9, 636.0], [89.0, 775.0], [89.1, 775.0], [89.2, 790.0], [89.3, 795.0], [89.4, 801.0], [89.5, 802.0], [89.6, 802.0], [89.7, 802.0], [89.8, 809.0], [89.9, 810.0], [90.0, 811.0], [90.1, 811.0], [90.2, 815.0], [90.3, 816.0], [90.4, 819.0], [90.5, 819.0], [90.6, 819.0], [90.7, 820.0], [90.8, 821.0], [90.9, 826.0], [91.0, 827.0], [91.1, 827.0], [91.2, 833.0], [91.3, 837.0], [91.4, 841.0], [91.5, 842.0], [91.6, 842.0], [91.7, 846.0], [91.8, 856.0], [91.9, 858.0], [92.0, 859.0], [92.1, 859.0], [92.2, 860.0], [92.3, 869.0], [92.4, 869.0], [92.5, 878.0], [92.6, 878.0], [92.7, 889.0], [92.8, 898.0], [92.9, 907.0], [93.0, 907.0], [93.1, 907.0], [93.2, 925.0], [93.3, 935.0], [93.4, 936.0], [93.5, 938.0], [93.6, 938.0], [93.7, 941.0], [93.8, 962.0], [93.9, 1003.0], [94.0, 1009.0], [94.1, 1009.0], [94.2, 1017.0], [94.3, 1026.0], [94.4, 1026.0], [94.5, 1029.0], [94.6, 1029.0], [94.7, 1030.0], [94.8, 1039.0], [94.9, 1041.0], [95.0, 1043.0], [95.1, 1043.0], [95.2, 1052.0], [95.3, 1055.0], [95.4, 1057.0], [95.5, 1057.0], [95.6, 1057.0], [95.7, 1060.0], [95.8, 1060.0], [95.9, 1062.0], [96.0, 1064.0], [96.1, 1064.0], [96.2, 1070.0], [96.3, 1072.0], [96.4, 1075.0], [96.5, 1078.0], [96.6, 1078.0], [96.7, 1087.0], [96.8, 1093.0], [96.9, 1093.0], [97.0, 1094.0], [97.1, 1094.0], [97.2, 1108.0], [97.3, 1143.0], [97.4, 1150.0], [97.5, 1271.0], [97.6, 1271.0], [97.7, 1359.0], [97.8, 1361.0], [97.9, 1378.0], [98.0, 1425.0], [98.1, 1425.0], [98.2, 1487.0], [98.3, 1511.0], [98.4, 1544.0], [98.5, 1617.0], [98.6, 1617.0], [98.7, 1859.0], [98.8, 2124.0], [98.9, 2274.0], [99.0, 2373.0], [99.1, 2373.0], [99.2, 2473.0], [99.3, 2640.0], [99.4, 2802.0], [99.5, 2852.0], [99.6, 2852.0], [99.7, 4981.0], [99.8, 6145.0], [99.9, 8514.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 702.0, "series": [{"data": [[1100.0, 38.0], [1200.0, 2.0], [1300.0, 7.0], [1400.0, 6.0], [1500.0, 3.0], [1600.0, 12.0], [1700.0, 6.0], [1800.0, 13.0], [1900.0, 17.0], [2000.0, 15.0], [2100.0, 9.0], [2300.0, 12.0], [2200.0, 13.0], [2400.0, 12.0], [2500.0, 12.0], [2600.0, 14.0], [2800.0, 29.0], [2700.0, 24.0], [2900.0, 19.0], [3000.0, 16.0], [3100.0, 16.0], [3300.0, 15.0], [3200.0, 12.0], [3400.0, 13.0], [3500.0, 15.0], [3700.0, 25.0], [3600.0, 18.0], [3800.0, 21.0], [3900.0, 15.0], [4000.0, 20.0], [4100.0, 13.0], [4200.0, 12.0], [4300.0, 5.0], [4500.0, 10.0], [4400.0, 5.0], [4600.0, 8.0], [4800.0, 4.0], [4700.0, 12.0], [5000.0, 9.0], [4900.0, 4.0], [5100.0, 12.0], [5300.0, 9.0], [5200.0, 7.0], [5400.0, 7.0], [5500.0, 6.0], [5600.0, 13.0], [5700.0, 5.0], [5800.0, 6.0], [5900.0, 5.0], [6000.0, 1.0], [6100.0, 2.0], [6300.0, 5.0], [6200.0, 4.0], [6400.0, 4.0], [6500.0, 2.0], [6600.0, 4.0], [6900.0, 3.0], [6800.0, 5.0], [7000.0, 3.0], [7300.0, 2.0], [7400.0, 2.0], [7500.0, 1.0], [7700.0, 4.0], [7800.0, 1.0], [7900.0, 2.0], [8100.0, 2.0], [8400.0, 6.0], [8200.0, 5.0], [8600.0, 4.0], [8700.0, 5.0], [8500.0, 3.0], [8300.0, 1.0], [9200.0, 2.0], [9100.0, 5.0], [8900.0, 4.0], [8800.0, 2.0], [9000.0, 4.0], [9500.0, 4.0], [9300.0, 2.0], [9600.0, 3.0], [9400.0, 1.0], [9700.0, 2.0], [9800.0, 4.0], [10000.0, 1.0], [9900.0, 2.0], [10200.0, 2.0], [10500.0, 1.0], [10300.0, 1.0], [10400.0, 1.0], [11100.0, 1.0], [11000.0, 1.0], [10900.0, 1.0], [11500.0, 1.0], [11400.0, 1.0], [11800.0, 1.0], [12000.0, 1.0], [12400.0, 1.0], [13000.0, 1.0], [12800.0, 1.0], [13600.0, 1.0], [13400.0, 1.0], [14400.0, 1.0], [14700.0, 1.0], [15200.0, 2.0], [14900.0, 1.0], [15000.0, 3.0], [15100.0, 1.0], [15800.0, 3.0], [15600.0, 5.0], [15400.0, 3.0], [16100.0, 4.0], [15900.0, 3.0], [16300.0, 2.0], [16000.0, 2.0], [16200.0, 5.0], [16500.0, 3.0], [16400.0, 3.0], [17400.0, 1.0], [16900.0, 1.0], [16800.0, 1.0], [17300.0, 1.0], [16600.0, 2.0], [17200.0, 1.0], [17100.0, 1.0], [18100.0, 3.0], [18000.0, 1.0], [17500.0, 2.0], [18300.0, 1.0], [18500.0, 1.0], [19200.0, 1.0], [18700.0, 1.0], [19900.0, 1.0], [20700.0, 1.0], [22000.0, 1.0], [23300.0, 1.0], [25900.0, 1.0], [26000.0, 1.0], [26900.0, 1.0], [28300.0, 2.0], [28700.0, 1.0], [29200.0, 2.0], [29000.0, 1.0], [30100.0, 1.0], [31200.0, 1.0]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[48500.0, 1.0], [1200.0, 2.0], [1300.0, 1.0], [1400.0, 2.0], [1500.0, 1.0], [1600.0, 3.0], [1900.0, 4.0], [2000.0, 2.0], [2100.0, 1.0], [2200.0, 13.0], [2300.0, 1.0], [2400.0, 6.0], [2500.0, 6.0], [2600.0, 3.0], [2800.0, 2.0], [2700.0, 2.0], [2900.0, 5.0], [3000.0, 8.0], [3100.0, 9.0], [3300.0, 5.0], [3200.0, 7.0], [3400.0, 3.0], [3500.0, 7.0], [3600.0, 6.0], [3700.0, 11.0], [3800.0, 10.0], [3900.0, 8.0], [4000.0, 8.0], [4100.0, 7.0], [4200.0, 15.0], [4300.0, 14.0], [4400.0, 8.0], [4600.0, 3.0], [4500.0, 6.0], [4700.0, 7.0], [4800.0, 4.0], [5000.0, 13.0], [5100.0, 4.0], [4900.0, 9.0], [5200.0, 6.0], [5300.0, 10.0], [5400.0, 3.0], [5500.0, 7.0], [5600.0, 8.0], [5700.0, 9.0], [5800.0, 6.0], [6000.0, 10.0], [6100.0, 11.0], [5900.0, 9.0], [6300.0, 6.0], [6200.0, 4.0], [6600.0, 9.0], [6400.0, 6.0], [6500.0, 7.0], [6700.0, 11.0], [6800.0, 11.0], [6900.0, 5.0], [7000.0, 1.0], [7100.0, 3.0], [7200.0, 6.0], [7300.0, 8.0], [7400.0, 14.0], [7500.0, 5.0], [7600.0, 6.0], [7700.0, 4.0], [7800.0, 8.0], [7900.0, 3.0], [8000.0, 4.0], [8100.0, 9.0], [8200.0, 4.0], [8500.0, 7.0], [8600.0, 10.0], [8300.0, 6.0], [8400.0, 5.0], [8700.0, 2.0], [8800.0, 9.0], [9200.0, 6.0], [9100.0, 4.0], [8900.0, 4.0], [9000.0, 7.0], [9500.0, 6.0], [9600.0, 5.0], [9700.0, 8.0], [9300.0, 5.0], [9400.0, 3.0], [9900.0, 3.0], [10100.0, 4.0], [9800.0, 4.0], [10200.0, 2.0], [10000.0, 3.0], [10300.0, 3.0], [10400.0, 3.0], [10500.0, 2.0], [10600.0, 5.0], [10700.0, 2.0], [10800.0, 2.0], [11000.0, 3.0], [11100.0, 4.0], [10900.0, 2.0], [11200.0, 1.0], [11300.0, 4.0], [11500.0, 4.0], [11400.0, 4.0], [11700.0, 3.0], [11600.0, 2.0], [12000.0, 5.0], [12200.0, 3.0], [12100.0, 2.0], [11800.0, 1.0], [11900.0, 3.0], [12500.0, 1.0], [12600.0, 2.0], [12700.0, 3.0], [12300.0, 1.0], [12400.0, 1.0], [12800.0, 4.0], [12900.0, 2.0], [13100.0, 1.0], [13200.0, 3.0], [13400.0, 3.0], [13500.0, 3.0], [13800.0, 6.0], [13600.0, 1.0], [13900.0, 3.0], [14000.0, 3.0], [14100.0, 1.0], [14300.0, 2.0], [14200.0, 1.0], [14700.0, 2.0], [14400.0, 4.0], [14500.0, 1.0], [14600.0, 3.0], [14900.0, 3.0], [15100.0, 1.0], [15200.0, 3.0], [15300.0, 4.0], [15000.0, 1.0], [15400.0, 3.0], [15600.0, 2.0], [15500.0, 3.0], [15700.0, 1.0], [15800.0, 1.0], [15900.0, 4.0], [16100.0, 6.0], [16200.0, 3.0], [16300.0, 3.0], [16000.0, 1.0], [16400.0, 3.0], [16600.0, 5.0], [17400.0, 3.0], [16800.0, 1.0], [17200.0, 2.0], [17600.0, 2.0], [18200.0, 2.0], [17800.0, 2.0], [18000.0, 1.0], [19200.0, 3.0], [18600.0, 2.0], [19000.0, 2.0], [19400.0, 1.0], [18800.0, 1.0], [19600.0, 1.0], [19800.0, 3.0], [20000.0, 1.0], [20600.0, 1.0], [22200.0, 2.0], [22000.0, 1.0], [21800.0, 1.0], [22600.0, 1.0], [23200.0, 1.0], [24200.0, 1.0], [24400.0, 1.0], [24600.0, 1.0], [25200.0, 4.0], [25600.0, 1.0], [26600.0, 1.0], [27600.0, 1.0], [27000.0, 1.0], [27800.0, 1.0], [28600.0, 1.0], [28800.0, 1.0], [30200.0, 1.0], [31800.0, 1.0], [16700.0, 3.0], [17300.0, 1.0], [16500.0, 2.0], [17100.0, 1.0], [16900.0, 1.0], [17500.0, 4.0], [17700.0, 1.0], [17900.0, 1.0], [18500.0, 1.0], [18900.0, 1.0], [19100.0, 1.0], [18700.0, 3.0], [19300.0, 1.0], [19500.0, 2.0], [19700.0, 3.0], [20100.0, 3.0], [20500.0, 1.0], [21700.0, 2.0], [22300.0, 1.0], [23300.0, 1.0], [23900.0, 1.0], [24100.0, 1.0], [24700.0, 1.0], [25700.0, 1.0], [26100.0, 1.0], [26500.0, 3.0], [27100.0, 1.0], [27700.0, 2.0], [28300.0, 1.0], [28700.0, 1.0], [31100.0, 1.0], [31300.0, 1.0], [31700.0, 1.0], [32100.0, 1.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[2100.0, 1.0], [8500.0, 1.0], [2300.0, 1.0], [2200.0, 1.0], [600.0, 1.0], [2400.0, 1.0], [2600.0, 1.0], [2800.0, 2.0], [700.0, 3.0], [200.0, 702.0], [800.0, 28.0], [900.0, 8.0], [1000.0, 26.0], [1100.0, 3.0], [300.0, 6.0], [1200.0, 1.0], [4900.0, 1.0], [1300.0, 3.0], [1400.0, 2.0], [1500.0, 2.0], [6100.0, 1.0], [1600.0, 1.0], [1800.0, 1.0], [500.0, 3.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 48500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 134.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1556.0, "series": [{"data": [[0.0, 710.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 134.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1556.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 12.846153846153847, "minX": 1.70943636E12, "maxY": 445.16396933560435, "series": [{"data": [[1.70943642E12, 12.846153846153847], [1.70943636E12, 445.16396933560435]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70943642E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 244.0, "minX": 1.0, "maxY": 48555.0, "series": [{"data": [[11.0, 28392.0], [17.0, 30152.5], [19.0, 30194.0], [20.0, 28392.0], [22.0, 29230.5], [24.0, 28717.0], [34.0, 26914.0], [43.0, 26052.0], [45.0, 25959.0], [91.0, 18756.0], [88.0, 23367.0], [99.0, 20784.0], [101.0, 17595.0], [119.0, 17122.0], [126.0, 19261.0], [124.0, 16124.0], [135.0, 16826.0], [131.0, 15811.0], [136.0, 17421.0], [147.0, 18199.0], [145.0, 15626.0], [159.0, 15195.0], [155.0, 18589.0], [154.0, 17527.0], [163.0, 16651.0], [183.0, 15470.0], [180.0, 16197.0], [190.0, 16508.0], [204.0, 17290.0], [200.0, 16539.0], [216.0, 16091.0], [230.0, 14723.0], [237.0, 15636.0], [235.0, 16654.0], [234.0, 14763.5], [232.0, 19952.0], [242.0, 16216.0], [255.0, 2797.0882352941185], [253.0, 15063.0], [251.0, 17224.0], [250.0, 15028.0], [249.0, 17073.0], [260.0, 3172.726415094339], [271.0, 17391.0], [263.0, 18146.0], [287.0, 15664.0], [284.0, 16171.5], [274.0, 16292.0], [293.0, 2403.333333333333], [301.0, 3088.8], [302.0, 3581.0], [303.0, 4098.0], [291.0, 15637.0], [304.0, 8196.666666666666], [307.0, 2726.0], [305.0, 15288.0], [346.0, 2259.0], [347.0, 1857.7692307692307], [339.0, 16710.5], [336.0, 15685.0], [358.0, 1409.0], [366.0, 16480.0], [355.0, 14986.0], [368.0, 1455.0], [383.0, 16353.0], [376.0, 13935.0], [375.0, 16740.5], [384.0, 1820.0], [392.0, 4328.0], [393.0, 4820.0], [394.0, 2962.0], [396.0, 1743.4], [399.0, 15951.0], [402.0, 1139.0], [415.0, 4191.5], [413.0, 15872.0], [404.0, 15243.0], [418.0, 12850.0], [445.0, 2289.5], [449.0, 5355.0], [452.0, 1837.0], [453.0, 6082.0], [455.0, 2185.75], [456.0, 2143.0], [460.0, 2826.0], [461.0, 1533.0], [468.0, 1961.0], [476.0, 1133.0], [470.0, 13003.5], [481.0, 1121.0], [484.0, 1687.0], [485.0, 2851.0], [486.0, 1151.0], [487.0, 1684.5], [491.0, 13081.0], [496.0, 7388.666666666667], [508.0, 1625.0], [504.0, 9024.0], [503.0, 9097.0], [501.0, 9871.0], [497.0, 13629.0], [513.0, 2660.0], [512.0, 5392.0], [516.0, 1130.0], [518.0, 1156.0], [519.0, 2262.0], [537.0, 6038.0], [541.0, 1138.0], [540.0, 9026.0], [543.0, 10951.0], [529.0, 8918.0], [532.0, 3430.0], [533.0, 4471.0], [535.0, 3069.0], [520.0, 2796.0], [522.0, 1811.3333333333333], [523.0, 3335.0], [527.0, 3386.0], [568.0, 2306.0], [545.0, 2619.0], [549.0, 8622.0], [547.0, 9185.0], [553.0, 5030.0], [559.0, 2607.0], [564.0, 2219.0], [565.0, 2782.5], [566.0, 2886.0], [573.0, 2841.5], [570.0, 9114.0], [575.0, 2799.0], [562.0, 8792.0], [576.0, 2887.0], [584.0, 3124.0], [585.0, 3127.0], [591.0, 2845.0], [589.0, 7754.0], [593.0, 2688.0], [605.0, 3253.5], [607.0, 5282.5], [603.0, 2074.5], [600.0, 11826.0], [578.0, 10099.0], [577.0, 9922.0], [604.0, 1790.0], [594.0, 7319.666666666667], [595.0, 3343.0], [596.0, 2908.0], [599.0, 2720.0], [598.0, 10464.5], [615.0, 3647.0], [609.0, 5507.5], [608.0, 8643.75], [614.0, 2062.0], [610.0, 8416.0], [616.0, 6210.5], [623.0, 1139.0], [627.0, 2960.0], [625.0, 8946.0], [638.0, 2764.0], [639.0, 2867.6666666666665], [635.0, 7834.0], [636.0, 5330.333333333333], [637.0, 2240.0], [633.0, 2308.0], [632.0, 9707.666666666666], [634.0, 4765.75], [629.0, 2608.6666666666665], [631.0, 1129.0], [630.0, 9779.0], [647.0, 5203.0], [641.0, 2937.3333333333335], [640.0, 3200.0], [655.0, 7708.0], [643.0, 3351.0], [644.0, 3761.0], [645.0, 2910.0], [656.0, 4781.0], [671.0, 5476.4], [670.0, 9538.333333333334], [668.0, 4103.0], [667.0, 7377.5], [666.0, 5190.0], [669.0, 4463.0], [664.0, 3874.6666666666665], [665.0, 1132.0], [657.0, 2608.0], [659.0, 6570.25], [660.0, 5731.333333333333], [661.0, 2663.0], [663.0, 5475.0], [650.0, 3619.5], [649.0, 9478.5], [651.0, 2859.5], [652.0, 2028.0], [653.0, 8307.0], [654.0, 5774.0], [674.0, 2924.5], [672.0, 2850.666666666667], [673.0, 6560.222222222223], [675.0, 6261.0], [676.0, 7055.0], [679.0, 6042.5], [682.0, 2876.5], [680.0, 6251.25], [684.0, 8914.5], [683.0, 6597.333333333333], [685.0, 2836.0], [686.0, 6344.454545454545], [687.0, 4584.333333333333], [689.0, 5782.583333333334], [688.0, 9355.0], [691.0, 5497.333333333333], [690.0, 5076.666666666667], [699.0, 3677.3333333333335], [701.0, 5528.5], [700.0, 6345.0], [702.0, 5047.555555555557], [696.0, 3690.0], [697.0, 5008.384615384615], [692.0, 3334.0], [693.0, 4256.5], [695.0, 5113.666666666668], [694.0, 3636.0], [728.0, 5272.0], [707.0, 4051.5], [706.0, 4898.0], [705.0, 3391.0], [704.0, 4688.0], [708.0, 3997.75], [709.0, 4239.5], [711.0, 3688.5], [710.0, 4957.0], [730.0, 4572.0], [729.0, 5048.8], [732.0, 3142.0], [731.0, 5473.0], [733.0, 3484.75], [735.0, 4087.5], [734.0, 3935.6], [713.0, 4726.666666666667], [714.0, 5476.666666666667], [715.0, 4075.0], [717.0, 1108.0], [716.0, 3697.0], [719.0, 4630.0], [720.0, 4407.222222222223], [722.0, 3789.0], [723.0, 4726.357142857141], [724.0, 3645.625], [725.0, 5097.5], [727.0, 5446.666666666667], [726.0, 3210.0], [748.0, 2354.0], [739.0, 3375.875], [738.0, 4206.111111111111], [737.0, 3832.5], [736.0, 3122.0], [740.0, 3234.6666666666665], [741.0, 4064.562500000001], [742.0, 1304.0], [743.0, 4897.0], [745.0, 3072.0], [744.0, 4334.0], [747.0, 3771.9], [746.0, 4764.636363636364]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[513.5237499999997, 5546.782500000002]], "isOverall": false, "label": "auth-Aggregated", "isController": false}, {"data": [[2.0, 4667.0], [3.0, 4453.0], [4.0, 4160.0], [5.0, 3977.0], [7.0, 4343.0], [10.0, 11768.666666666666], [11.0, 5323.0], [13.0, 32123.0], [15.0, 24054.333333333332], [17.0, 31243.0], [18.0, 3916.0], [20.0, 17037.0], [22.0, 17260.5], [24.0, 28717.0], [25.0, 28657.0], [26.0, 26809.5], [29.0, 27701.0], [30.0, 27726.0], [35.0, 13858.5], [34.0, 15770.0], [37.0, 18854.0], [43.0, 22149.4], [42.0, 22256.0], [45.0, 16398.25], [49.0, 4521.0], [50.0, 25793.0], [52.0, 4499.0], [57.0, 11245.666666666668], [59.0, 4241.0], [61.0, 25239.666666666668], [60.0, 10391.4], [62.0, 4264.0], [65.0, 4260.0], [71.0, 14258.5], [68.0, 17690.0], [74.0, 24210.5], [73.0, 12868.666666666666], [79.0, 4283.0], [77.0, 23978.0], [83.0, 4015.75], [82.0, 16650.0], [86.0, 4739.0], [84.0, 4404.0], [91.0, 15804.0], [95.0, 4583.0], [94.0, 22345.0], [93.0, 13303.666666666666], [92.0, 4270.0], [103.0, 15296.333333333332], [101.0, 10966.333333333334], [106.0, 2992.5], [105.0, 3443.0], [111.0, 22242.0], [110.0, 12921.5], [115.0, 15413.0], [119.0, 11645.8], [117.0, 16259.0], [122.0, 9222.5], [121.0, 3829.0], [127.0, 12660.4], [124.0, 13457.333333333332], [135.0, 10769.0], [134.0, 9522.666666666666], [133.0, 3540.0], [131.0, 10064.5], [139.0, 19342.0], [138.0, 4328.0], [136.0, 15732.5], [148.0, 3685.0], [147.0, 8943.0], [159.0, 13477.0], [156.0, 19034.0], [155.0, 14498.5], [153.0, 11324.75], [152.0, 17682.0], [163.0, 12995.666666666666], [161.0, 7892.0], [171.0, 13434.25], [168.0, 15248.666666666666], [182.0, 19887.0], [181.0, 10109.0], [179.0, 11793.0], [176.0, 10518.5], [191.0, 11050.0], [189.0, 14043.0], [187.0, 12911.0], [199.0, 8860.0], [197.0, 18083.0], [196.0, 13469.333333333332], [195.0, 19735.0], [192.0, 11322.666666666666], [202.0, 15213.666666666666], [201.0, 15008.0], [215.0, 17197.333333333332], [214.0, 2305.0], [213.0, 13190.5], [210.0, 15291.0], [221.0, 14246.0], [220.0, 8970.0], [231.0, 9019.0], [229.0, 10813.0], [227.0, 12207.2], [224.0, 19070.0], [237.0, 5923.5], [235.0, 13078.75], [234.0, 10380.666666666666], [233.0, 10647.5], [232.0, 15509.0], [244.0, 7246.0], [242.0, 3109.0], [240.0, 18694.0], [255.0, 14488.0], [253.0, 14285.0], [251.0, 13452.2], [271.0, 7727.5], [263.0, 2042.0], [259.0, 11282.0], [257.0, 15110.5], [256.0, 10180.0], [285.0, 17450.0], [287.0, 17356.0], [284.0, 10652.0], [283.0, 2636.0], [282.0, 8127.0], [276.0, 8366.8], [275.0, 8875.8], [274.0, 11035.25], [272.0, 5125.0], [303.0, 8532.0], [302.0, 10616.0], [300.0, 6601.0], [299.0, 11335.0], [297.0, 10417.333333333334], [296.0, 9490.5], [294.0, 13440.0], [292.0, 8332.0], [319.0, 2262.0], [318.0, 11923.0], [315.0, 16649.0], [314.0, 12606.5], [313.0, 5210.0], [312.0, 6693.0], [311.0, 4807.5], [309.0, 11591.666666666666], [305.0, 17039.666666666668], [333.0, 6546.0], [335.0, 9725.0], [332.0, 10311.0], [331.0, 2212.0], [329.0, 8998.0], [328.0, 4546.0], [327.0, 11556.0], [324.0, 7514.0], [321.0, 7342.5], [350.0, 7268.5], [344.0, 6781.0], [340.0, 3175.0], [339.0, 12602.5], [338.0, 2159.0], [337.0, 15563.0], [365.0, 8036.0], [366.0, 10321.0], [364.0, 7335.0], [363.0, 9880.0], [362.0, 16716.0], [360.0, 14067.0], [359.0, 8645.25], [356.0, 9698.0], [355.0, 9025.0], [383.0, 16333.0], [381.0, 8822.5], [376.0, 9014.0], [375.0, 16134.0], [373.0, 5563.0], [370.0, 10340.25], [368.0, 11578.5], [398.0, 4038.0], [397.0, 5819.0], [395.0, 6278.5], [389.0, 8846.666666666666], [388.0, 12104.0], [415.0, 6321.666666666666], [412.0, 8732.0], [410.0, 16118.0], [409.0, 7537.5], [408.0, 10957.0], [406.0, 6859.0], [404.0, 9580.666666666666], [403.0, 6583.0], [400.0, 2215.0], [419.0, 9524.0], [429.0, 8630.5], [428.0, 4392.0], [426.0, 9734.0], [424.0, 15950.0], [423.0, 7258.25], [418.0, 9091.6], [417.0, 6062.0], [416.0, 8254.333333333334], [434.0, 1232.0], [440.0, 3229.333333333333], [446.0, 7394.0], [445.0, 10956.0], [444.0, 6492.0], [442.0, 9265.0], [439.0, 4531.0], [435.0, 6818.0], [461.0, 7583.0], [460.0, 6363.0], [458.0, 8625.0], [456.0, 12080.8], [455.0, 6733.0], [454.0, 10174.0], [453.0, 7823.25], [450.0, 11439.0], [448.0, 8692.666666666666], [478.0, 6930.5], [476.0, 15271.0], [473.0, 7111.0], [470.0, 9369.0], [469.0, 9543.0], [468.0, 10567.0], [493.0, 3879.5], [487.0, 1984.0], [495.0, 7175.0], [494.0, 11161.0], [491.0, 6652.666666666667], [489.0, 7253.5], [485.0, 10857.666666666666], [483.0, 7428.0], [482.0, 6671.2], [481.0, 14981.0], [480.0, 12716.5], [510.0, 11088.0], [503.0, 9372.333333333334], [496.0, 7692.0], [507.0, 8001.666666666666], [506.0, 8248.666666666666], [505.0, 7944.333333333333], [504.0, 4928.0], [501.0, 6407.0], [500.0, 8519.0], [499.0, 8852.333333333334], [498.0, 11033.0], [540.0, 7793.0], [525.0, 8159.0], [524.0, 5727.0], [522.0, 6444.5], [528.0, 2508.0], [533.0, 5551.0], [543.0, 9057.0], [541.0, 12098.5], [538.0, 6601.5], [537.0, 6803.0], [527.0, 5369.0], [515.0, 7865.75], [512.0, 8943.75], [575.0, 6228.0], [569.0, 2975.0], [560.0, 2961.0], [561.0, 9970.333333333334], [568.0, 8366.333333333334], [551.0, 5399.0], [550.0, 6453.333333333333], [549.0, 6848.0], [548.0, 9619.5], [559.0, 6357.0], [558.0, 5124.0], [555.0, 7158.5], [553.0, 14025.0], [570.0, 3893.0], [573.0, 7310.0], [571.0, 6079.0], [567.0, 6714.0], [562.0, 12662.5], [577.0, 3009.0], [576.0, 5267.166666666666], [581.0, 3023.0], [580.0, 9657.666666666666], [579.0, 6194.333333333333], [578.0, 6039.25], [589.0, 3341.0], [588.0, 4471.333333333333], [584.0, 9951.0], [591.0, 3371.0], [590.0, 6769.0], [606.0, 7423.0], [592.0, 3060.0], [596.0, 7981.333333333333], [594.0, 8953.333333333334], [598.0, 6369.0], [597.0, 8627.875], [604.0, 7727.5], [600.0, 10574.0], [583.0, 13419.0], [609.0, 3673.0], [608.0, 6565.666666666667], [610.0, 4692.0], [612.0, 7563.0], [632.0, 12073.0], [613.0, 6771.0], [633.0, 1673.0], [634.0, 6090.5], [639.0, 5829.0], [635.0, 6543.333333333334], [617.0, 3833.0], [616.0, 9035.0], [619.0, 3774.0], [622.0, 3839.0], [624.0, 3849.0], [627.0, 7777.5], [626.0, 10565.5], [625.0, 4220.0], [630.0, 4552.5], [631.0, 6164.333333333333], [629.0, 5799.5], [667.0, 5079.0], [644.0, 4013.6666666666665], [641.0, 4255.0], [640.0, 6518.0], [643.0, 9322.0], [645.0, 4556.0], [647.0, 8878.0], [646.0, 4563.0], [666.0, 9052.0], [664.0, 4201.0], [650.0, 4419.0], [649.0, 4464.666666666667], [648.0, 11504.0], [653.0, 6423.0], [652.0, 11348.0], [654.0, 3539.0], [657.0, 7256.5], [663.0, 6779.0], [661.0, 4201.0], [659.0, 8280.5], [670.0, 5695.0], [671.0, 6371.8], [656.0, 3966.0], [668.0, 6247.0], [699.0, 8578.0], [679.0, 6684.0], [687.0, 8312.0], [673.0, 10320.0], [672.0, 10425.0], [676.0, 3197.0], [675.0, 4713.0], [684.0, 4834.0], [683.0, 8720.5], [686.0, 7141.0], [693.0, 4237.5], [695.0, 5073.0], [702.0, 5278.0], [703.0, 4219.0], [689.0, 4600.0], [691.0, 6818.666666666667], [690.0, 5057.0], [700.0, 8645.5], [697.0, 6682.0], [733.0, 6294.0], [704.0, 3338.0], [717.0, 7837.5], [716.0, 3878.0], [714.0, 5557.0], [713.0, 6074.0], [709.0, 5241.0], [723.0, 7049.142857142858], [725.0, 5921.0], [734.0, 4591.5], [720.0, 7714.0], [730.0, 3034.5], [729.0, 7189.0], [726.0, 6927.0], [738.0, 4811.666666666667], [741.0, 4966.25], [746.0, 5984.75], [744.0, 6171.0], [743.0, 6323.0], [742.0, 6388.0], [739.0, 6302.25], [737.0, 3220.0], [1.0, 48555.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[402.88124999999934, 9421.25499999999]], "isOverall": false, "label": "GetBooking-Aggregated", "isController": false}, {"data": [[2.0, 250.0], [3.0, 250.0], [4.0, 250.0], [5.0, 253.0], [6.0, 254.0], [7.0, 248.0], [8.0, 253.0], [9.0, 252.0], [10.0, 255.0], [11.0, 259.0], [12.0, 244.0], [13.0, 254.0], [14.0, 249.0], [15.0, 256.0], [16.0, 254.0], [17.0, 500.0], [18.0, 246.0], [19.0, 253.0], [20.0, 250.0], [21.0, 247.0], [22.0, 252.0], [23.0, 257.0], [24.0, 255.0], [25.0, 252.0], [26.0, 254.0], [27.0, 253.0], [28.0, 257.0], [29.0, 251.0], [30.0, 262.0], [31.0, 267.0], [33.0, 252.0], [32.0, 250.0], [35.0, 251.0], [34.0, 256.0], [37.0, 253.0], [36.0, 249.0], [39.0, 255.0], [38.0, 251.0], [41.0, 261.0], [40.0, 259.0], [43.0, 281.0], [45.0, 257.0], [44.0, 261.0], [47.0, 255.0], [46.0, 256.0], [49.0, 257.0], [48.0, 250.0], [51.0, 265.0], [50.0, 254.0], [53.0, 263.0], [52.0, 260.0], [55.0, 250.0], [54.0, 263.0], [57.0, 258.0], [56.0, 255.0], [59.0, 259.0], [58.0, 256.0], [61.0, 249.0], [60.0, 263.0], [63.0, 262.0], [62.0, 251.0], [67.0, 254.0], [66.0, 251.0], [65.0, 264.0], [64.0, 252.0], [71.0, 260.0], [70.0, 258.0], [69.0, 253.0], [68.0, 251.0], [75.0, 259.0], [74.0, 257.0], [73.0, 257.0], [72.0, 252.0], [79.0, 253.0], [78.0, 256.0], [77.0, 252.0], [76.0, 252.0], [83.0, 257.0], [82.0, 255.0], [81.0, 251.5], [87.0, 256.0], [86.0, 256.0], [85.0, 254.0], [84.0, 252.0], [91.0, 258.0], [90.0, 257.0], [89.0, 261.0], [88.0, 258.0], [95.0, 251.0], [94.0, 251.0], [93.0, 257.0], [92.0, 251.0], [99.0, 260.0], [98.0, 253.0], [97.0, 258.0], [96.0, 258.0], [103.0, 258.5], [101.0, 257.0], [100.0, 259.0], [107.0, 267.0], [106.0, 259.0], [105.0, 255.0], [104.0, 253.0], [111.0, 257.0], [110.0, 500.0], [109.0, 271.0], [108.0, 255.0], [115.0, 253.5], [113.0, 252.0], [112.0, 257.0], [119.0, 253.0], [117.0, 249.0], [116.0, 256.0], [122.0, 265.0], [121.0, 262.0], [127.0, 254.0], [126.0, 254.0], [125.0, 253.0], [124.0, 260.0], [135.0, 256.0], [134.0, 268.0], [133.0, 257.0], [132.0, 256.0], [131.0, 264.0], [130.0, 252.0], [129.0, 257.0], [128.0, 256.0], [143.0, 256.0], [142.0, 256.0], [141.0, 246.0], [140.0, 255.0], [139.0, 258.0], [138.0, 249.0], [137.0, 260.0], [136.0, 251.0], [151.0, 254.0], [150.0, 266.0], [149.0, 260.0], [148.0, 246.0], [147.0, 249.0], [146.0, 257.0], [145.0, 248.0], [144.0, 253.0], [159.0, 248.0], [158.0, 255.5], [156.0, 251.0], [155.0, 262.0], [154.0, 259.0], [153.0, 256.0], [152.0, 249.0], [167.0, 248.0], [166.0, 251.0], [165.0, 248.0], [164.0, 257.0], [163.0, 260.0], [162.0, 256.0], [161.0, 252.0], [160.0, 256.0], [175.0, 254.0], [173.0, 253.0], [172.0, 249.0], [171.0, 251.0], [170.0, 246.0], [169.0, 255.0], [168.0, 258.0], [183.0, 251.0], [182.0, 255.0], [181.0, 254.0], [180.0, 258.0], [179.0, 256.0], [178.0, 253.5], [176.0, 265.0], [191.0, 254.0], [190.0, 253.0], [189.0, 505.0], [188.0, 248.0], [187.0, 250.0], [186.0, 256.0], [185.0, 250.0], [184.0, 254.0], [199.0, 258.0], [198.0, 253.0], [197.0, 249.0], [196.0, 257.0], [195.0, 260.0], [194.0, 255.0], [193.0, 252.0], [192.0, 253.0], [206.0, 258.0], [205.0, 270.0], [204.0, 247.0], [203.0, 254.0], [202.0, 252.0], [201.0, 250.0], [200.0, 255.0], [215.0, 254.0], [214.0, 257.0], [213.0, 254.0], [212.0, 250.0], [211.0, 248.0], [210.0, 254.0], [209.0, 248.0], [208.0, 256.5], [223.0, 256.0], [222.0, 255.0], [221.0, 252.0], [220.0, 257.0], [219.0, 260.0], [218.0, 248.0], [217.0, 251.0], [216.0, 254.0], [231.0, 255.0], [230.0, 8514.0], [229.0, 257.0], [228.0, 249.0], [227.0, 251.5], [225.0, 255.0], [224.0, 251.0], [239.0, 255.0], [238.0, 254.0], [237.0, 259.0], [236.0, 250.0], [235.0, 255.0], [234.0, 255.0], [233.0, 250.0], [232.0, 251.0], [247.0, 255.0], [246.0, 254.0], [245.0, 252.0], [244.0, 253.0], [243.0, 256.0], [242.0, 254.0], [241.0, 253.0], [240.0, 254.0], [255.0, 261.0], [254.0, 251.0], [253.0, 252.0], [252.0, 259.0], [251.0, 255.0], [250.0, 257.0], [249.0, 252.0], [248.0, 272.0], [270.0, 255.0], [271.0, 253.0], [269.0, 254.0], [268.0, 253.0], [267.0, 257.5], [265.0, 250.0], [264.0, 260.0], [263.0, 255.0], [257.0, 253.0], [256.0, 253.0], [259.0, 257.0], [258.0, 253.0], [262.0, 256.0], [261.0, 254.0], [260.0, 256.0], [286.0, 255.0], [287.0, 250.0], [285.0, 255.0], [284.0, 254.0], [283.0, 252.0], [282.0, 251.0], [281.0, 254.0], [280.0, 255.5], [278.0, 256.0], [273.0, 251.0], [272.0, 252.0], [275.0, 253.0], [274.0, 4981.0], [277.0, 252.0], [276.0, 261.0], [302.0, 258.0], [303.0, 253.0], [301.0, 253.0], [300.0, 254.0], [299.0, 253.0], [298.0, 258.0], [297.0, 259.0], [296.0, 252.0], [295.0, 252.0], [289.0, 254.0], [288.0, 251.0], [291.0, 262.0], [290.0, 244.0], [294.0, 247.0], [293.0, 253.0], [292.0, 253.0], [318.0, 775.0], [319.0, 254.0], [317.0, 251.0], [316.0, 250.0], [315.0, 250.0], [314.0, 254.0], [313.0, 248.0], [312.0, 252.0], [311.0, 258.0], [304.0, 246.0], [307.0, 255.0], [305.0, 256.0], [310.0, 257.0], [309.0, 251.0], [308.0, 248.0], [334.0, 265.0], [335.0, 260.0], [333.0, 251.0], [332.0, 255.0], [331.0, 254.5], [329.0, 253.0], [328.0, 251.0], [327.0, 249.0], [320.0, 246.0], [323.0, 252.0], [321.0, 258.0], [326.0, 251.0], [325.0, 252.0], [324.0, 257.0], [339.0, 255.0], [351.0, 274.0], [350.0, 272.0], [338.0, 255.0], [337.0, 257.0], [336.0, 264.0], [347.0, 273.5], [345.0, 275.0], [344.0, 267.0], [343.0, 270.0], [342.0, 266.0], [341.0, 263.0], [340.0, 268.0], [366.0, 266.0], [367.0, 277.0], [365.0, 267.0], [364.0, 263.0], [363.0, 271.0], [362.0, 270.0], [361.0, 267.0], [360.0, 272.0], [359.0, 277.0], [353.0, 268.0], [352.0, 268.0], [355.0, 271.0], [354.0, 274.0], [358.0, 276.0], [357.0, 802.0], [356.0, 265.0], [382.0, 281.0], [383.0, 278.0], [381.0, 276.0], [380.0, 272.0], [379.0, 282.0], [378.0, 275.0], [377.0, 274.0], [376.0, 271.0], [375.0, 286.0], [369.0, 279.0], [368.0, 282.0], [371.0, 269.0], [370.0, 275.0], [374.0, 268.0], [373.0, 669.5], [398.0, 269.0], [399.0, 266.0], [397.0, 274.0], [396.0, 795.0], [395.0, 270.0], [394.0, 294.0], [393.0, 290.0], [391.0, 280.0], [385.0, 272.5], [387.0, 268.0], [386.0, 272.0], [390.0, 1093.0], [389.0, 273.0], [388.0, 271.0], [414.0, 270.0], [415.0, 272.0], [413.0, 262.0], [412.0, 550.0], [410.0, 260.0], [409.0, 270.0], [408.0, 263.0], [406.0, 268.5], [403.0, 264.0], [402.0, 261.5], [400.0, 257.0], [404.0, 264.0], [430.0, 274.0], [431.0, 280.0], [429.0, 276.0], [428.0, 801.0], [427.0, 276.0], [426.0, 279.0], [425.0, 271.0], [424.0, 276.0], [423.0, 869.0], [417.0, 272.0], [416.0, 274.0], [419.0, 277.0], [418.0, 279.0], [422.0, 270.0], [420.0, 279.0], [446.0, 270.0], [447.0, 271.0], [445.0, 278.0], [444.0, 274.0], [442.0, 276.0], [441.0, 278.0], [440.0, 282.0], [439.0, 284.0], [432.0, 815.0], [435.0, 282.5], [433.0, 283.0], [438.0, 681.5], [436.0, 281.0], [461.0, 273.5], [457.0, 285.5], [460.0, 280.0], [451.0, 277.0], [450.0, 278.0], [449.0, 1057.0], [448.0, 268.0], [463.0, 281.0], [462.0, 272.0], [458.0, 281.0], [456.0, 280.0], [455.0, 255.0], [454.0, 259.0], [453.0, 283.0], [452.0, 827.0], [467.0, 272.0], [478.0, 278.5], [476.0, 283.0], [474.0, 281.0], [473.0, 309.0], [472.0, 298.0], [470.0, 292.0], [469.0, 276.0], [468.0, 1359.0], [466.0, 276.0], [465.0, 277.0], [464.0, 287.0], [494.0, 1361.0], [495.0, 275.0], [493.0, 276.0], [492.0, 273.0], [491.0, 277.5], [489.0, 279.0], [488.0, 275.0], [487.0, 554.5], [481.0, 281.0], [480.0, 297.5], [483.0, 279.0], [482.0, 285.0], [485.0, 283.0], [484.0, 281.0], [510.0, 278.5], [509.0, 289.0], [511.0, 274.0], [508.0, 278.0], [507.0, 283.0], [506.0, 280.0], [505.0, 277.0], [504.0, 278.0], [503.0, 297.0], [497.0, 280.0], [496.0, 277.0], [499.0, 280.0], [498.0, 280.0], [502.0, 277.0], [501.0, 276.0], [500.0, 281.0], [540.0, 276.5], [524.0, 665.0], [523.0, 278.0], [522.0, 284.0], [521.0, 272.0], [520.0, 550.0], [526.0, 270.0], [525.0, 281.0], [543.0, 276.0], [529.0, 284.0], [528.0, 279.0], [531.0, 271.0], [530.0, 281.0], [533.0, 816.0], [532.0, 270.0], [542.0, 276.0], [541.0, 279.0], [538.0, 276.0], [537.0, 280.0], [536.0, 278.0], [518.0, 272.0], [517.0, 285.0], [516.0, 274.0], [515.0, 832.5], [513.0, 273.0], [512.0, 282.0], [527.0, 279.0], [535.0, 1026.0], [534.0, 291.0], [571.0, 6145.0], [548.0, 277.0], [551.0, 275.0], [550.0, 809.0], [549.0, 1378.0], [568.0, 275.0], [554.0, 279.0], [553.0, 566.5], [555.0, 1071.5], [557.0, 276.0], [556.0, 811.0], [559.0, 275.0], [544.0, 810.0], [547.0, 275.0], [546.0, 673.5], [558.0, 277.0], [575.0, 669.5], [561.0, 277.5], [563.0, 279.0], [562.0, 279.0], [565.0, 273.0], [564.0, 1060.0], [567.0, 271.0], [566.0, 2473.0], [574.0, 282.0], [573.0, 546.0], [570.0, 275.0], [569.0, 277.0], [581.0, 279.5], [606.0, 950.0], [589.0, 280.75], [588.0, 636.0], [587.0, 790.0], [586.0, 272.0], [585.0, 277.0], [584.0, 272.0], [591.0, 802.0], [576.0, 841.0], [578.0, 278.0], [577.0, 274.0], [580.0, 279.0], [579.0, 1078.0], [590.0, 279.0], [593.0, 483.25], [596.0, 279.0], [595.0, 281.0], [594.0, 284.0], [598.0, 271.0], [597.0, 278.0], [605.0, 282.0], [607.0, 272.0], [592.0, 278.0], [604.0, 277.0], [603.0, 277.0], [601.0, 276.0], [600.0, 280.0], [583.0, 276.0], [582.0, 273.0], [635.0, 281.5], [608.0, 282.3333333333333], [618.0, 852.0], [617.0, 284.0], [616.0, 280.0], [619.0, 300.0], [621.0, 280.0], [620.0, 282.0], [623.0, 287.0], [622.0, 2802.0], [628.0, 1458.5], [630.0, 277.0], [629.0, 277.0], [631.0, 279.0], [633.0, 596.0], [632.0, 287.0], [613.0, 275.0], [612.0, 281.0], [610.0, 278.0], [609.0, 277.0], [634.0, 280.0], [637.0, 276.0], [636.0, 283.0], [639.0, 689.0], [625.0, 667.0], [627.0, 280.0], [626.0, 821.0], [638.0, 278.0], [668.0, 282.0], [644.0, 283.0], [641.0, 278.5], [640.0, 281.0], [643.0, 281.0], [642.0, 1003.0], [655.0, 686.0], [654.0, 282.0], [653.0, 280.0], [652.0, 284.0], [651.0, 279.0], [650.0, 277.0], [649.0, 2274.0], [648.0, 280.0], [671.0, 279.0], [657.0, 293.0], [656.0, 274.0], [659.0, 280.0], [658.0, 1041.0], [661.0, 277.0], [660.0, 274.0], [663.0, 271.0], [662.0, 962.0], [670.0, 278.0], [669.0, 274.0], [667.0, 286.0], [666.0, 276.0], [665.0, 277.0], [664.0, 275.0], [647.0, 276.0], [646.0, 280.0], [645.0, 283.0], [696.0, 471.3333333333333], [702.0, 270.0], [672.0, 280.5], [673.0, 279.0], [675.0, 282.0], [674.0, 1026.0], [677.0, 277.0], [676.0, 278.0], [679.0, 272.0], [678.0, 274.0], [687.0, 277.0], [686.0, 670.5], [684.0, 279.0], [683.0, 283.0], [682.0, 842.0], [681.0, 1150.0], [680.0, 273.0], [689.0, 282.5], [693.0, 613.5], [692.0, 1108.0], [691.0, 1271.0], [690.0, 283.0], [694.0, 1003.0], [695.0, 280.0], [699.0, 849.5], [698.0, 1030.0], [697.0, 277.0], [703.0, 907.0], [688.0, 318.0], [701.0, 281.0], [700.0, 277.0], [732.0, 280.0], [707.0, 897.0], [706.0, 280.0], [705.0, 277.0], [704.0, 287.0], [719.0, 279.0], [718.0, 282.0], [717.0, 278.0], [716.0, 281.0], [715.0, 1544.0], [714.0, 860.0], [713.0, 284.0], [712.0, 2852.0], [708.0, 931.75], [709.0, 642.0], [711.0, 859.0], [710.0, 277.0], [729.0, 1075.0], [728.0, 282.0], [735.0, 273.0], [721.0, 280.0], [720.0, 1055.0], [723.0, 272.0], [722.0, 889.0], [725.0, 275.0], [724.0, 275.0], [727.0, 277.0], [726.0, 938.0], [734.0, 283.0], [733.0, 1039.0], [731.0, 279.0], [730.0, 276.0], [748.0, 289.0], [736.0, 1315.0], [743.0, 277.5], [749.0, 935.0], [747.0, 276.0], [746.0, 898.0], [745.0, 1017.0], [744.0, 269.0], [742.0, 274.0], [741.0, 2373.0], [740.0, 1029.0], [739.0, 325.0], [738.0, 283.0], [737.0, 275.0], [1.0, 251.0]], "isOverall": false, "label": "CreateBooking", "isController": false}, {"data": [[390.9862499999999, 383.8987500000003]], "isOverall": false, "label": "CreateBooking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 749.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 256.71666666666664, "minX": 1.70943636E12, "maxY": 596678.1166666667, "series": [{"data": [[1.70943642E12, 19579.566666666666], [1.70943636E12, 596678.1166666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70943642E12, 256.71666666666664], [1.70943636E12, 10996.616666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70943642E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 262.4782608695652, "minX": 1.70943636E12, "maxY": 29392.0, "series": [{"data": [[1.70943642E12, 29392.0], [1.70943636E12, 5336.295081967214]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[1.70943642E12, 16109.545454545456], [1.70943636E12, 9232.125964010273]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.70943642E12, 262.4782608695652], [1.70943636E12, 387.49292149292177]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70943642E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 262.4782608695652, "minX": 1.70943636E12, "maxY": 29391.85714285714, "series": [{"data": [[1.70943642E12, 29391.85714285714], [1.70943636E12, 5334.620428751579]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[1.70943642E12, 8786.090909090908], [1.70943636E12, 4548.376606683804]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.70943642E12, 262.4782608695652], [1.70943636E12, 387.45945945945954]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70943642E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70943636E12, "maxY": 29001.285714285714, "series": [{"data": [[1.70943642E12, 29001.285714285714], [1.70943636E12, 4646.5056746532155]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[1.70943642E12, 0.0], [1.70943636E12, 0.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.70943642E12, 0.0], [1.70943636E12, 0.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70943642E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 244.0, "minX": 1.70943636E12, "maxY": 48555.0, "series": [{"data": [[1.70943642E12, 48555.0], [1.70943636E12, 28717.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70943642E12, 244.0], [1.70943636E12, 244.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70943642E12, 31331.4], [1.70943636E12, 13669.899999999983]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70943642E12, 48555.0], [1.70943636E12, 24991.699999999888]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70943642E12, 3946.5], [1.70943636E12, 3371.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70943642E12, 31923.449999999997], [1.70943636E12, 16652.649999999998]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70943642E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 253.5, "minX": 2.0, "maxY": 31232.0, "series": [{"data": [[33.0, 265.0], [2.0, 2205.5], [41.0, 2277.0], [42.0, 2226.5], [47.0, 1271.0], [52.0, 4001.5], [63.0, 4841.0], [66.0, 2664.0], [67.0, 2887.0], [4.0, 253.5], [69.0, 5554.0], [76.0, 4224.0], [77.0, 5186.0], [80.0, 3149.0], [82.0, 2264.0], [94.0, 2791.5], [92.0, 4274.0], [97.0, 5705.0], [101.0, 3214.0], [107.0, 4191.0], [110.0, 5276.5], [7.0, 31232.0], [118.0, 5819.5], [131.0, 4918.0], [8.0, 4054.0], [143.0, 275.0], [145.0, 3820.0], [9.0, 259.0], [153.0, 3105.0], [156.0, 4546.5], [11.0, 257.0], [15.0, 4361.0], [26.0, 2378.5], [27.0, 1930.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 156.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 253.5, "minX": 2.0, "maxY": 26442.0, "series": [{"data": [[33.0, 265.0], [2.0, 1374.5], [41.0, 1267.0], [42.0, 1508.5], [47.0, 762.0], [52.0, 1753.0], [63.0, 2185.0], [66.0, 2664.0], [67.0, 2053.0], [4.0, 253.5], [69.0, 3979.0], [76.0, 3873.5], [77.0, 4181.0], [80.0, 2972.0], [82.0, 1008.5], [94.0, 2441.5], [92.0, 3162.5], [97.0, 1960.0], [101.0, 1571.0], [107.0, 3308.0], [110.0, 1485.5], [7.0, 26442.0], [118.0, 1358.0], [131.0, 1117.0], [8.0, 2144.0], [143.0, 275.0], [145.0, 840.0], [9.0, 259.0], [153.0, 3104.0], [156.0, 1378.0], [11.0, 257.0], [15.0, 2032.0], [26.0, 433.0], [27.0, 1774.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 156.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.48333333333333334, "minX": 1.70943636E12, "maxY": 39.516666666666666, "series": [{"data": [[1.70943642E12, 0.48333333333333334], [1.70943636E12, 39.516666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70943642E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.8666666666666667, "minX": 1.70943636E12, "maxY": 39.13333333333333, "series": [{"data": [[1.70943642E12, 0.8666666666666667], [1.70943636E12, 39.13333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70943642E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.70943636E12, "maxY": 13.216666666666667, "series": [{"data": [[1.70943642E12, 0.36666666666666664], [1.70943636E12, 12.966666666666667]], "isOverall": false, "label": "GetBooking-success", "isController": false}, {"data": [[1.70943642E12, 0.38333333333333336], [1.70943636E12, 12.95]], "isOverall": false, "label": "CreateBooking-success", "isController": false}, {"data": [[1.70943642E12, 0.11666666666666667], [1.70943636E12, 13.216666666666667]], "isOverall": false, "label": "auth-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70943642E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.8666666666666667, "minX": 1.70943636E12, "maxY": 39.13333333333333, "series": [{"data": [[1.70943642E12, 0.8666666666666667], [1.70943636E12, 39.13333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70943642E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

