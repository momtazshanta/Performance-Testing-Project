/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 245.0, "minX": 0.0, "maxY": 57327.0, "series": [{"data": [[0.0, 1074.0], [0.1, 1074.0], [0.2, 1089.0], [0.3, 1092.0], [0.4, 1107.0], [0.5, 1109.0], [0.6, 1109.0], [0.7, 1111.0], [0.8, 1112.0], [0.9, 1113.0], [1.0, 1114.0], [1.1, 1114.0], [1.2, 1116.0], [1.3, 1117.0], [1.4, 1118.0], [1.5, 1118.0], [1.6, 1118.0], [1.7, 1120.0], [1.8, 1121.0], [1.9, 1121.0], [2.0, 1121.0], [2.1, 1121.0], [2.2, 1122.0], [2.3, 1122.0], [2.4, 1123.0], [2.5, 1123.0], [2.6, 1123.0], [2.7, 1124.0], [2.8, 1125.0], [2.9, 1127.0], [3.0, 1127.0], [3.1, 1127.0], [3.2, 1129.0], [3.3, 1129.0], [3.4, 1131.0], [3.5, 1131.0], [3.6, 1131.0], [3.7, 1134.0], [3.8, 1134.0], [3.9, 1134.0], [4.0, 1137.0], [4.1, 1137.0], [4.2, 1139.0], [4.3, 1139.0], [4.4, 1140.0], [4.5, 1140.0], [4.6, 1140.0], [4.7, 1141.0], [4.8, 1141.0], [4.9, 1143.0], [5.0, 1145.0], [5.1, 1145.0], [5.2, 1146.0], [5.3, 1146.0], [5.4, 1148.0], [5.5, 1150.0], [5.6, 1150.0], [5.7, 1155.0], [5.8, 1160.0], [5.9, 1163.0], [6.0, 1168.0], [6.1, 1168.0], [6.2, 1185.0], [6.3, 1199.0], [6.4, 1202.0], [6.5, 1209.0], [6.6, 1209.0], [6.7, 1220.0], [6.8, 1230.0], [6.9, 1230.0], [7.0, 1243.0], [7.1, 1243.0], [7.2, 1258.0], [7.3, 1262.0], [7.4, 1266.0], [7.5, 1269.0], [7.6, 1269.0], [7.7, 1270.0], [7.8, 1272.0], [7.9, 1274.0], [8.0, 1274.0], [8.1, 1274.0], [8.2, 1276.0], [8.3, 1277.0], [8.4, 1279.0], [8.5, 1279.0], [8.6, 1279.0], [8.7, 1279.0], [8.8, 1281.0], [8.9, 1286.0], [9.0, 1289.0], [9.1, 1289.0], [9.2, 1294.0], [9.3, 1296.0], [9.4, 1296.0], [9.5, 1297.0], [9.6, 1297.0], [9.7, 1297.0], [9.8, 1298.0], [9.9, 1299.0], [10.0, 1299.0], [10.1, 1299.0], [10.2, 1300.0], [10.3, 1301.0], [10.4, 1302.0], [10.5, 1304.0], [10.6, 1304.0], [10.7, 1305.0], [10.8, 1308.0], [10.9, 1308.0], [11.0, 1308.0], [11.1, 1308.0], [11.2, 1310.0], [11.3, 1310.0], [11.4, 1311.0], [11.5, 1311.0], [11.6, 1311.0], [11.7, 1312.0], [11.8, 1313.0], [11.9, 1314.0], [12.0, 1314.0], [12.1, 1314.0], [12.2, 1317.0], [12.3, 1317.0], [12.4, 1318.0], [12.5, 1318.0], [12.6, 1318.0], [12.7, 1320.0], [12.8, 1321.0], [12.9, 1321.0], [13.0, 1323.0], [13.1, 1323.0], [13.2, 1325.0], [13.3, 1326.0], [13.4, 1333.0], [13.5, 1349.0], [13.6, 1349.0], [13.7, 1349.0], [13.8, 1356.0], [13.9, 1388.0], [14.0, 1389.0], [14.1, 1389.0], [14.2, 1400.0], [14.3, 1404.0], [14.4, 1428.0], [14.5, 1429.0], [14.6, 1429.0], [14.7, 1433.0], [14.8, 1438.0], [14.9, 1446.0], [15.0, 1453.0], [15.1, 1453.0], [15.2, 1454.0], [15.3, 1460.0], [15.4, 1479.0], [15.5, 1479.0], [15.6, 1479.0], [15.7, 1484.0], [15.8, 1487.0], [15.9, 1488.0], [16.0, 1492.0], [16.1, 1492.0], [16.2, 1514.0], [16.3, 1521.0], [16.4, 1529.0], [16.5, 1535.0], [16.6, 1535.0], [16.7, 1548.0], [16.8, 1565.0], [16.9, 1576.0], [17.0, 1603.0], [17.1, 1603.0], [17.2, 1619.0], [17.3, 1640.0], [17.4, 1699.0], [17.5, 1701.0], [17.6, 1701.0], [17.7, 1707.0], [17.8, 1714.0], [17.9, 1716.0], [18.0, 1726.0], [18.1, 1726.0], [18.2, 1738.0], [18.3, 1740.0], [18.4, 1744.0], [18.5, 1744.0], [18.6, 1744.0], [18.7, 1748.0], [18.8, 1755.0], [18.9, 1760.0], [19.0, 1770.0], [19.1, 1770.0], [19.2, 1788.0], [19.3, 1808.0], [19.4, 1808.0], [19.5, 1811.0], [19.6, 1811.0], [19.7, 1815.0], [19.8, 1832.0], [19.9, 1853.0], [20.0, 1866.0], [20.1, 1866.0], [20.2, 1871.0], [20.3, 1876.0], [20.4, 1891.0], [20.5, 1891.0], [20.6, 1891.0], [20.7, 1892.0], [20.8, 1893.0], [20.9, 1896.0], [21.0, 1897.0], [21.1, 1897.0], [21.2, 1910.0], [21.3, 1913.0], [21.4, 1914.0], [21.5, 1914.0], [21.6, 1914.0], [21.7, 1915.0], [21.8, 1917.0], [21.9, 1922.0], [22.0, 1922.0], [22.1, 1922.0], [22.2, 1925.0], [22.3, 1929.0], [22.4, 1929.0], [22.5, 1931.0], [22.6, 1931.0], [22.7, 1934.0], [22.8, 1943.0], [22.9, 1950.0], [23.0, 1974.0], [23.1, 1974.0], [23.2, 1985.0], [23.3, 1991.0], [23.4, 1995.0], [23.5, 1997.0], [23.6, 1997.0], [23.7, 1999.0], [23.8, 2005.0], [23.9, 2006.0], [24.0, 2007.0], [24.1, 2007.0], [24.2, 2008.0], [24.3, 2011.0], [24.4, 2011.0], [24.5, 2014.0], [24.6, 2014.0], [24.7, 2015.0], [24.8, 2015.0], [24.9, 2022.0], [25.0, 2025.0], [25.1, 2025.0], [25.2, 2031.0], [25.3, 2037.0], [25.4, 2041.0], [25.5, 2043.0], [25.6, 2043.0], [25.7, 2052.0], [25.8, 2052.0], [25.9, 2059.0], [26.0, 2062.0], [26.1, 2062.0], [26.2, 2077.0], [26.3, 2083.0], [26.4, 2099.0], [26.5, 2105.0], [26.6, 2105.0], [26.7, 2105.0], [26.8, 2109.0], [26.9, 2110.0], [27.0, 2114.0], [27.1, 2114.0], [27.2, 2121.0], [27.3, 2122.0], [27.4, 2123.0], [27.5, 2124.0], [27.6, 2124.0], [27.7, 2136.0], [27.8, 2145.0], [27.9, 2152.0], [28.0, 2155.0], [28.1, 2155.0], [28.2, 2173.0], [28.3, 2174.0], [28.4, 2176.0], [28.5, 2177.0], [28.6, 2177.0], [28.7, 2182.0], [28.8, 2183.0], [28.9, 2185.0], [29.0, 2185.0], [29.1, 2185.0], [29.2, 2187.0], [29.3, 2192.0], [29.4, 2196.0], [29.5, 2198.0], [29.6, 2198.0], [29.7, 2200.0], [29.8, 2200.0], [29.9, 2202.0], [30.0, 2208.0], [30.1, 2208.0], [30.2, 2210.0], [30.3, 2210.0], [30.4, 2212.0], [30.5, 2212.0], [30.6, 2212.0], [30.7, 2213.0], [30.8, 2221.0], [30.9, 2226.0], [31.0, 2231.0], [31.1, 2231.0], [31.2, 2232.0], [31.3, 2251.0], [31.4, 2251.0], [31.5, 2252.0], [31.6, 2252.0], [31.7, 2255.0], [31.8, 2262.0], [31.9, 2266.0], [32.0, 2267.0], [32.1, 2267.0], [32.2, 2268.0], [32.3, 2274.0], [32.4, 2287.0], [32.5, 2302.0], [32.6, 2302.0], [32.7, 2304.0], [32.8, 2308.0], [32.9, 2319.0], [33.0, 2320.0], [33.1, 2320.0], [33.2, 2325.0], [33.3, 2325.0], [33.4, 2335.0], [33.5, 2338.0], [33.6, 2338.0], [33.7, 2338.0], [33.8, 2350.0], [33.9, 2380.0], [34.0, 2413.0], [34.1, 2413.0], [34.2, 2452.0], [34.3, 2478.0], [34.4, 2504.0], [34.5, 2513.0], [34.6, 2513.0], [34.7, 2514.0], [34.8, 2529.0], [34.9, 2534.0], [35.0, 2538.0], [35.1, 2538.0], [35.2, 2541.0], [35.3, 2543.0], [35.4, 2555.0], [35.5, 2557.0], [35.6, 2557.0], [35.7, 2583.0], [35.8, 2589.0], [35.9, 2607.0], [36.0, 2611.0], [36.1, 2611.0], [36.2, 2624.0], [36.3, 2639.0], [36.4, 2641.0], [36.5, 2680.0], [36.6, 2680.0], [36.7, 2696.0], [36.8, 2700.0], [36.9, 2705.0], [37.0, 2742.0], [37.1, 2742.0], [37.2, 2744.0], [37.3, 2746.0], [37.4, 2756.0], [37.5, 2771.0], [37.6, 2771.0], [37.7, 2791.0], [37.8, 2793.0], [37.9, 2796.0], [38.0, 2798.0], [38.1, 2798.0], [38.2, 2798.0], [38.3, 2800.0], [38.4, 2811.0], [38.5, 2813.0], [38.6, 2813.0], [38.7, 2815.0], [38.8, 2816.0], [38.9, 2816.0], [39.0, 2827.0], [39.1, 2827.0], [39.2, 2829.0], [39.3, 2830.0], [39.4, 2845.0], [39.5, 2856.0], [39.6, 2856.0], [39.7, 2858.0], [39.8, 2858.0], [39.9, 2864.0], [40.0, 2864.0], [40.1, 2864.0], [40.2, 2864.0], [40.3, 2867.0], [40.4, 2879.0], [40.5, 2880.0], [40.6, 2880.0], [40.7, 2881.0], [40.8, 2881.0], [40.9, 2897.0], [41.0, 2906.0], [41.1, 2906.0], [41.2, 2909.0], [41.3, 2911.0], [41.4, 2914.0], [41.5, 2920.0], [41.6, 2920.0], [41.7, 2920.0], [41.8, 2929.0], [41.9, 2931.0], [42.0, 2933.0], [42.1, 2933.0], [42.2, 2950.0], [42.3, 2960.0], [42.4, 2964.0], [42.5, 2977.0], [42.6, 2977.0], [42.7, 3014.0], [42.8, 3019.0], [42.9, 3023.0], [43.0, 3047.0], [43.1, 3047.0], [43.2, 3048.0], [43.3, 3080.0], [43.4, 3085.0], [43.5, 3089.0], [43.6, 3089.0], [43.7, 3126.0], [43.8, 3130.0], [43.9, 3139.0], [44.0, 3144.0], [44.1, 3144.0], [44.2, 3145.0], [44.3, 3146.0], [44.4, 3151.0], [44.5, 3154.0], [44.6, 3154.0], [44.7, 3159.0], [44.8, 3171.0], [44.9, 3172.0], [45.0, 3177.0], [45.1, 3177.0], [45.2, 3178.0], [45.3, 3183.0], [45.4, 3184.0], [45.5, 3197.0], [45.6, 3197.0], [45.7, 3205.0], [45.8, 3211.0], [45.9, 3218.0], [46.0, 3234.0], [46.1, 3234.0], [46.2, 3247.0], [46.3, 3249.0], [46.4, 3271.0], [46.5, 3289.0], [46.6, 3289.0], [46.7, 3292.0], [46.8, 3295.0], [46.9, 3297.0], [47.0, 3297.0], [47.1, 3297.0], [47.2, 3302.0], [47.3, 3308.0], [47.4, 3309.0], [47.5, 3310.0], [47.6, 3310.0], [47.7, 3338.0], [47.8, 3350.0], [47.9, 3358.0], [48.0, 3379.0], [48.1, 3379.0], [48.2, 3387.0], [48.3, 3391.0], [48.4, 3396.0], [48.5, 3415.0], [48.6, 3415.0], [48.7, 3437.0], [48.8, 3466.0], [48.9, 3494.0], [49.0, 3507.0], [49.1, 3507.0], [49.2, 3513.0], [49.3, 3518.0], [49.4, 3539.0], [49.5, 3542.0], [49.6, 3542.0], [49.7, 3582.0], [49.8, 3585.0], [49.9, 3586.0], [50.0, 3628.0], [50.1, 3628.0], [50.2, 3644.0], [50.3, 3646.0], [50.4, 3648.0], [50.5, 3650.0], [50.6, 3650.0], [50.7, 3652.0], [50.8, 3652.0], [50.9, 3704.0], [51.0, 3710.0], [51.1, 3710.0], [51.2, 3720.0], [51.3, 3736.0], [51.4, 3742.0], [51.5, 3743.0], [51.6, 3743.0], [51.7, 3744.0], [51.8, 3744.0], [51.9, 3753.0], [52.0, 3757.0], [52.1, 3757.0], [52.2, 3761.0], [52.3, 3774.0], [52.4, 3784.0], [52.5, 3793.0], [52.6, 3793.0], [52.7, 3795.0], [52.8, 3797.0], [52.9, 3820.0], [53.0, 3835.0], [53.1, 3835.0], [53.2, 3842.0], [53.3, 3854.0], [53.4, 3875.0], [53.5, 3880.0], [53.6, 3880.0], [53.7, 3886.0], [53.8, 3899.0], [53.9, 3905.0], [54.0, 3906.0], [54.1, 3906.0], [54.2, 3910.0], [54.3, 3924.0], [54.4, 3928.0], [54.5, 3936.0], [54.6, 3936.0], [54.7, 3942.0], [54.8, 3947.0], [54.9, 3952.0], [55.0, 3968.0], [55.1, 3968.0], [55.2, 3973.0], [55.3, 3994.0], [55.4, 4081.0], [55.5, 4106.0], [55.6, 4106.0], [55.7, 4113.0], [55.8, 4151.0], [55.9, 4177.0], [56.0, 4195.0], [56.1, 4195.0], [56.2, 4227.0], [56.3, 4248.0], [56.4, 4266.0], [56.5, 4271.0], [56.6, 4271.0], [56.7, 4272.0], [56.8, 4282.0], [56.9, 4307.0], [57.0, 4326.0], [57.1, 4326.0], [57.2, 4364.0], [57.3, 4372.0], [57.4, 4420.0], [57.5, 4424.0], [57.6, 4424.0], [57.7, 4445.0], [57.8, 4450.0], [57.9, 4454.0], [58.0, 4484.0], [58.1, 4484.0], [58.2, 4489.0], [58.3, 4502.0], [58.4, 4508.0], [58.5, 4512.0], [58.6, 4512.0], [58.7, 4518.0], [58.8, 4520.0], [58.9, 4524.0], [59.0, 4528.0], [59.1, 4528.0], [59.2, 4537.0], [59.3, 4549.0], [59.4, 4568.0], [59.5, 4568.0], [59.6, 4568.0], [59.7, 4594.0], [59.8, 4595.0], [59.9, 4597.0], [60.0, 4604.0], [60.1, 4604.0], [60.2, 4620.0], [60.3, 4635.0], [60.4, 4637.0], [60.5, 4641.0], [60.6, 4641.0], [60.7, 4647.0], [60.8, 4654.0], [60.9, 4659.0], [61.0, 4664.0], [61.1, 4664.0], [61.2, 4682.0], [61.3, 4699.0], [61.4, 4707.0], [61.5, 4708.0], [61.6, 4708.0], [61.7, 4718.0], [61.8, 4718.0], [61.9, 4726.0], [62.0, 4738.0], [62.1, 4738.0], [62.2, 4743.0], [62.3, 4769.0], [62.4, 4777.0], [62.5, 4780.0], [62.6, 4780.0], [62.7, 4804.0], [62.8, 4812.0], [62.9, 4821.0], [63.0, 4833.0], [63.1, 4833.0], [63.2, 4834.0], [63.3, 4837.0], [63.4, 4844.0], [63.5, 4862.0], [63.6, 4862.0], [63.7, 4898.0], [63.8, 4898.0], [63.9, 4945.0], [64.0, 4952.0], [64.1, 4952.0], [64.2, 4961.0], [64.3, 4962.0], [64.4, 4987.0], [64.5, 5003.0], [64.6, 5003.0], [64.7, 5059.0], [64.8, 5072.0], [64.9, 5080.0], [65.0, 5101.0], [65.1, 5101.0], [65.2, 5105.0], [65.3, 5116.0], [65.4, 5130.0], [65.5, 5154.0], [65.6, 5154.0], [65.7, 5154.0], [65.8, 5160.0], [65.9, 5163.0], [66.0, 5178.0], [66.1, 5178.0], [66.2, 5179.0], [66.3, 5246.0], [66.4, 5272.0], [66.5, 5275.0], [66.6, 5275.0], [66.7, 5277.0], [66.8, 5278.0], [66.9, 5281.0], [67.0, 5286.0], [67.1, 5286.0], [67.2, 5317.0], [67.3, 5325.0], [67.4, 5366.0], [67.5, 5368.0], [67.6, 5368.0], [67.7, 5393.0], [67.8, 5395.0], [67.9, 5405.0], [68.0, 5425.0], [68.1, 5425.0], [68.2, 5447.0], [68.3, 5471.0], [68.4, 5495.0], [68.5, 5504.0], [68.6, 5504.0], [68.7, 5525.0], [68.8, 5551.0], [68.9, 5557.0], [69.0, 5578.0], [69.1, 5578.0], [69.2, 5582.0], [69.3, 5598.0], [69.4, 5601.0], [69.5, 5652.0], [69.6, 5652.0], [69.7, 5666.0], [69.8, 5681.0], [69.9, 5681.0], [70.0, 5683.0], [70.1, 5683.0], [70.2, 5690.0], [70.3, 5690.0], [70.4, 5699.0], [70.5, 5701.0], [70.6, 5701.0], [70.7, 5723.0], [70.8, 5814.0], [70.9, 5815.0], [71.0, 5837.0], [71.1, 5837.0], [71.2, 5844.0], [71.3, 5845.0], [71.4, 5853.0], [71.5, 5869.0], [71.6, 5869.0], [71.7, 5874.0], [71.8, 5904.0], [71.9, 5924.0], [72.0, 5929.0], [72.1, 5929.0], [72.2, 5932.0], [72.3, 5938.0], [72.4, 5942.0], [72.5, 5960.0], [72.6, 5960.0], [72.7, 5960.0], [72.8, 6003.0], [72.9, 6014.0], [73.0, 6042.0], [73.1, 6042.0], [73.2, 6043.0], [73.3, 6113.0], [73.4, 6134.0], [73.5, 6159.0], [73.6, 6159.0], [73.7, 6168.0], [73.8, 6178.0], [73.9, 6182.0], [74.0, 6184.0], [74.1, 6184.0], [74.2, 6272.0], [74.3, 6293.0], [74.4, 6372.0], [74.5, 6373.0], [74.6, 6373.0], [74.7, 6375.0], [74.8, 6387.0], [74.9, 6392.0], [75.0, 6450.0], [75.1, 6450.0], [75.2, 6462.0], [75.3, 6501.0], [75.4, 6594.0], [75.5, 6701.0], [75.6, 6701.0], [75.7, 6710.0], [75.8, 6727.0], [75.9, 6738.0], [76.0, 6866.0], [76.1, 6866.0], [76.2, 6917.0], [76.3, 6927.0], [76.4, 6998.0], [76.5, 7057.0], [76.6, 7057.0], [76.7, 7062.0], [76.8, 7063.0], [76.9, 7129.0], [77.0, 7139.0], [77.1, 7139.0], [77.2, 7165.0], [77.3, 7205.0], [77.4, 7213.0], [77.5, 7242.0], [77.6, 7242.0], [77.7, 7364.0], [77.8, 7394.0], [77.9, 7554.0], [78.0, 7556.0], [78.1, 7556.0], [78.2, 7629.0], [78.3, 7715.0], [78.4, 7768.0], [78.5, 7772.0], [78.6, 7772.0], [78.7, 7817.0], [78.8, 7833.0], [78.9, 8013.0], [79.0, 8018.0], [79.1, 8018.0], [79.2, 8037.0], [79.3, 8049.0], [79.4, 8057.0], [79.5, 8114.0], [79.6, 8114.0], [79.7, 8131.0], [79.8, 8134.0], [79.9, 8167.0], [80.0, 8209.0], [80.1, 8209.0], [80.2, 8252.0], [80.3, 8259.0], [80.4, 8321.0], [80.5, 8414.0], [80.6, 8414.0], [80.7, 8477.0], [80.8, 8498.0], [80.9, 8579.0], [81.0, 8601.0], [81.1, 8601.0], [81.2, 8615.0], [81.3, 8644.0], [81.4, 8713.0], [81.5, 8726.0], [81.6, 8726.0], [81.7, 8727.0], [81.8, 8775.0], [81.9, 8776.0], [82.0, 8785.0], [82.1, 8785.0], [82.2, 8790.0], [82.3, 8797.0], [82.4, 8802.0], [82.5, 8851.0], [82.6, 8851.0], [82.7, 8889.0], [82.8, 8896.0], [82.9, 8904.0], [83.0, 8905.0], [83.1, 8905.0], [83.2, 8973.0], [83.3, 9006.0], [83.4, 9018.0], [83.5, 9027.0], [83.6, 9027.0], [83.7, 9063.0], [83.8, 9083.0], [83.9, 9122.0], [84.0, 9240.0], [84.1, 9240.0], [84.2, 9282.0], [84.3, 9325.0], [84.4, 9349.0], [84.5, 9365.0], [84.6, 9365.0], [84.7, 9389.0], [84.8, 9404.0], [84.9, 9481.0], [85.0, 9503.0], [85.1, 9503.0], [85.2, 9526.0], [85.3, 9530.0], [85.4, 9619.0], [85.5, 9626.0], [85.6, 9626.0], [85.7, 9707.0], [85.8, 9799.0], [85.9, 9857.0], [86.0, 9901.0], [86.1, 9901.0], [86.2, 9967.0], [86.3, 10026.0], [86.4, 10031.0], [86.5, 10033.0], [86.6, 10033.0], [86.7, 10120.0], [86.8, 10143.0], [86.9, 10204.0], [87.0, 10255.0], [87.1, 10255.0], [87.2, 10264.0], [87.3, 10360.0], [87.4, 10414.0], [87.5, 10510.0], [87.6, 10510.0], [87.7, 10539.0], [87.8, 10646.0], [87.9, 10697.0], [88.0, 10770.0], [88.1, 10770.0], [88.2, 10850.0], [88.3, 11354.0], [88.4, 11655.0], [88.5, 11743.0], [88.6, 11743.0], [88.7, 11783.0], [88.8, 11843.0], [88.9, 11858.0], [89.0, 11880.0], [89.1, 11880.0], [89.2, 11891.0], [89.3, 11987.0], [89.4, 12097.0], [89.5, 12331.0], [89.6, 12331.0], [89.7, 12462.0], [89.8, 13053.0], [89.9, 13238.0], [90.0, 13249.0], [90.1, 13249.0], [90.2, 13276.0], [90.3, 13315.0], [90.4, 13760.0], [90.5, 13761.0], [90.6, 13761.0], [90.7, 13894.0], [90.8, 13972.0], [90.9, 14030.0], [91.0, 14612.0], [91.1, 14612.0], [91.2, 14846.0], [91.3, 15027.0], [91.4, 15057.0], [91.5, 15335.0], [91.6, 15335.0], [91.7, 15477.0], [91.8, 15485.0], [91.9, 15500.0], [92.0, 15537.0], [92.1, 15537.0], [92.2, 15589.0], [92.3, 15635.0], [92.4, 15704.0], [92.5, 15759.0], [92.6, 15759.0], [92.7, 15765.0], [92.8, 15848.0], [92.9, 15880.0], [93.0, 15916.0], [93.1, 15916.0], [93.2, 15956.0], [93.3, 15959.0], [93.4, 15960.0], [93.5, 16033.0], [93.6, 16033.0], [93.7, 16053.0], [93.8, 16067.0], [93.9, 16119.0], [94.0, 16128.0], [94.1, 16128.0], [94.2, 16209.0], [94.3, 16234.0], [94.4, 16342.0], [94.5, 16369.0], [94.6, 16369.0], [94.7, 16549.0], [94.8, 16648.0], [94.9, 16750.0], [95.0, 16785.0], [95.1, 16785.0], [95.2, 17125.0], [95.3, 17325.0], [95.4, 17408.0], [95.5, 17496.0], [95.6, 17496.0], [95.7, 17551.0], [95.8, 17694.0], [95.9, 17747.0], [96.0, 17753.0], [96.1, 17753.0], [96.2, 17795.0], [96.3, 18041.0], [96.4, 18067.0], [96.5, 19279.0], [96.6, 19279.0], [96.7, 20405.0], [96.8, 25278.0], [96.9, 25770.0], [97.0, 26001.0], [97.1, 26001.0], [97.2, 28020.0], [97.3, 28252.0], [97.4, 28717.0], [97.5, 28946.0], [97.6, 28946.0], [97.7, 29036.0], [97.8, 29222.0], [97.9, 29246.0], [98.0, 29351.0], [98.1, 29351.0], [98.2, 29412.0], [98.3, 29755.0], [98.4, 29859.0], [98.5, 29982.0], [98.6, 29982.0], [98.7, 29986.0], [98.8, 30329.0], [98.9, 30469.0], [99.0, 30811.0], [99.1, 30811.0], [99.2, 31124.0], [99.3, 31659.0], [99.4, 31801.0], [99.5, 31802.0], [99.6, 31802.0], [99.7, 33111.0], [99.8, 33407.0], [99.9, 57327.0]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[0.0, 551.0], [0.1, 551.0], [0.2, 570.0], [0.3, 1484.0], [0.4, 1671.0], [0.5, 1956.0], [0.6, 1956.0], [0.7, 1993.0], [0.8, 2000.0], [0.9, 2019.0], [1.0, 2025.0], [1.1, 2025.0], [1.2, 2033.0], [1.3, 2260.0], [1.4, 2276.0], [1.5, 2297.0], [1.6, 2297.0], [1.7, 2370.0], [1.8, 2389.0], [1.9, 2487.0], [2.0, 2487.0], [2.1, 2487.0], [2.2, 2511.0], [2.3, 2550.0], [2.4, 2560.0], [2.5, 2562.0], [2.6, 2562.0], [2.7, 2573.0], [2.8, 2660.0], [2.9, 2673.0], [3.0, 2677.0], [3.1, 2677.0], [3.2, 2721.0], [3.3, 2751.0], [3.4, 2763.0], [3.5, 2765.0], [3.6, 2765.0], [3.7, 2782.0], [3.8, 2793.0], [3.9, 2806.0], [4.0, 2822.0], [4.1, 2822.0], [4.2, 2829.0], [4.3, 2900.0], [4.4, 2934.0], [4.5, 3005.0], [4.6, 3005.0], [4.7, 3011.0], [4.8, 3027.0], [4.9, 3077.0], [5.0, 3085.0], [5.1, 3085.0], [5.2, 3087.0], [5.3, 3153.0], [5.4, 3157.0], [5.5, 3157.0], [5.6, 3157.0], [5.7, 3192.0], [5.8, 3202.0], [5.9, 3209.0], [6.0, 3210.0], [6.1, 3210.0], [6.2, 3217.0], [6.3, 3278.0], [6.4, 3291.0], [6.5, 3292.0], [6.6, 3292.0], [6.7, 3328.0], [6.8, 3332.0], [6.9, 3361.0], [7.0, 3423.0], [7.1, 3423.0], [7.2, 3448.0], [7.3, 3450.0], [7.4, 3684.0], [7.5, 3700.0], [7.6, 3700.0], [7.7, 3723.0], [7.8, 3737.0], [7.9, 3813.0], [8.0, 3825.0], [8.1, 3825.0], [8.2, 3869.0], [8.3, 3895.0], [8.4, 3925.0], [8.5, 3955.0], [8.6, 3955.0], [8.7, 3958.0], [8.8, 3977.0], [8.9, 3977.0], [9.0, 3982.0], [9.1, 3982.0], [9.2, 3983.0], [9.3, 3989.0], [9.4, 3997.0], [9.5, 4009.0], [9.6, 4009.0], [9.7, 4018.0], [9.8, 4019.0], [9.9, 4025.0], [10.0, 4029.0], [10.1, 4029.0], [10.2, 4034.0], [10.3, 4053.0], [10.4, 4060.0], [10.5, 4081.0], [10.6, 4081.0], [10.7, 4088.0], [10.8, 4138.0], [10.9, 4173.0], [11.0, 4174.0], [11.1, 4174.0], [11.2, 4187.0], [11.3, 4195.0], [11.4, 4226.0], [11.5, 4231.0], [11.6, 4231.0], [11.7, 4250.0], [11.8, 4256.0], [11.9, 4258.0], [12.0, 4277.0], [12.1, 4277.0], [12.2, 4289.0], [12.3, 4292.0], [12.4, 4296.0], [12.5, 4301.0], [12.6, 4301.0], [12.7, 4327.0], [12.8, 4329.0], [12.9, 4332.0], [13.0, 4339.0], [13.1, 4339.0], [13.2, 4356.0], [13.3, 4359.0], [13.4, 4363.0], [13.5, 4368.0], [13.6, 4368.0], [13.7, 4373.0], [13.8, 4375.0], [13.9, 4375.0], [14.0, 4384.0], [14.1, 4384.0], [14.2, 4391.0], [14.3, 4414.0], [14.4, 4419.0], [14.5, 4431.0], [14.6, 4431.0], [14.7, 4437.0], [14.8, 4472.0], [14.9, 4480.0], [15.0, 4542.0], [15.1, 4542.0], [15.2, 4543.0], [15.3, 4547.0], [15.4, 4568.0], [15.5, 4580.0], [15.6, 4580.0], [15.7, 4581.0], [15.8, 4599.0], [15.9, 4607.0], [16.0, 4615.0], [16.1, 4615.0], [16.2, 4645.0], [16.3, 4649.0], [16.4, 4684.0], [16.5, 4713.0], [16.6, 4713.0], [16.7, 4752.0], [16.8, 4791.0], [16.9, 4792.0], [17.0, 4799.0], [17.1, 4799.0], [17.2, 4811.0], [17.3, 4826.0], [17.4, 4846.0], [17.5, 4852.0], [17.6, 4852.0], [17.7, 4893.0], [17.8, 4904.0], [17.9, 4947.0], [18.0, 4958.0], [18.1, 4958.0], [18.2, 4990.0], [18.3, 5012.0], [18.4, 5016.0], [18.5, 5028.0], [18.6, 5028.0], [18.7, 5055.0], [18.8, 5061.0], [18.9, 5079.0], [19.0, 5108.0], [19.1, 5108.0], [19.2, 5136.0], [19.3, 5166.0], [19.4, 5176.0], [19.5, 5236.0], [19.6, 5236.0], [19.7, 5238.0], [19.8, 5248.0], [19.9, 5251.0], [20.0, 5258.0], [20.1, 5258.0], [20.2, 5259.0], [20.3, 5292.0], [20.4, 5295.0], [20.5, 5309.0], [20.6, 5309.0], [20.7, 5318.0], [20.8, 5370.0], [20.9, 5378.0], [21.0, 5435.0], [21.1, 5435.0], [21.2, 5446.0], [21.3, 5514.0], [21.4, 5536.0], [21.5, 5556.0], [21.6, 5556.0], [21.7, 5563.0], [21.8, 5587.0], [21.9, 5589.0], [22.0, 5607.0], [22.1, 5607.0], [22.2, 5610.0], [22.3, 5640.0], [22.4, 5694.0], [22.5, 5751.0], [22.6, 5751.0], [22.7, 5776.0], [22.8, 5803.0], [22.9, 5808.0], [23.0, 5824.0], [23.1, 5824.0], [23.2, 5853.0], [23.3, 5902.0], [23.4, 5936.0], [23.5, 5945.0], [23.6, 5945.0], [23.7, 5951.0], [23.8, 5988.0], [23.9, 5990.0], [24.0, 6032.0], [24.1, 6032.0], [24.2, 6049.0], [24.3, 6091.0], [24.4, 6117.0], [24.5, 6120.0], [24.6, 6120.0], [24.7, 6127.0], [24.8, 6141.0], [24.9, 6163.0], [25.0, 6176.0], [25.1, 6176.0], [25.2, 6176.0], [25.3, 6208.0], [25.4, 6211.0], [25.5, 6251.0], [25.6, 6251.0], [25.7, 6280.0], [25.8, 6310.0], [25.9, 6329.0], [26.0, 6341.0], [26.1, 6341.0], [26.2, 6345.0], [26.3, 6365.0], [26.4, 6371.0], [26.5, 6424.0], [26.6, 6424.0], [26.7, 6436.0], [26.8, 6446.0], [26.9, 6468.0], [27.0, 6501.0], [27.1, 6501.0], [27.2, 6524.0], [27.3, 6561.0], [27.4, 6563.0], [27.5, 6608.0], [27.6, 6608.0], [27.7, 6670.0], [27.8, 6729.0], [27.9, 6734.0], [28.0, 6763.0], [28.1, 6763.0], [28.2, 6777.0], [28.3, 6793.0], [28.4, 6810.0], [28.5, 6813.0], [28.6, 6813.0], [28.7, 6830.0], [28.8, 6849.0], [28.9, 6881.0], [29.0, 6895.0], [29.1, 6895.0], [29.2, 6907.0], [29.3, 6909.0], [29.4, 6919.0], [29.5, 6927.0], [29.6, 6927.0], [29.7, 6971.0], [29.8, 6984.0], [29.9, 6986.0], [30.0, 7007.0], [30.1, 7007.0], [30.2, 7078.0], [30.3, 7081.0], [30.4, 7116.0], [30.5, 7118.0], [30.6, 7118.0], [30.7, 7122.0], [30.8, 7130.0], [30.9, 7133.0], [31.0, 7156.0], [31.1, 7156.0], [31.2, 7171.0], [31.3, 7178.0], [31.4, 7191.0], [31.5, 7208.0], [31.6, 7208.0], [31.7, 7224.0], [31.8, 7232.0], [31.9, 7236.0], [32.0, 7236.0], [32.1, 7236.0], [32.2, 7278.0], [32.3, 7289.0], [32.4, 7292.0], [32.5, 7324.0], [32.6, 7324.0], [32.7, 7334.0], [32.8, 7338.0], [32.9, 7369.0], [33.0, 7383.0], [33.1, 7383.0], [33.2, 7388.0], [33.3, 7397.0], [33.4, 7429.0], [33.5, 7449.0], [33.6, 7449.0], [33.7, 7452.0], [33.8, 7469.0], [33.9, 7491.0], [34.0, 7533.0], [34.1, 7533.0], [34.2, 7558.0], [34.3, 7584.0], [34.4, 7604.0], [34.5, 7659.0], [34.6, 7659.0], [34.7, 7666.0], [34.8, 7670.0], [34.9, 7675.0], [35.0, 7692.0], [35.1, 7692.0], [35.2, 7703.0], [35.3, 7727.0], [35.4, 7754.0], [35.5, 7755.0], [35.6, 7755.0], [35.7, 7770.0], [35.8, 7855.0], [35.9, 7857.0], [36.0, 7864.0], [36.1, 7864.0], [36.2, 7876.0], [36.3, 7876.0], [36.4, 7895.0], [36.5, 7911.0], [36.6, 7911.0], [36.7, 7926.0], [36.8, 7930.0], [36.9, 7950.0], [37.0, 7977.0], [37.1, 7977.0], [37.2, 7984.0], [37.3, 8004.0], [37.4, 8069.0], [37.5, 8072.0], [37.6, 8072.0], [37.7, 8105.0], [37.8, 8116.0], [37.9, 8122.0], [38.0, 8145.0], [38.1, 8145.0], [38.2, 8153.0], [38.3, 8154.0], [38.4, 8166.0], [38.5, 8193.0], [38.6, 8193.0], [38.7, 8202.0], [38.8, 8203.0], [38.9, 8222.0], [39.0, 8233.0], [39.1, 8233.0], [39.2, 8260.0], [39.3, 8269.0], [39.4, 8278.0], [39.5, 8322.0], [39.6, 8322.0], [39.7, 8333.0], [39.8, 8347.0], [39.9, 8379.0], [40.0, 8405.0], [40.1, 8405.0], [40.2, 8413.0], [40.3, 8420.0], [40.4, 8438.0], [40.5, 8455.0], [40.6, 8455.0], [40.7, 8465.0], [40.8, 8468.0], [40.9, 8476.0], [41.0, 8483.0], [41.1, 8483.0], [41.2, 8505.0], [41.3, 8508.0], [41.4, 8545.0], [41.5, 8545.0], [41.6, 8545.0], [41.7, 8549.0], [41.8, 8566.0], [41.9, 8570.0], [42.0, 8571.0], [42.1, 8571.0], [42.2, 8579.0], [42.3, 8595.0], [42.4, 8610.0], [42.5, 8612.0], [42.6, 8612.0], [42.7, 8645.0], [42.8, 8662.0], [42.9, 8673.0], [43.0, 8686.0], [43.1, 8686.0], [43.2, 8696.0], [43.3, 8697.0], [43.4, 8712.0], [43.5, 8742.0], [43.6, 8742.0], [43.7, 8744.0], [43.8, 8770.0], [43.9, 8770.0], [44.0, 8801.0], [44.1, 8801.0], [44.2, 8813.0], [44.3, 8830.0], [44.4, 8882.0], [44.5, 8923.0], [44.6, 8923.0], [44.7, 8956.0], [44.8, 8979.0], [44.9, 8995.0], [45.0, 9005.0], [45.1, 9005.0], [45.2, 9059.0], [45.3, 9061.0], [45.4, 9073.0], [45.5, 9112.0], [45.6, 9112.0], [45.7, 9118.0], [45.8, 9127.0], [45.9, 9143.0], [46.0, 9167.0], [46.1, 9167.0], [46.2, 9170.0], [46.3, 9179.0], [46.4, 9190.0], [46.5, 9213.0], [46.6, 9213.0], [46.7, 9214.0], [46.8, 9219.0], [46.9, 9221.0], [47.0, 9261.0], [47.1, 9261.0], [47.2, 9277.0], [47.3, 9289.0], [47.4, 9326.0], [47.5, 9330.0], [47.6, 9330.0], [47.7, 9389.0], [47.8, 9421.0], [47.9, 9467.0], [48.0, 9496.0], [48.1, 9496.0], [48.2, 9505.0], [48.3, 9513.0], [48.4, 9522.0], [48.5, 9537.0], [48.6, 9537.0], [48.7, 9538.0], [48.8, 9540.0], [48.9, 9607.0], [49.0, 9612.0], [49.1, 9612.0], [49.2, 9627.0], [49.3, 9640.0], [49.4, 9653.0], [49.5, 9656.0], [49.6, 9656.0], [49.7, 9657.0], [49.8, 9658.0], [49.9, 9668.0], [50.0, 9688.0], [50.1, 9688.0], [50.2, 9691.0], [50.3, 9712.0], [50.4, 9722.0], [50.5, 9771.0], [50.6, 9771.0], [50.7, 9784.0], [50.8, 9850.0], [50.9, 9874.0], [51.0, 9883.0], [51.1, 9883.0], [51.2, 9883.0], [51.3, 9887.0], [51.4, 9911.0], [51.5, 9961.0], [51.6, 9961.0], [51.7, 10005.0], [51.8, 10014.0], [51.9, 10022.0], [52.0, 10031.0], [52.1, 10031.0], [52.2, 10042.0], [52.3, 10049.0], [52.4, 10059.0], [52.5, 10060.0], [52.6, 10060.0], [52.7, 10071.0], [52.8, 10072.0], [52.9, 10088.0], [53.0, 10088.0], [53.1, 10088.0], [53.2, 10092.0], [53.3, 10107.0], [53.4, 10135.0], [53.5, 10141.0], [53.6, 10141.0], [53.7, 10174.0], [53.8, 10205.0], [53.9, 10241.0], [54.0, 10255.0], [54.1, 10255.0], [54.2, 10326.0], [54.3, 10328.0], [54.4, 10369.0], [54.5, 10376.0], [54.6, 10376.0], [54.7, 10380.0], [54.8, 10406.0], [54.9, 10480.0], [55.0, 10529.0], [55.1, 10529.0], [55.2, 10534.0], [55.3, 10547.0], [55.4, 10569.0], [55.5, 10570.0], [55.6, 10570.0], [55.7, 10581.0], [55.8, 10613.0], [55.9, 10634.0], [56.0, 10707.0], [56.1, 10707.0], [56.2, 10733.0], [56.3, 10737.0], [56.4, 10754.0], [56.5, 10765.0], [56.6, 10765.0], [56.7, 10785.0], [56.8, 10812.0], [56.9, 10873.0], [57.0, 10890.0], [57.1, 10890.0], [57.2, 10904.0], [57.3, 10906.0], [57.4, 10934.0], [57.5, 10938.0], [57.6, 10938.0], [57.7, 10959.0], [57.8, 10975.0], [57.9, 10977.0], [58.0, 10990.0], [58.1, 10990.0], [58.2, 11033.0], [58.3, 11035.0], [58.4, 11041.0], [58.5, 11136.0], [58.6, 11136.0], [58.7, 11176.0], [58.8, 11203.0], [58.9, 11204.0], [59.0, 11238.0], [59.1, 11238.0], [59.2, 11297.0], [59.3, 11300.0], [59.4, 11361.0], [59.5, 11365.0], [59.6, 11365.0], [59.7, 11374.0], [59.8, 11375.0], [59.9, 11426.0], [60.0, 11448.0], [60.1, 11448.0], [60.2, 11490.0], [60.3, 11498.0], [60.4, 11509.0], [60.5, 11516.0], [60.6, 11516.0], [60.7, 11525.0], [60.8, 11534.0], [60.9, 11556.0], [61.0, 11583.0], [61.1, 11583.0], [61.2, 11591.0], [61.3, 11594.0], [61.4, 11610.0], [61.5, 11629.0], [61.6, 11629.0], [61.7, 11639.0], [61.8, 11694.0], [61.9, 11697.0], [62.0, 11711.0], [62.1, 11711.0], [62.2, 11721.0], [62.3, 11763.0], [62.4, 11769.0], [62.5, 11860.0], [62.6, 11860.0], [62.7, 11894.0], [62.8, 11897.0], [62.9, 11940.0], [63.0, 11951.0], [63.1, 11951.0], [63.2, 11958.0], [63.3, 12026.0], [63.4, 12029.0], [63.5, 12034.0], [63.6, 12034.0], [63.7, 12045.0], [63.8, 12053.0], [63.9, 12090.0], [64.0, 12091.0], [64.1, 12091.0], [64.2, 12101.0], [64.3, 12146.0], [64.4, 12166.0], [64.5, 12168.0], [64.6, 12168.0], [64.7, 12170.0], [64.8, 12187.0], [64.9, 12226.0], [65.0, 12264.0], [65.1, 12264.0], [65.2, 12286.0], [65.3, 12287.0], [65.4, 12296.0], [65.5, 12308.0], [65.6, 12308.0], [65.7, 12318.0], [65.8, 12319.0], [65.9, 12330.0], [66.0, 12367.0], [66.1, 12367.0], [66.2, 12371.0], [66.3, 12406.0], [66.4, 12414.0], [66.5, 12527.0], [66.6, 12527.0], [66.7, 12536.0], [66.8, 12541.0], [66.9, 12562.0], [67.0, 12590.0], [67.1, 12590.0], [67.2, 12622.0], [67.3, 12640.0], [67.4, 12652.0], [67.5, 12687.0], [67.6, 12687.0], [67.7, 12773.0], [67.8, 12795.0], [67.9, 12846.0], [68.0, 12881.0], [68.1, 12881.0], [68.2, 12917.0], [68.3, 12930.0], [68.4, 12935.0], [68.5, 12946.0], [68.6, 12946.0], [68.7, 12982.0], [68.8, 13002.0], [68.9, 13019.0], [69.0, 13021.0], [69.1, 13021.0], [69.2, 13022.0], [69.3, 13025.0], [69.4, 13065.0], [69.5, 13079.0], [69.6, 13079.0], [69.7, 13154.0], [69.8, 13161.0], [69.9, 13164.0], [70.0, 13200.0], [70.1, 13200.0], [70.2, 13233.0], [70.3, 13281.0], [70.4, 13301.0], [70.5, 13368.0], [70.6, 13368.0], [70.7, 13391.0], [70.8, 13395.0], [70.9, 13396.0], [71.0, 13397.0], [71.1, 13397.0], [71.2, 13457.0], [71.3, 13466.0], [71.4, 13470.0], [71.5, 13474.0], [71.6, 13474.0], [71.7, 13499.0], [71.8, 13563.0], [71.9, 13705.0], [72.0, 13759.0], [72.1, 13759.0], [72.2, 13802.0], [72.3, 13820.0], [72.4, 13855.0], [72.5, 13908.0], [72.6, 13908.0], [72.7, 13926.0], [72.8, 13931.0], [72.9, 14029.0], [73.0, 14037.0], [73.1, 14037.0], [73.2, 14081.0], [73.3, 14220.0], [73.4, 14229.0], [73.5, 14237.0], [73.6, 14237.0], [73.7, 14277.0], [73.8, 14278.0], [73.9, 14317.0], [74.0, 14335.0], [74.1, 14335.0], [74.2, 14359.0], [74.3, 14364.0], [74.4, 14467.0], [74.5, 14468.0], [74.6, 14468.0], [74.7, 14499.0], [74.8, 14527.0], [74.9, 14560.0], [75.0, 14625.0], [75.1, 14625.0], [75.2, 14639.0], [75.3, 14707.0], [75.4, 14783.0], [75.5, 14784.0], [75.6, 14784.0], [75.7, 14790.0], [75.8, 14798.0], [75.9, 14818.0], [76.0, 14879.0], [76.1, 14879.0], [76.2, 14899.0], [76.3, 14951.0], [76.4, 14968.0], [76.5, 14980.0], [76.6, 14980.0], [76.7, 15087.0], [76.8, 15121.0], [76.9, 15276.0], [77.0, 15330.0], [77.1, 15330.0], [77.2, 15365.0], [77.3, 15371.0], [77.4, 15381.0], [77.5, 15382.0], [77.6, 15382.0], [77.7, 15494.0], [77.8, 15507.0], [77.9, 15572.0], [78.0, 15575.0], [78.1, 15575.0], [78.2, 15668.0], [78.3, 15697.0], [78.4, 15717.0], [78.5, 15740.0], [78.6, 15740.0], [78.7, 15798.0], [78.8, 15858.0], [78.9, 15902.0], [79.0, 15906.0], [79.1, 15906.0], [79.2, 15952.0], [79.3, 15970.0], [79.4, 16016.0], [79.5, 16083.0], [79.6, 16083.0], [79.7, 16138.0], [79.8, 16273.0], [79.9, 16354.0], [80.0, 16370.0], [80.1, 16370.0], [80.2, 16443.0], [80.3, 16443.0], [80.4, 16491.0], [80.5, 16535.0], [80.6, 16535.0], [80.7, 16580.0], [80.8, 16589.0], [80.9, 16599.0], [81.0, 16599.0], [81.1, 16599.0], [81.2, 16669.0], [81.3, 16673.0], [81.4, 16742.0], [81.5, 16753.0], [81.6, 16753.0], [81.7, 16770.0], [81.8, 16799.0], [81.9, 16897.0], [82.0, 16910.0], [82.1, 16910.0], [82.2, 16911.0], [82.3, 16925.0], [82.4, 17035.0], [82.5, 17060.0], [82.6, 17060.0], [82.7, 17081.0], [82.8, 17095.0], [82.9, 17170.0], [83.0, 17249.0], [83.1, 17249.0], [83.2, 17255.0], [83.3, 17323.0], [83.4, 17395.0], [83.5, 17457.0], [83.6, 17457.0], [83.7, 17476.0], [83.8, 17549.0], [83.9, 17751.0], [84.0, 17841.0], [84.1, 17841.0], [84.2, 17866.0], [84.3, 17881.0], [84.4, 17935.0], [84.5, 17955.0], [84.6, 17955.0], [84.7, 18165.0], [84.8, 18246.0], [84.9, 18278.0], [85.0, 18334.0], [85.1, 18334.0], [85.2, 18351.0], [85.3, 18376.0], [85.4, 18383.0], [85.5, 18465.0], [85.6, 18465.0], [85.7, 18485.0], [85.8, 18609.0], [85.9, 18615.0], [86.0, 18638.0], [86.1, 18638.0], [86.2, 18657.0], [86.3, 18703.0], [86.4, 18749.0], [86.5, 18771.0], [86.6, 18771.0], [86.7, 18811.0], [86.8, 18940.0], [86.9, 18957.0], [87.0, 18978.0], [87.1, 18978.0], [87.2, 18981.0], [87.3, 19013.0], [87.4, 19077.0], [87.5, 19169.0], [87.6, 19169.0], [87.7, 19171.0], [87.8, 19193.0], [87.9, 19196.0], [88.0, 19409.0], [88.1, 19409.0], [88.2, 19590.0], [88.3, 19661.0], [88.4, 19707.0], [88.5, 19742.0], [88.6, 19742.0], [88.7, 19775.0], [88.8, 19971.0], [88.9, 20003.0], [89.0, 20353.0], [89.1, 20353.0], [89.2, 20369.0], [89.3, 20442.0], [89.4, 20480.0], [89.5, 20520.0], [89.6, 20520.0], [89.7, 20572.0], [89.8, 20890.0], [89.9, 21310.0], [90.0, 21356.0], [90.1, 21356.0], [90.2, 22166.0], [90.3, 22244.0], [90.4, 22534.0], [90.5, 22567.0], [90.6, 22567.0], [90.7, 22595.0], [90.8, 22617.0], [90.9, 22665.0], [91.0, 22787.0], [91.1, 22787.0], [91.2, 22988.0], [91.3, 23114.0], [91.4, 23128.0], [91.5, 23196.0], [91.6, 23196.0], [91.7, 23258.0], [91.8, 23362.0], [91.9, 23385.0], [92.0, 23499.0], [92.1, 23499.0], [92.2, 23604.0], [92.3, 23663.0], [92.4, 23718.0], [92.5, 23736.0], [92.6, 23736.0], [92.7, 23930.0], [92.8, 23951.0], [92.9, 24401.0], [93.0, 24431.0], [93.1, 24431.0], [93.2, 24475.0], [93.3, 24572.0], [93.4, 24727.0], [93.5, 24815.0], [93.6, 24815.0], [93.7, 24902.0], [93.8, 24961.0], [93.9, 25022.0], [94.0, 25045.0], [94.1, 25045.0], [94.2, 25064.0], [94.3, 25141.0], [94.4, 25481.0], [94.5, 25522.0], [94.6, 25522.0], [94.7, 25565.0], [94.8, 25625.0], [94.9, 26071.0], [95.0, 26311.0], [95.1, 26311.0], [95.2, 26395.0], [95.3, 26468.0], [95.4, 26497.0], [95.5, 26645.0], [95.6, 26645.0], [95.7, 26812.0], [95.8, 26945.0], [95.9, 26978.0], [96.0, 27150.0], [96.1, 27150.0], [96.2, 27506.0], [96.3, 27560.0], [96.4, 27928.0], [96.5, 27933.0], [96.6, 27933.0], [96.7, 27972.0], [96.8, 28075.0], [96.9, 28092.0], [97.0, 28124.0], [97.1, 28124.0], [97.2, 28199.0], [97.3, 28225.0], [97.4, 28342.0], [97.5, 28342.0], [97.6, 28342.0], [97.7, 28422.0], [97.8, 28619.0], [97.9, 28650.0], [98.0, 28685.0], [98.1, 28685.0], [98.2, 28764.0], [98.3, 28800.0], [98.4, 29043.0], [98.5, 29296.0], [98.6, 29296.0], [98.7, 29320.0], [98.8, 29397.0], [98.9, 29502.0], [99.0, 29665.0], [99.1, 29665.0], [99.2, 29765.0], [99.3, 30197.0], [99.4, 31289.0], [99.5, 31336.0], [99.6, 31336.0], [99.7, 31445.0], [99.8, 32294.0], [99.9, 53949.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[0.0, 245.0], [0.1, 245.0], [0.2, 245.0], [0.3, 246.0], [0.4, 246.0], [0.5, 246.0], [0.6, 246.0], [0.7, 247.0], [0.8, 247.0], [0.9, 247.0], [1.0, 247.0], [1.1, 247.0], [1.2, 247.0], [1.3, 247.0], [1.4, 248.0], [1.5, 248.0], [1.6, 248.0], [1.7, 248.0], [1.8, 248.0], [1.9, 249.0], [2.0, 249.0], [2.1, 249.0], [2.2, 249.0], [2.3, 249.0], [2.4, 249.0], [2.5, 249.0], [2.6, 249.0], [2.7, 249.0], [2.8, 249.0], [2.9, 249.0], [3.0, 249.0], [3.1, 249.0], [3.2, 250.0], [3.3, 250.0], [3.4, 250.0], [3.5, 250.0], [3.6, 250.0], [3.7, 250.0], [3.8, 250.0], [3.9, 250.0], [4.0, 250.0], [4.1, 250.0], [4.2, 250.0], [4.3, 250.0], [4.4, 250.0], [4.5, 250.0], [4.6, 250.0], [4.7, 250.0], [4.8, 250.0], [4.9, 250.0], [5.0, 251.0], [5.1, 251.0], [5.2, 251.0], [5.3, 251.0], [5.4, 251.0], [5.5, 251.0], [5.6, 251.0], [5.7, 251.0], [5.8, 251.0], [5.9, 251.0], [6.0, 251.0], [6.1, 251.0], [6.2, 251.0], [6.3, 251.0], [6.4, 251.0], [6.5, 251.0], [6.6, 251.0], [6.7, 251.0], [6.8, 251.0], [6.9, 251.0], [7.0, 251.0], [7.1, 251.0], [7.2, 251.0], [7.3, 251.0], [7.4, 251.0], [7.5, 251.0], [7.6, 251.0], [7.7, 252.0], [7.8, 252.0], [7.9, 252.0], [8.0, 252.0], [8.1, 252.0], [8.2, 252.0], [8.3, 252.0], [8.4, 252.0], [8.5, 252.0], [8.6, 252.0], [8.7, 252.0], [8.8, 252.0], [8.9, 252.0], [9.0, 252.0], [9.1, 252.0], [9.2, 252.0], [9.3, 252.0], [9.4, 252.0], [9.5, 252.0], [9.6, 252.0], [9.7, 252.0], [9.8, 252.0], [9.9, 252.0], [10.0, 252.0], [10.1, 252.0], [10.2, 252.0], [10.3, 252.0], [10.4, 252.0], [10.5, 252.0], [10.6, 252.0], [10.7, 252.0], [10.8, 252.0], [10.9, 252.0], [11.0, 252.0], [11.1, 252.0], [11.2, 252.0], [11.3, 253.0], [11.4, 253.0], [11.5, 253.0], [11.6, 253.0], [11.7, 253.0], [11.8, 253.0], [11.9, 253.0], [12.0, 253.0], [12.1, 253.0], [12.2, 253.0], [12.3, 253.0], [12.4, 253.0], [12.5, 253.0], [12.6, 253.0], [12.7, 253.0], [12.8, 253.0], [12.9, 253.0], [13.0, 253.0], [13.1, 253.0], [13.2, 253.0], [13.3, 253.0], [13.4, 253.0], [13.5, 253.0], [13.6, 253.0], [13.7, 253.0], [13.8, 253.0], [13.9, 253.0], [14.0, 253.0], [14.1, 253.0], [14.2, 253.0], [14.3, 253.0], [14.4, 253.0], [14.5, 253.0], [14.6, 253.0], [14.7, 254.0], [14.8, 254.0], [14.9, 254.0], [15.0, 254.0], [15.1, 254.0], [15.2, 254.0], [15.3, 254.0], [15.4, 254.0], [15.5, 254.0], [15.6, 254.0], [15.7, 254.0], [15.8, 254.0], [15.9, 254.0], [16.0, 254.0], [16.1, 254.0], [16.2, 254.0], [16.3, 254.0], [16.4, 254.0], [16.5, 254.0], [16.6, 254.0], [16.7, 254.0], [16.8, 254.0], [16.9, 254.0], [17.0, 254.0], [17.1, 254.0], [17.2, 254.0], [17.3, 255.0], [17.4, 255.0], [17.5, 255.0], [17.6, 255.0], [17.7, 255.0], [17.8, 255.0], [17.9, 255.0], [18.0, 255.0], [18.1, 255.0], [18.2, 255.0], [18.3, 255.0], [18.4, 255.0], [18.5, 255.0], [18.6, 255.0], [18.7, 255.0], [18.8, 255.0], [18.9, 255.0], [19.0, 255.0], [19.1, 255.0], [19.2, 255.0], [19.3, 255.0], [19.4, 255.0], [19.5, 255.0], [19.6, 255.0], [19.7, 255.0], [19.8, 255.0], [19.9, 255.0], [20.0, 255.0], [20.1, 255.0], [20.2, 255.0], [20.3, 255.0], [20.4, 255.0], [20.5, 255.0], [20.6, 255.0], [20.7, 255.0], [20.8, 255.0], [20.9, 255.0], [21.0, 256.0], [21.1, 256.0], [21.2, 256.0], [21.3, 256.0], [21.4, 256.0], [21.5, 256.0], [21.6, 256.0], [21.7, 256.0], [21.8, 256.0], [21.9, 256.0], [22.0, 256.0], [22.1, 256.0], [22.2, 256.0], [22.3, 256.0], [22.4, 256.0], [22.5, 256.0], [22.6, 256.0], [22.7, 256.0], [22.8, 256.0], [22.9, 256.0], [23.0, 256.0], [23.1, 256.0], [23.2, 256.0], [23.3, 256.0], [23.4, 256.0], [23.5, 256.0], [23.6, 256.0], [23.7, 256.0], [23.8, 257.0], [23.9, 257.0], [24.0, 257.0], [24.1, 257.0], [24.2, 257.0], [24.3, 257.0], [24.4, 257.0], [24.5, 257.0], [24.6, 257.0], [24.7, 257.0], [24.8, 257.0], [24.9, 257.0], [25.0, 257.0], [25.1, 257.0], [25.2, 257.0], [25.3, 257.0], [25.4, 258.0], [25.5, 258.0], [25.6, 258.0], [25.7, 258.0], [25.8, 258.0], [25.9, 258.0], [26.0, 258.0], [26.1, 258.0], [26.2, 258.0], [26.3, 258.0], [26.4, 258.0], [26.5, 258.0], [26.6, 258.0], [26.7, 258.0], [26.8, 258.0], [26.9, 258.0], [27.0, 258.0], [27.1, 258.0], [27.2, 258.0], [27.3, 258.0], [27.4, 258.0], [27.5, 259.0], [27.6, 259.0], [27.7, 259.0], [27.8, 259.0], [27.9, 259.0], [28.0, 259.0], [28.1, 259.0], [28.2, 259.0], [28.3, 259.0], [28.4, 259.0], [28.5, 259.0], [28.6, 259.0], [28.7, 259.0], [28.8, 259.0], [28.9, 259.0], [29.0, 259.0], [29.1, 259.0], [29.2, 259.0], [29.3, 259.0], [29.4, 259.0], [29.5, 259.0], [29.6, 259.0], [29.7, 259.0], [29.8, 259.0], [29.9, 259.0], [30.0, 260.0], [30.1, 260.0], [30.2, 260.0], [30.3, 260.0], [30.4, 260.0], [30.5, 260.0], [30.6, 260.0], [30.7, 260.0], [30.8, 260.0], [30.9, 260.0], [31.0, 260.0], [31.1, 260.0], [31.2, 260.0], [31.3, 260.0], [31.4, 261.0], [31.5, 261.0], [31.6, 261.0], [31.7, 261.0], [31.8, 261.0], [31.9, 261.0], [32.0, 261.0], [32.1, 261.0], [32.2, 261.0], [32.3, 261.0], [32.4, 262.0], [32.5, 262.0], [32.6, 262.0], [32.7, 262.0], [32.8, 262.0], [32.9, 262.0], [33.0, 262.0], [33.1, 262.0], [33.2, 262.0], [33.3, 263.0], [33.4, 263.0], [33.5, 263.0], [33.6, 263.0], [33.7, 264.0], [33.8, 264.0], [33.9, 264.0], [34.0, 264.0], [34.1, 264.0], [34.2, 264.0], [34.3, 264.0], [34.4, 264.0], [34.5, 264.0], [34.6, 264.0], [34.7, 264.0], [34.8, 265.0], [34.9, 265.0], [35.0, 265.0], [35.1, 265.0], [35.2, 265.0], [35.3, 265.0], [35.4, 266.0], [35.5, 266.0], [35.6, 266.0], [35.7, 266.0], [35.8, 266.0], [35.9, 266.0], [36.0, 267.0], [36.1, 267.0], [36.2, 267.0], [36.3, 267.0], [36.4, 267.0], [36.5, 267.0], [36.6, 267.0], [36.7, 267.0], [36.8, 268.0], [36.9, 268.0], [37.0, 268.0], [37.1, 268.0], [37.2, 268.0], [37.3, 268.0], [37.4, 268.0], [37.5, 268.0], [37.6, 268.0], [37.7, 268.0], [37.8, 269.0], [37.9, 269.0], [38.0, 269.0], [38.1, 269.0], [38.2, 269.0], [38.3, 269.0], [38.4, 269.0], [38.5, 270.0], [38.6, 270.0], [38.7, 270.0], [38.8, 270.0], [38.9, 270.0], [39.0, 270.0], [39.1, 270.0], [39.2, 270.0], [39.3, 270.0], [39.4, 270.0], [39.5, 270.0], [39.6, 270.0], [39.7, 270.0], [39.8, 270.0], [39.9, 270.0], [40.0, 270.0], [40.1, 270.0], [40.2, 270.0], [40.3, 270.0], [40.4, 271.0], [40.5, 271.0], [40.6, 271.0], [40.7, 271.0], [40.8, 271.0], [40.9, 271.0], [41.0, 271.0], [41.1, 271.0], [41.2, 271.0], [41.3, 271.0], [41.4, 271.0], [41.5, 271.0], [41.6, 271.0], [41.7, 271.0], [41.8, 271.0], [41.9, 271.0], [42.0, 271.0], [42.1, 271.0], [42.2, 271.0], [42.3, 272.0], [42.4, 272.0], [42.5, 272.0], [42.6, 272.0], [42.7, 272.0], [42.8, 272.0], [42.9, 272.0], [43.0, 272.0], [43.1, 272.0], [43.2, 272.0], [43.3, 272.0], [43.4, 272.0], [43.5, 272.0], [43.6, 272.0], [43.7, 272.0], [43.8, 272.0], [43.9, 273.0], [44.0, 273.0], [44.1, 273.0], [44.2, 273.0], [44.3, 273.0], [44.4, 273.0], [44.5, 273.0], [44.6, 273.0], [44.7, 273.0], [44.8, 273.0], [44.9, 273.0], [45.0, 273.0], [45.1, 273.0], [45.2, 273.0], [45.3, 273.0], [45.4, 273.0], [45.5, 273.0], [45.6, 273.0], [45.7, 273.0], [45.8, 273.0], [45.9, 273.0], [46.0, 274.0], [46.1, 274.0], [46.2, 274.0], [46.3, 274.0], [46.4, 274.0], [46.5, 274.0], [46.6, 274.0], [46.7, 274.0], [46.8, 274.0], [46.9, 274.0], [47.0, 274.0], [47.1, 274.0], [47.2, 274.0], [47.3, 274.0], [47.4, 274.0], [47.5, 274.0], [47.6, 274.0], [47.7, 274.0], [47.8, 274.0], [47.9, 274.0], [48.0, 275.0], [48.1, 275.0], [48.2, 275.0], [48.3, 275.0], [48.4, 275.0], [48.5, 275.0], [48.6, 275.0], [48.7, 275.0], [48.8, 275.0], [48.9, 275.0], [49.0, 275.0], [49.1, 275.0], [49.2, 275.0], [49.3, 275.0], [49.4, 275.0], [49.5, 275.0], [49.6, 275.0], [49.7, 275.0], [49.8, 275.0], [49.9, 275.0], [50.0, 275.0], [50.1, 275.0], [50.2, 275.0], [50.3, 275.0], [50.4, 275.0], [50.5, 275.0], [50.6, 275.0], [50.7, 276.0], [50.8, 276.0], [50.9, 276.0], [51.0, 276.0], [51.1, 276.0], [51.2, 276.0], [51.3, 276.0], [51.4, 276.0], [51.5, 276.0], [51.6, 276.0], [51.7, 276.0], [51.8, 276.0], [51.9, 276.0], [52.0, 276.0], [52.1, 276.0], [52.2, 276.0], [52.3, 276.0], [52.4, 276.0], [52.5, 276.0], [52.6, 276.0], [52.7, 276.0], [52.8, 276.0], [52.9, 276.0], [53.0, 276.0], [53.1, 276.0], [53.2, 276.0], [53.3, 276.0], [53.4, 276.0], [53.5, 276.0], [53.6, 276.0], [53.7, 276.0], [53.8, 276.0], [53.9, 276.0], [54.0, 276.0], [54.1, 276.0], [54.2, 276.0], [54.3, 276.0], [54.4, 276.0], [54.5, 276.0], [54.6, 276.0], [54.7, 276.0], [54.8, 276.0], [54.9, 276.0], [55.0, 277.0], [55.1, 277.0], [55.2, 277.0], [55.3, 277.0], [55.4, 277.0], [55.5, 277.0], [55.6, 277.0], [55.7, 277.0], [55.8, 277.0], [55.9, 277.0], [56.0, 277.0], [56.1, 277.0], [56.2, 277.0], [56.3, 277.0], [56.4, 277.0], [56.5, 277.0], [56.6, 277.0], [56.7, 277.0], [56.8, 277.0], [56.9, 277.0], [57.0, 277.0], [57.1, 277.0], [57.2, 277.0], [57.3, 277.0], [57.4, 277.0], [57.5, 277.0], [57.6, 277.0], [57.7, 277.0], [57.8, 277.0], [57.9, 277.0], [58.0, 277.0], [58.1, 277.0], [58.2, 277.0], [58.3, 277.0], [58.4, 277.0], [58.5, 277.0], [58.6, 277.0], [58.7, 277.0], [58.8, 277.0], [58.9, 277.0], [59.0, 277.0], [59.1, 277.0], [59.2, 277.0], [59.3, 277.0], [59.4, 277.0], [59.5, 277.0], [59.6, 277.0], [59.7, 277.0], [59.8, 277.0], [59.9, 277.0], [60.0, 278.0], [60.1, 278.0], [60.2, 278.0], [60.3, 278.0], [60.4, 278.0], [60.5, 278.0], [60.6, 278.0], [60.7, 278.0], [60.8, 278.0], [60.9, 278.0], [61.0, 278.0], [61.1, 278.0], [61.2, 278.0], [61.3, 278.0], [61.4, 278.0], [61.5, 278.0], [61.6, 278.0], [61.7, 278.0], [61.8, 278.0], [61.9, 278.0], [62.0, 278.0], [62.1, 278.0], [62.2, 278.0], [62.3, 278.0], [62.4, 278.0], [62.5, 278.0], [62.6, 278.0], [62.7, 278.0], [62.8, 278.0], [62.9, 278.0], [63.0, 278.0], [63.1, 278.0], [63.2, 278.0], [63.3, 278.0], [63.4, 278.0], [63.5, 278.0], [63.6, 278.0], [63.7, 278.0], [63.8, 278.0], [63.9, 279.0], [64.0, 279.0], [64.1, 279.0], [64.2, 279.0], [64.3, 279.0], [64.4, 279.0], [64.5, 279.0], [64.6, 279.0], [64.7, 279.0], [64.8, 279.0], [64.9, 279.0], [65.0, 279.0], [65.1, 279.0], [65.2, 279.0], [65.3, 279.0], [65.4, 279.0], [65.5, 279.0], [65.6, 279.0], [65.7, 279.0], [65.8, 279.0], [65.9, 279.0], [66.0, 279.0], [66.1, 279.0], [66.2, 279.0], [66.3, 279.0], [66.4, 279.0], [66.5, 279.0], [66.6, 279.0], [66.7, 279.0], [66.8, 279.0], [66.9, 279.0], [67.0, 279.0], [67.1, 279.0], [67.2, 279.0], [67.3, 279.0], [67.4, 279.0], [67.5, 279.0], [67.6, 279.0], [67.7, 280.0], [67.8, 280.0], [67.9, 280.0], [68.0, 280.0], [68.1, 280.0], [68.2, 280.0], [68.3, 280.0], [68.4, 280.0], [68.5, 280.0], [68.6, 280.0], [68.7, 280.0], [68.8, 280.0], [68.9, 280.0], [69.0, 280.0], [69.1, 280.0], [69.2, 280.0], [69.3, 280.0], [69.4, 280.0], [69.5, 280.0], [69.6, 280.0], [69.7, 280.0], [69.8, 280.0], [69.9, 280.0], [70.0, 280.0], [70.1, 280.0], [70.2, 280.0], [70.3, 280.0], [70.4, 280.0], [70.5, 280.0], [70.6, 280.0], [70.7, 280.0], [70.8, 280.0], [70.9, 280.0], [71.0, 280.0], [71.1, 280.0], [71.2, 281.0], [71.3, 281.0], [71.4, 281.0], [71.5, 281.0], [71.6, 281.0], [71.7, 281.0], [71.8, 281.0], [71.9, 281.0], [72.0, 281.0], [72.1, 281.0], [72.2, 281.0], [72.3, 281.0], [72.4, 281.0], [72.5, 281.0], [72.6, 281.0], [72.7, 281.0], [72.8, 281.0], [72.9, 281.0], [73.0, 281.0], [73.1, 281.0], [73.2, 281.0], [73.3, 281.0], [73.4, 281.0], [73.5, 281.0], [73.6, 281.0], [73.7, 281.0], [73.8, 281.0], [73.9, 281.0], [74.0, 282.0], [74.1, 282.0], [74.2, 282.0], [74.3, 282.0], [74.4, 282.0], [74.5, 282.0], [74.6, 282.0], [74.7, 282.0], [74.8, 282.0], [74.9, 282.0], [75.0, 282.0], [75.1, 282.0], [75.2, 282.0], [75.3, 282.0], [75.4, 282.0], [75.5, 282.0], [75.6, 282.0], [75.7, 282.0], [75.8, 282.0], [75.9, 282.0], [76.0, 282.0], [76.1, 282.0], [76.2, 282.0], [76.3, 282.0], [76.4, 282.0], [76.5, 283.0], [76.6, 283.0], [76.7, 283.0], [76.8, 283.0], [76.9, 283.0], [77.0, 283.0], [77.1, 283.0], [77.2, 283.0], [77.3, 283.0], [77.4, 283.0], [77.5, 283.0], [77.6, 283.0], [77.7, 283.0], [77.8, 283.0], [77.9, 283.0], [78.0, 283.0], [78.1, 283.0], [78.2, 283.0], [78.3, 283.0], [78.4, 283.0], [78.5, 283.0], [78.6, 283.0], [78.7, 283.0], [78.8, 283.0], [78.9, 283.0], [79.0, 283.0], [79.1, 283.0], [79.2, 284.0], [79.3, 284.0], [79.4, 284.0], [79.5, 284.0], [79.6, 284.0], [79.7, 284.0], [79.8, 284.0], [79.9, 284.0], [80.0, 284.0], [80.1, 284.0], [80.2, 284.0], [80.3, 284.0], [80.4, 284.0], [80.5, 284.0], [80.6, 284.0], [80.7, 284.0], [80.8, 285.0], [80.9, 285.0], [81.0, 285.0], [81.1, 285.0], [81.2, 285.0], [81.3, 285.0], [81.4, 285.0], [81.5, 285.0], [81.6, 285.0], [81.7, 285.0], [81.8, 285.0], [81.9, 285.0], [82.0, 285.0], [82.1, 285.0], [82.2, 285.0], [82.3, 286.0], [82.4, 286.0], [82.5, 286.0], [82.6, 286.0], [82.7, 286.0], [82.8, 286.0], [82.9, 286.0], [83.0, 286.0], [83.1, 286.0], [83.2, 286.0], [83.3, 286.0], [83.4, 287.0], [83.5, 287.0], [83.6, 287.0], [83.7, 287.0], [83.8, 287.0], [83.9, 287.0], [84.0, 287.0], [84.1, 287.0], [84.2, 287.0], [84.3, 287.0], [84.4, 287.0], [84.5, 288.0], [84.6, 288.0], [84.7, 288.0], [84.8, 288.0], [84.9, 288.0], [85.0, 288.0], [85.1, 288.0], [85.2, 288.0], [85.3, 288.0], [85.4, 288.0], [85.5, 288.0], [85.6, 288.0], [85.7, 288.0], [85.8, 289.0], [85.9, 289.0], [86.0, 290.0], [86.1, 290.0], [86.2, 290.0], [86.3, 291.0], [86.4, 291.0], [86.5, 294.0], [86.6, 294.0], [86.7, 294.0], [86.8, 296.0], [86.9, 298.0], [87.0, 299.0], [87.1, 299.0], [87.2, 303.0], [87.3, 304.0], [87.4, 305.0], [87.5, 313.0], [87.6, 313.0], [87.7, 381.0], [87.8, 398.0], [87.9, 508.0], [88.0, 539.0], [88.1, 539.0], [88.2, 564.0], [88.3, 773.0], [88.4, 776.0], [88.5, 776.0], [88.6, 776.0], [88.7, 783.0], [88.8, 787.0], [88.9, 787.0], [89.0, 796.0], [89.1, 796.0], [89.2, 796.0], [89.3, 797.0], [89.4, 799.0], [89.5, 800.0], [89.6, 800.0], [89.7, 801.0], [89.8, 801.0], [89.9, 802.0], [90.0, 803.0], [90.1, 803.0], [90.2, 804.0], [90.3, 805.0], [90.4, 807.0], [90.5, 810.0], [90.6, 810.0], [90.7, 813.0], [90.8, 814.0], [90.9, 815.0], [91.0, 816.0], [91.1, 816.0], [91.2, 817.0], [91.3, 819.0], [91.4, 820.0], [91.5, 823.0], [91.6, 823.0], [91.7, 826.0], [91.8, 827.0], [91.9, 827.0], [92.0, 829.0], [92.1, 829.0], [92.2, 832.0], [92.3, 837.0], [92.4, 843.0], [92.5, 846.0], [92.6, 846.0], [92.7, 847.0], [92.8, 848.0], [92.9, 849.0], [93.0, 849.0], [93.1, 849.0], [93.2, 850.0], [93.3, 851.0], [93.4, 854.0], [93.5, 855.0], [93.6, 855.0], [93.7, 859.0], [93.8, 870.0], [93.9, 878.0], [94.0, 886.0], [94.1, 886.0], [94.2, 892.0], [94.3, 898.0], [94.4, 902.0], [94.5, 904.0], [94.6, 904.0], [94.7, 905.0], [94.8, 923.0], [94.9, 934.0], [95.0, 1016.0], [95.1, 1016.0], [95.2, 1042.0], [95.3, 1044.0], [95.4, 1046.0], [95.5, 1048.0], [95.6, 1048.0], [95.7, 1050.0], [95.8, 1054.0], [95.9, 1055.0], [96.0, 1056.0], [96.1, 1056.0], [96.2, 1057.0], [96.3, 1057.0], [96.4, 1062.0], [96.5, 1062.0], [96.6, 1062.0], [96.7, 1063.0], [96.8, 1070.0], [96.9, 1075.0], [97.0, 1078.0], [97.1, 1078.0], [97.2, 1078.0], [97.3, 1083.0], [97.4, 1086.0], [97.5, 1091.0], [97.6, 1091.0], [97.7, 1111.0], [97.8, 1135.0], [97.9, 1356.0], [98.0, 1366.0], [98.1, 1366.0], [98.2, 1382.0], [98.3, 1402.0], [98.4, 1407.0], [98.5, 1513.0], [98.6, 1513.0], [98.7, 1560.0], [98.8, 1879.0], [98.9, 1918.0], [99.0, 2275.0], [99.1, 2275.0], [99.2, 2691.0], [99.3, 3703.0], [99.4, 4436.0], [99.5, 5097.0], [99.6, 5097.0], [99.7, 5152.0], [99.8, 10648.0], [99.9, 18819.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 697.0, "series": [{"data": [[33100.0, 1.0], [57300.0, 1.0], [1000.0, 3.0], [1100.0, 48.0], [1200.0, 30.0], [1300.0, 32.0], [1400.0, 16.0], [1500.0, 7.0], [1600.0, 4.0], [1700.0, 14.0], [1800.0, 15.0], [1900.0, 21.0], [2000.0, 22.0], [2100.0, 25.0], [2200.0, 23.0], [2300.0, 12.0], [2400.0, 3.0], [2500.0, 12.0], [2600.0, 7.0], [2800.0, 22.0], [2700.0, 12.0], [2900.0, 13.0], [3000.0, 8.0], [3100.0, 16.0], [3200.0, 12.0], [3300.0, 11.0], [3400.0, 4.0], [3500.0, 8.0], [3700.0, 16.0], [3600.0, 7.0], [3800.0, 8.0], [3900.0, 12.0], [4000.0, 1.0], [4200.0, 6.0], [4100.0, 5.0], [4300.0, 4.0], [4500.0, 14.0], [4600.0, 11.0], [4400.0, 7.0], [4700.0, 10.0], [4800.0, 10.0], [5100.0, 10.0], [5000.0, 4.0], [4900.0, 5.0], [5300.0, 6.0], [5200.0, 7.0], [5500.0, 7.0], [5600.0, 9.0], [5400.0, 5.0], [5700.0, 2.0], [5800.0, 8.0], [6000.0, 4.0], [5900.0, 8.0], [6100.0, 7.0], [6300.0, 5.0], [6200.0, 2.0], [6500.0, 2.0], [6400.0, 2.0], [6700.0, 4.0], [6900.0, 3.0], [6800.0, 1.0], [7000.0, 3.0], [7100.0, 3.0], [7200.0, 3.0], [7300.0, 2.0], [7600.0, 1.0], [7500.0, 2.0], [7700.0, 3.0], [7800.0, 2.0], [8100.0, 4.0], [8000.0, 5.0], [8700.0, 8.0], [8200.0, 3.0], [8400.0, 3.0], [8600.0, 3.0], [8500.0, 1.0], [8300.0, 1.0], [9000.0, 5.0], [8900.0, 3.0], [9200.0, 2.0], [8800.0, 4.0], [9100.0, 1.0], [9600.0, 2.0], [9400.0, 2.0], [9500.0, 3.0], [9300.0, 4.0], [9700.0, 2.0], [9900.0, 2.0], [10200.0, 3.0], [10000.0, 3.0], [9800.0, 1.0], [10100.0, 2.0], [10600.0, 2.0], [10500.0, 2.0], [10700.0, 1.0], [10400.0, 1.0], [10300.0, 1.0], [10800.0, 1.0], [11300.0, 1.0], [11700.0, 2.0], [11600.0, 1.0], [11800.0, 4.0], [11900.0, 1.0], [12000.0, 1.0], [12300.0, 1.0], [12400.0, 1.0], [13200.0, 3.0], [13300.0, 1.0], [13000.0, 1.0], [13700.0, 2.0], [13800.0, 1.0], [14000.0, 1.0], [13900.0, 1.0], [14800.0, 1.0], [14600.0, 1.0], [15000.0, 2.0], [15300.0, 1.0], [15400.0, 2.0], [15500.0, 3.0], [15800.0, 2.0], [15700.0, 3.0], [15600.0, 1.0], [15900.0, 4.0], [16100.0, 2.0], [16200.0, 2.0], [16000.0, 3.0], [16300.0, 2.0], [16700.0, 2.0], [16500.0, 1.0], [17400.0, 2.0], [17100.0, 1.0], [17300.0, 1.0], [16600.0, 1.0], [18000.0, 2.0], [17700.0, 3.0], [17600.0, 1.0], [17500.0, 1.0], [19200.0, 1.0], [20400.0, 1.0], [25200.0, 1.0], [26000.0, 1.0], [25700.0, 1.0], [28000.0, 1.0], [28200.0, 1.0], [28700.0, 1.0], [29200.0, 2.0], [29400.0, 1.0], [29300.0, 1.0], [29000.0, 1.0], [28900.0, 1.0], [29800.0, 1.0], [30300.0, 1.0], [30400.0, 1.0], [29900.0, 2.0], [29700.0, 1.0], [31600.0, 1.0], [31100.0, 1.0], [30800.0, 1.0], [31800.0, 2.0], [33400.0, 1.0]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[500.0, 2.0], [1400.0, 1.0], [1600.0, 1.0], [1900.0, 2.0], [2000.0, 4.0], [2300.0, 2.0], [2200.0, 3.0], [2400.0, 2.0], [2500.0, 5.0], [2600.0, 3.0], [2700.0, 6.0], [2800.0, 3.0], [2900.0, 2.0], [3000.0, 6.0], [3100.0, 4.0], [3200.0, 7.0], [3300.0, 3.0], [3400.0, 3.0], [3700.0, 3.0], [3600.0, 1.0], [3800.0, 4.0], [3900.0, 9.0], [4000.0, 10.0], [4300.0, 14.0], [4200.0, 9.0], [4100.0, 5.0], [4400.0, 6.0], [4500.0, 7.0], [4600.0, 5.0], [4800.0, 5.0], [4700.0, 5.0], [5000.0, 6.0], [4900.0, 4.0], [5100.0, 4.0], [5200.0, 8.0], [5300.0, 4.0], [5500.0, 6.0], [5600.0, 4.0], [5400.0, 2.0], [5800.0, 4.0], [5700.0, 2.0], [6100.0, 7.0], [5900.0, 6.0], [6000.0, 3.0], [6200.0, 4.0], [6300.0, 6.0], [6600.0, 2.0], [6400.0, 4.0], [6500.0, 4.0], [6900.0, 7.0], [6800.0, 6.0], [6700.0, 5.0], [7000.0, 3.0], [7100.0, 9.0], [7400.0, 5.0], [7200.0, 8.0], [7300.0, 7.0], [7500.0, 3.0], [7600.0, 6.0], [7700.0, 5.0], [7800.0, 6.0], [7900.0, 6.0], [8000.0, 3.0], [8100.0, 8.0], [8300.0, 4.0], [8400.0, 9.0], [8200.0, 7.0], [8600.0, 8.0], [8500.0, 10.0], [8700.0, 5.0], [9100.0, 8.0], [9200.0, 7.0], [8800.0, 4.0], [8900.0, 4.0], [9000.0, 4.0], [9400.0, 3.0], [9500.0, 6.0], [9600.0, 11.0], [9700.0, 4.0], [9300.0, 3.0], [9900.0, 2.0], [10000.0, 13.0], [10100.0, 4.0], [9800.0, 5.0], [10200.0, 3.0], [10400.0, 2.0], [10300.0, 5.0], [10700.0, 6.0], [10600.0, 2.0], [10500.0, 6.0], [11200.0, 4.0], [10900.0, 8.0], [11000.0, 3.0], [11100.0, 2.0], [10800.0, 3.0], [11600.0, 5.0], [11400.0, 4.0], [11700.0, 4.0], [11300.0, 5.0], [11500.0, 8.0], [12200.0, 5.0], [12100.0, 6.0], [11900.0, 3.0], [12000.0, 7.0], [11800.0, 3.0], [12400.0, 2.0], [12600.0, 4.0], [12500.0, 5.0], [12300.0, 6.0], [12700.0, 2.0], [12900.0, 5.0], [13200.0, 3.0], [13000.0, 7.0], [13300.0, 6.0], [13100.0, 3.0], [12800.0, 2.0], [13400.0, 5.0], [13800.0, 3.0], [13500.0, 1.0], [13700.0, 2.0], [14300.0, 4.0], [14200.0, 5.0], [14000.0, 3.0], [13900.0, 3.0], [14700.0, 5.0], [14500.0, 2.0], [14400.0, 3.0], [14800.0, 3.0], [14600.0, 2.0], [15300.0, 5.0], [14900.0, 3.0], [15100.0, 1.0], [15200.0, 1.0], [15000.0, 1.0], [15600.0, 2.0], [15500.0, 3.0], [15400.0, 1.0], [15700.0, 3.0], [15800.0, 1.0], [16200.0, 1.0], [16100.0, 1.0], [15900.0, 4.0], [16000.0, 2.0], [16300.0, 2.0], [17200.0, 2.0], [17400.0, 2.0], [17000.0, 4.0], [16600.0, 2.0], [16400.0, 3.0], [16800.0, 1.0], [18400.0, 2.0], [18200.0, 2.0], [17800.0, 3.0], [19000.0, 2.0], [18600.0, 4.0], [19400.0, 1.0], [18800.0, 1.0], [20400.0, 2.0], [19600.0, 1.0], [20000.0, 1.0], [20800.0, 1.0], [22200.0, 1.0], [22600.0, 2.0], [23200.0, 1.0], [23400.0, 1.0], [23600.0, 2.0], [24400.0, 3.0], [25000.0, 3.0], [25400.0, 1.0], [24800.0, 1.0], [25600.0, 1.0], [26400.0, 2.0], [26000.0, 1.0], [26600.0, 1.0], [26800.0, 1.0], [28000.0, 2.0], [28400.0, 1.0], [28600.0, 3.0], [28200.0, 1.0], [29000.0, 1.0], [28800.0, 1.0], [29600.0, 1.0], [29200.0, 1.0], [31200.0, 1.0], [31400.0, 1.0], [32200.0, 1.0], [53900.0, 1.0], [16900.0, 3.0], [17300.0, 2.0], [17100.0, 1.0], [16700.0, 4.0], [16500.0, 5.0], [17700.0, 1.0], [17900.0, 2.0], [18300.0, 4.0], [18100.0, 1.0], [17500.0, 1.0], [18900.0, 4.0], [19100.0, 4.0], [18700.0, 3.0], [19700.0, 3.0], [20300.0, 2.0], [19500.0, 1.0], [19900.0, 1.0], [21300.0, 2.0], [20500.0, 2.0], [22100.0, 1.0], [22500.0, 3.0], [22900.0, 1.0], [23100.0, 3.0], [22700.0, 1.0], [23300.0, 2.0], [23700.0, 2.0], [23900.0, 2.0], [24500.0, 1.0], [24700.0, 1.0], [24900.0, 2.0], [25500.0, 2.0], [25100.0, 1.0], [26300.0, 2.0], [26900.0, 2.0], [27100.0, 1.0], [27500.0, 2.0], [27900.0, 3.0], [28100.0, 2.0], [28300.0, 2.0], [29300.0, 2.0], [28700.0, 1.0], [29500.0, 1.0], [29700.0, 1.0], [30100.0, 1.0], [31300.0, 1.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[2200.0, 1.0], [2600.0, 1.0], [10600.0, 1.0], [700.0, 10.0], [200.0, 697.0], [800.0, 39.0], [900.0, 5.0], [3700.0, 1.0], [1000.0, 21.0], [1100.0, 2.0], [4400.0, 1.0], [300.0, 6.0], [18800.0, 1.0], [5100.0, 1.0], [5000.0, 1.0], [1300.0, 3.0], [1400.0, 2.0], [1500.0, 2.0], [1800.0, 1.0], [1900.0, 1.0], [500.0, 3.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 57300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 217.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1480.0, "series": [{"data": [[0.0, 703.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 217.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1480.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 12.191489361702128, "minX": 1.70943576E12, "maxY": 440.4632384190394, "series": [{"data": [[1.70943582E12, 12.191489361702128], [1.70943576E12, 440.4632384190394]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70943582E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 245.0, "minX": 1.0, "maxY": 57327.0, "series": [{"data": [[22.0, 30639.0], [23.0, 31801.0], [26.0, 31659.0], [27.0, 29500.5], [29.0, 33259.0], [30.0, 25770.0], [34.0, 27993.5], [39.0, 27873.5], [38.0, 31802.0], [41.0, 28252.0], [43.0, 28946.0], [44.0, 29682.5], [46.0, 29859.0], [57.0, 29412.0], [56.0, 29351.0], [62.0, 29222.0], [66.0, 28717.0], [74.0, 28020.0], [82.0, 20405.0], [167.0, 1943.185185185185], [166.0, 1710.6363636363637], [170.0, 1799.8823529411766], [168.0, 2136.5], [169.0, 2024.6666666666667], [171.0, 1793.2727272727273], [172.0, 1873.3333333333333], [183.0, 4187.857142857143], [176.0, 1781.3333333333333], [184.0, 2287.0], [188.0, 2465.4], [199.0, 19279.0], [210.0, 17694.0], [231.0, 1081.5], [233.0, 9428.0], [234.0, 1107.0], [235.0, 1121.0], [236.0, 16648.0], [246.0, 1277.5], [247.0, 1306.6000000000001], [248.0, 1266.0], [251.0, 1312.1666666666665], [252.0, 1291.75], [253.0, 1302.5714285714287], [254.0, 2527.333333333333], [255.0, 1352.5], [262.0, 6689.666666666667], [263.0, 3041.0], [268.0, 1199.0], [271.0, 1270.0], [275.0, 1139.0], [276.0, 1185.0], [280.0, 1209.0], [282.0, 1230.0], [278.0, 15635.0], [272.0, 15335.0], [295.0, 1168.0], [296.0, 15057.0], [294.0, 15848.0], [305.0, 1140.0], [315.0, 2185.0], [316.0, 1943.0], [317.0, 2175.0], [308.0, 15765.0], [334.0, 1914.0], [344.0, 1160.0], [345.0, 9093.5], [348.0, 2114.0], [350.0, 2099.0], [341.0, 18041.0], [355.0, 1714.0], [354.0, 2122.0], [361.0, 2011.0], [364.0, 1129.0], [366.0, 1121.0], [365.0, 15996.5], [357.0, 15704.0], [356.0, 17795.0], [353.0, 15956.0], [368.0, 1129.0], [371.0, 1139.0], [374.0, 1922.0], [375.0, 1991.0], [377.0, 2909.0], [386.0, 7877.5], [388.0, 1118.0], [391.0, 2177.0], [393.0, 1137.0], [394.0, 1116.0], [399.0, 13276.0], [387.0, 16033.0], [400.0, 1400.0], [401.0, 1925.0], [403.0, 2308.0], [406.0, 1134.0], [412.0, 2399.0], [402.0, 16124.5], [419.0, 1145.0], [420.0, 2964.0], [425.0, 1127.0], [428.0, 2856.0], [431.0, 2858.0], [422.0, 14484.5], [433.0, 1891.0], [435.0, 1871.0], [436.0, 2452.0], [438.0, 2793.0], [441.0, 2015.0], [447.0, 2881.0], [445.0, 16342.0], [448.0, 2226.0], [452.0, 3023.0], [451.0, 5856.0], [450.0, 3014.0], [453.0, 1643.0], [456.0, 2302.0], [462.0, 2811.5], [458.0, 12097.0], [465.0, 2611.0], [467.0, 3184.0], [466.0, 17125.0], [468.0, 3089.0], [470.0, 3249.0], [471.0, 2067.5], [474.0, 4272.0], [477.0, 1913.0], [479.0, 1163.0], [478.0, 15651.0], [481.0, 2279.0], [482.0, 1487.0], [486.0, 9091.0], [487.0, 8845.5], [488.0, 3251.0], [491.0, 1999.0], [492.0, 1815.0], [490.0, 15501.0], [510.0, 3899.0], [498.0, 1896.0], [496.0, 1141.0], [502.0, 11987.0], [499.0, 2867.0], [509.0, 16051.0], [500.0, 3302.0], [501.0, 1724.5], [505.0, 5545.0], [506.0, 9411.5], [511.0, 3369.5], [537.0, 2816.0], [515.0, 9443.5], [517.0, 2105.0], [516.0, 18067.0], [519.0, 15485.0], [523.0, 4595.0], [525.0, 3352.0], [526.0, 16209.0], [513.0, 15960.0], [528.0, 3744.0], [529.0, 2589.0], [531.0, 3519.0], [535.0, 2756.0], [539.0, 2624.0], [540.0, 2251.6], [543.0, 3518.0], [557.0, 3118.25], [546.0, 3648.0], [549.0, 3019.0], [550.0, 3047.0], [551.0, 2981.0], [564.0, 2007.0], [569.0, 2798.0], [572.0, 11880.0], [573.0, 7074.75], [565.0, 4834.0], [567.0, 4844.0], [566.0, 10727.0], [552.0, 8468.5], [553.0, 1148.0], [556.0, 1914.0], [558.0, 7489.666666666666], [559.0, 9436.666666666666], [601.0, 3968.0], [581.0, 4647.0], [578.0, 1929.0], [576.0, 13315.0], [580.0, 16119.0], [591.0, 9580.0], [590.0, 16750.0], [589.0, 9707.0], [582.0, 4269.0], [585.0, 2565.0], [584.0, 15959.0], [586.0, 11264.666666666666], [588.0, 5116.0], [595.0, 4884.0], [598.0, 4923.666666666666], [599.0, 4738.0], [602.0, 3292.0], [603.0, 3906.0], [604.0, 3788.0], [605.0, 8321.0], [606.0, 3295.0], [607.0, 5281.0], [594.0, 8790.0], [592.0, 12195.0], [611.0, 2105.0], [609.0, 8289.5], [608.0, 8538.0], [613.0, 3171.0], [612.0, 7817.0], [614.0, 11430.0], [632.0, 10033.0], [615.0, 8788.5], [633.0, 4081.0], [639.0, 4327.5], [637.0, 9850.0], [636.0, 10264.0], [635.0, 7364.0], [616.0, 2982.5], [617.0, 9489.5], [619.0, 2266.0], [622.0, 6260.5], [623.0, 5398.5], [624.0, 7304.5], [625.0, 1134.0], [626.0, 7715.0], [627.0, 4167.333333333333], [628.0, 2641.0], [630.0, 4508.0], [631.0, 9082.333333333334], [643.0, 6003.0], [654.0, 4878.375], [640.0, 5869.0], [641.0, 5497.5], [642.0, 1134.0], [656.0, 4727.5], [657.0, 9240.0], [669.0, 3905.0], [671.0, 9365.0], [666.0, 3849.5], [665.0, 10850.0], [646.0, 8037.0], [645.0, 8300.0], [644.0, 6701.0], [667.0, 6450.666666666667], [660.0, 5258.2], [662.0, 3085.0], [663.0, 6520.5], [648.0, 6358.0], [649.0, 4496.0], [652.0, 6888.5], [651.0, 8896.0], [650.0, 11858.0], [653.0, 10031.0], [655.0, 3398.5], [676.0, 4413.5], [673.0, 4557.5], [672.0, 2845.0], [687.0, 6866.0], [686.0, 6924.5], [675.0, 5233.0], [674.0, 5393.0], [677.0, 3484.25], [679.0, 6213.0], [696.0, 3107.0], [697.0, 4282.0], [698.0, 3151.5], [699.0, 6392.0], [700.0, 4685.2], [702.0, 4783.0], [701.0, 8002.624999999999], [703.0, 4233.0], [682.0, 3582.0], [681.0, 7212.875000000001], [680.0, 7521.666666666667], [683.0, 6048.8], [684.0, 4857.166666666666], [688.0, 4804.0], [689.0, 6258.875000000001], [690.0, 3309.0], [691.0, 4376.5], [692.0, 6367.0], [694.0, 5278.5], [693.0, 5690.2], [695.0, 7201.5], [729.0, 4315.714285714285], [717.0, 4322.333333333333], [706.0, 4190.5], [705.0, 4592.25], [704.0, 4861.4], [708.0, 4427.75], [707.0, 5191.833333333334], [710.0, 6505.25], [709.0, 5030.555555555556], [728.0, 3919.23076923077], [711.0, 3701.0], [730.0, 3474.75], [731.0, 3019.166666666667], [732.0, 4083.0], [733.0, 4471.333333333333], [734.0, 4317.0], [735.0, 4313.333333333333], [713.0, 5631.666666666667], [712.0, 6836.5], [714.0, 3274.0], [715.0, 3753.0], [718.0, 4680.0], [719.0, 5904.0], [720.0, 5560.5], [721.0, 4756.999999999999], [722.0, 4664.0], [723.0, 4917.538461538462], [724.0, 3348.6666666666665], [725.0, 4898.0], [726.0, 4033.0], [727.0, 5018.125], [742.0, 3656.0], [743.0, 3142.0], [741.0, 7205.0], [738.0, 4292.5], [736.0, 4093.6], [1.0, 57327.0]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[514.5537499999999, 5689.3825]], "isOverall": false, "label": "auth-Aggregated", "isController": false}, {"data": [[2.0, 53949.0], [3.0, 4811.0], [4.0, 4250.0], [6.0, 4684.0], [8.0, 4621.0], [11.0, 4187.0], [12.0, 3179.0], [13.0, 31445.0], [14.0, 4472.0], [18.0, 4256.0], [19.0, 17286.5], [22.0, 20397.0], [23.0, 4289.0], [26.0, 12480.333333333332], [28.0, 2806.0], [29.0, 3375.0], [31.0, 16165.5], [34.0, 20418.333333333332], [39.0, 28089.5], [38.0, 29691.666666666668], [43.0, 8764.25], [46.0, 24650.666666666668], [49.0, 29296.0], [50.0, 29715.0], [53.0, 28225.0], [57.0, 25912.5], [56.0, 28310.666666666668], [61.0, 4081.0], [67.0, 28342.0], [66.0, 4846.0], [65.0, 22587.5], [70.0, 12318.0], [69.0, 4301.0], [75.0, 13982.0], [74.0, 23031.8], [72.0, 16346.0], [83.0, 16491.0], [82.0, 4375.0], [81.0, 21336.333333333332], [80.0, 21870.5], [90.0, 18351.0], [89.0, 27150.0], [94.0, 11472.0], [93.0, 16503.5], [92.0, 26978.0], [98.0, 16599.0], [97.0, 14930.5], [103.0, 18657.0], [100.0, 15740.0], [107.0, 18799.0], [106.0, 22639.5], [105.0, 15027.0], [104.0, 5012.0], [110.0, 16770.0], [109.0, 23600.5], [115.0, 22567.0], [114.0, 14879.0], [118.0, 11932.0], [123.0, 13317.25], [121.0, 4581.0], [127.0, 18749.0], [126.0, 17395.0], [125.0, 18376.0], [135.0, 14740.0], [134.0, 21517.0], [133.0, 16911.0], [129.0, 22534.0], [128.0, 17255.0], [142.0, 7278.0], [140.0, 21533.666666666668], [137.0, 16443.0], [136.0, 16430.5], [149.0, 4018.0], [147.0, 14613.5], [144.0, 18178.5], [159.0, 16589.0], [158.0, 5853.0], [157.0, 12158.833333333334], [156.0, 13672.5], [153.0, 7007.0], [152.0, 16599.0], [163.0, 14818.0], [161.0, 15354.5], [174.0, 21596.0], [171.0, 10547.0], [170.0, 4580.0], [183.0, 4375.0], [182.0, 12214.0], [181.0, 7821.0], [180.0, 6024.5], [190.0, 12200.0], [189.0, 5945.0], [187.0, 20462.333333333332], [185.0, 21142.5], [184.0, 15798.0], [199.0, 20195.5], [198.0, 16897.0], [196.0, 20442.0], [195.0, 11909.0], [206.0, 13022.0], [204.0, 8896.5], [202.0, 17549.0], [201.0, 16036.0], [200.0, 15267.0], [210.0, 9668.0], [208.0, 19013.0], [220.0, 19661.0], [218.0, 16535.0], [216.0, 12881.0], [231.0, 11395.0], [230.0, 3157.0], [228.0, 13734.4], [225.0, 5292.0], [224.0, 15365.0], [239.0, 20628.333333333332], [237.0, 8612.0], [236.0, 15902.0], [235.0, 8662.0], [234.0, 13824.5], [233.0, 11894.8], [232.0, 7133.0], [246.0, 14386.0], [245.0, 2673.0], [254.0, 12624.777777777777], [255.0, 22617.0], [253.0, 12187.0], [252.0, 13266.0], [251.0, 11509.0], [249.0, 23385.0], [248.0, 18246.0], [268.0, 16083.0], [271.0, 12308.0], [270.0, 14051.0], [269.0, 16443.0], [263.0, 20972.5], [261.0, 13481.0], [259.0, 12045.0], [258.0, 11719.0], [256.0, 2677.0], [287.0, 15717.0], [283.0, 16669.0], [281.0, 16580.0], [278.0, 7756.0], [277.0, 6729.0], [272.0, 13418.0], [302.0, 11769.0], [303.0, 14177.0], [301.0, 10904.0], [300.0, 11505.0], [298.0, 15276.0], [297.0, 9466.5], [296.0, 12463.333333333334], [294.0, 9203.25], [291.0, 8673.0], [288.0, 14674.0], [318.0, 13562.25], [317.0, 14639.0], [315.0, 19590.0], [313.0, 8868.5], [311.0, 16362.0], [308.0, 14425.0], [305.0, 8615.5], [328.0, 1484.0], [335.0, 11322.6], [332.0, 11925.0], [327.0, 13177.25], [325.0, 15050.0], [322.0, 6939.0], [347.0, 13705.0], [346.0, 6501.0], [345.0, 9722.0], [343.0, 12854.333333333334], [340.0, 17170.0], [365.0, 7558.0], [366.0, 10959.0], [364.0, 3005.0], [362.0, 11543.0], [361.0, 11027.666666666666], [360.0, 14625.0], [359.0, 8135.0], [356.0, 14968.0], [354.0, 10071.0], [353.0, 11079.75], [383.0, 14045.666666666666], [382.0, 14467.0], [378.0, 7095.5], [376.0, 16138.0], [371.0, 10634.0], [370.0, 8545.0], [369.0, 12319.0], [394.0, 18703.0], [393.0, 11116.25], [391.0, 8728.4], [390.0, 13739.5], [389.0, 10707.0], [388.0, 14951.0], [387.0, 9902.5], [401.0, 6358.5], [412.0, 8822.333333333334], [414.0, 13443.666666666666], [406.0, 9289.0], [403.0, 19077.0], [402.0, 13721.0], [400.0, 11886.75], [416.0, 2560.0], [431.0, 7394.5], [430.0, 8575.666666666666], [429.0, 4833.5], [428.0, 9842.0], [426.0, 12935.0], [422.0, 10873.0], [420.0, 11940.0], [433.0, 2793.0], [432.0, 8648.75], [442.0, 2934.0], [445.0, 7452.0], [444.0, 8813.0], [435.0, 8640.0], [441.0, 7692.0], [440.0, 8278.0], [437.0, 9927.6], [436.0, 9640.0], [461.0, 12773.0], [452.0, 3081.0], [453.0, 5910.5], [459.0, 6849.0], [458.0, 11536.0], [457.0, 8455.0], [455.0, 9370.5], [454.0, 18981.0], [451.0, 11531.0], [448.0, 12740.0], [477.0, 7670.5], [468.0, 3278.0], [470.0, 2501.5], [472.0, 2511.0], [476.0, 7745.0], [478.0, 10375.666666666666], [474.0, 10581.0], [473.0, 7334.0], [464.0, 9502.5], [492.0, 3339.0], [490.0, 7093.0], [494.0, 15135.5], [493.0, 11974.5], [487.0, 13980.0], [486.0, 9277.0], [485.0, 10317.0], [484.0, 14860.5], [483.0, 8429.333333333334], [482.0, 8021.0], [509.0, 10038.0], [508.0, 6949.5], [496.0, 9214.0], [511.0, 4088.0], [507.0, 12954.666666666666], [506.0, 7933.0], [505.0, 9198.5], [503.0, 12270.666666666666], [502.0, 14037.0], [500.0, 7770.0], [542.0, 11523.333333333334], [521.0, 3982.0], [523.0, 9627.0], [522.0, 10439.5], [527.0, 5955.0], [528.0, 6064.666666666667], [534.0, 6025.0], [531.0, 9177.666666666666], [530.0, 9822.5], [529.0, 13563.0], [535.0, 14798.0], [539.0, 4249.5], [518.0, 7666.0], [516.0, 11500.4], [515.0, 7798.0], [514.0, 8158.5], [513.0, 8770.0], [543.0, 8318.5], [541.0, 10613.0], [540.0, 8202.0], [575.0, 9951.5], [559.0, 9141.5], [544.0, 8886.0], [550.0, 9612.0], [548.0, 9341.0], [558.0, 11577.0], [557.0, 10042.0], [556.0, 10754.0], [554.0, 10092.0], [553.0, 8160.0], [560.0, 4742.0], [561.0, 7453.0], [569.0, 3157.0], [573.0, 10938.0], [572.0, 9874.0], [566.0, 6966.0], [565.0, 9586.0], [564.0, 10855.5], [562.0, 13395.0], [606.0, 6913.0], [583.0, 4713.0], [582.0, 10785.0], [581.0, 5990.0], [580.0, 11361.0], [578.0, 15668.0], [591.0, 8660.0], [590.0, 12053.0], [601.0, 8413.0], [600.0, 10243.5], [588.0, 5236.0], [586.0, 9156.0], [584.0, 5607.0], [589.0, 9164.8], [592.0, 8151.0], [593.0, 5258.0], [596.0, 12562.0], [595.0, 12454.333333333334], [598.0, 7864.0], [597.0, 8420.0], [607.0, 13002.0], [604.0, 13717.5], [602.0, 11072.5], [612.0, 5556.0], [609.0, 6269.666666666667], [608.0, 6848.666666666667], [611.0, 5028.0], [610.0, 5514.0], [623.0, 5259.0], [619.0, 6117.0], [618.0, 8566.0], [617.0, 10428.0], [616.0, 4543.0], [630.0, 7902.6], [628.0, 10114.0], [627.0, 9276.25], [624.0, 11035.0], [639.0, 8995.0], [632.0, 7224.0], [615.0, 12439.0], [614.0, 9187.5], [613.0, 6032.0], [631.0, 6864.666666666667], [668.0, 8557.5], [654.0, 4768.5], [653.0, 8545.0], [655.0, 6766.0], [657.0, 7736.0], [656.0, 5016.0], [661.0, 5808.0], [658.0, 9491.5], [665.0, 7206.666666666667], [671.0, 5593.333333333333], [670.0, 8180.333333333333], [667.0, 12687.0], [664.0, 8153.0], [646.0, 12930.0], [645.0, 7766.777777777777], [644.0, 11374.0], [696.0, 4904.0], [672.0, 1956.0], [678.0, 9194.5], [677.0, 6505.0], [675.0, 12406.0], [673.0, 2487.0], [679.0, 3291.0], [685.0, 6670.0], [684.0, 8166.0], [682.0, 5295.0], [681.0, 5679.666666666667], [680.0, 5902.0], [687.0, 9964.0], [700.0, 5645.5], [703.0, 5607.5], [690.0, 7032.0], [689.0, 7056.5], [702.0, 10014.0], [701.0, 7075.0], [694.0, 3345.5], [693.0, 11238.0], [734.0, 5970.0], [713.0, 6514.5], [717.0, 7829.333333333333], [714.0, 9657.0], [721.0, 4059.8], [732.0, 4893.0], [730.0, 4332.0], [728.0, 7968.0], [710.0, 6977.666666666666], [709.0, 10049.0], [707.0, 10141.0], [706.0, 10005.0], [705.0, 6493.0], [718.0, 9163.0], [727.0, 5487.333333333333], [726.0, 5642.333333333333], [723.0, 9198.0], [740.0, 7449.0], [741.0, 7273.0], [743.0, 5369.0], [742.0, 6159.0], [738.0, 5936.5], [736.0, 3328.5], [1.0, 3989.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[395.6412499999997, 11258.22125]], "isOverall": false, "label": "GetBooking-Aggregated", "isController": false}, {"data": [[2.0, 248.0], [3.0, 253.0], [4.0, 252.0], [5.0, 247.0], [6.0, 249.0], [7.0, 253.0], [8.0, 251.0], [9.0, 250.0], [10.0, 258.0], [11.0, 253.0], [12.0, 247.0], [13.0, 252.0], [14.0, 250.0], [15.0, 253.0], [16.0, 246.0], [17.0, 254.0], [18.0, 253.0], [19.0, 256.0], [20.0, 256.0], [22.0, 267.5], [23.0, 251.0], [24.0, 251.0], [25.0, 245.0], [26.0, 255.0], [27.0, 254.0], [28.0, 249.0], [29.0, 255.0], [30.0, 260.0], [31.0, 249.0], [33.0, 253.0], [32.0, 252.0], [35.0, 252.0], [34.0, 252.0], [37.0, 247.0], [36.0, 252.0], [39.0, 246.0], [38.0, 254.0], [41.0, 258.0], [40.0, 259.0], [43.0, 256.0], [42.0, 259.0], [45.0, 249.0], [44.0, 258.0], [47.0, 272.0], [46.0, 262.0], [49.0, 267.0], [48.0, 253.0], [51.0, 266.0], [50.0, 251.0], [53.0, 255.5], [55.0, 261.0], [54.0, 259.0], [57.0, 251.0], [56.0, 267.0], [59.0, 263.0], [58.0, 257.0], [61.0, 260.0], [60.0, 249.0], [63.0, 256.0], [62.0, 261.0], [67.0, 251.0], [66.0, 253.0], [65.0, 268.0], [64.0, 257.0], [71.0, 259.0], [70.0, 259.0], [69.0, 18819.0], [68.0, 259.0], [75.0, 256.0], [74.0, 261.0], [72.0, 250.0], [79.0, 258.0], [78.0, 256.5], [76.0, 258.0], [83.0, 276.0], [82.0, 259.0], [81.0, 259.0], [80.0, 258.0], [87.0, 252.0], [86.0, 256.0], [85.0, 258.0], [84.0, 251.0], [91.0, 256.0], [90.0, 258.0], [89.0, 249.0], [88.0, 261.0], [95.0, 249.0], [94.0, 256.0], [93.0, 250.0], [92.0, 268.0], [99.0, 252.0], [98.0, 250.0], [97.0, 254.5], [103.0, 264.0], [102.0, 251.0], [101.0, 259.0], [100.0, 252.0], [107.0, 253.0], [106.0, 249.0], [105.0, 254.0], [104.0, 257.0], [111.0, 254.0], [110.0, 256.0], [109.0, 255.0], [108.0, 256.0], [115.0, 255.0], [114.0, 252.0], [113.0, 256.0], [112.0, 251.0], [119.0, 254.0], [118.0, 255.0], [117.0, 276.0], [116.0, 258.0], [123.0, 252.0], [121.0, 10648.0], [120.0, 260.0], [127.0, 251.0], [126.0, 252.0], [125.0, 250.0], [124.0, 256.0], [135.0, 254.0], [134.0, 254.0], [133.0, 258.0], [131.0, 258.5], [129.0, 260.0], [128.0, 275.0], [142.0, 253.0], [141.0, 251.0], [140.0, 250.0], [139.0, 249.0], [138.0, 260.0], [137.0, 255.0], [136.0, 269.0], [151.0, 266.0], [150.0, 252.0], [149.0, 250.0], [148.0, 260.0], [147.0, 251.0], [146.0, 255.0], [145.0, 256.0], [144.0, 251.5], [159.0, 248.0], [158.0, 255.0], [157.0, 253.0], [156.0, 255.0], [155.0, 255.0], [154.0, 254.0], [153.0, 256.0], [152.0, 264.0], [167.0, 254.0], [166.0, 254.0], [165.0, 257.0], [164.0, 250.0], [163.0, 259.0], [162.0, 267.0], [161.0, 267.0], [160.0, 271.0], [175.0, 253.0], [174.0, 260.0], [173.0, 262.5], [171.0, 253.0], [170.0, 260.0], [169.0, 247.0], [168.0, 251.0], [183.0, 251.0], [182.0, 253.0], [181.0, 849.0], [180.0, 255.0], [178.0, 259.0], [177.0, 252.0], [176.0, 262.0], [191.0, 251.0], [190.0, 264.0], [189.0, 253.0], [188.0, 254.0], [187.0, 253.0], [186.0, 256.0], [185.0, 256.0], [184.0, 255.0], [199.0, 254.0], [198.0, 259.0], [197.0, 251.0], [196.0, 257.0], [195.0, 253.0], [194.0, 253.0], [193.0, 256.0], [192.0, 268.0], [207.0, 246.0], [206.0, 255.0], [204.0, 253.0], [203.0, 250.0], [202.0, 255.0], [201.0, 257.0], [200.0, 250.0], [215.0, 255.0], [214.0, 251.0], [213.0, 259.0], [211.0, 254.0], [210.0, 270.0], [209.0, 252.0], [208.0, 253.0], [223.0, 254.0], [222.0, 248.0], [221.0, 255.0], [220.0, 255.0], [218.0, 253.0], [217.0, 252.0], [216.0, 259.0], [231.0, 259.0], [230.0, 255.0], [229.0, 255.0], [228.0, 255.0], [227.0, 254.0], [226.0, 508.0], [225.0, 259.0], [224.0, 262.0], [239.0, 252.0], [238.0, 253.0], [237.0, 255.0], [236.0, 250.0], [235.0, 251.0], [234.0, 257.0], [233.0, 251.0], [232.0, 252.0], [247.0, 262.0], [246.0, 265.0], [245.0, 252.0], [244.0, 255.0], [243.0, 260.0], [242.0, 250.0], [241.0, 255.0], [240.0, 252.0], [255.0, 254.0], [254.0, 255.0], [253.0, 258.0], [252.0, 256.0], [251.0, 254.0], [250.0, 247.0], [249.0, 264.0], [248.0, 262.0], [270.0, 255.0], [271.0, 253.0], [269.0, 259.0], [268.0, 253.0], [267.0, 252.0], [266.0, 254.0], [265.0, 258.5], [263.0, 257.0], [257.0, 245.0], [256.0, 255.0], [259.0, 252.0], [258.0, 257.0], [262.0, 251.0], [261.0, 257.0], [260.0, 258.0], [286.0, 253.0], [287.0, 317.0], [285.0, 255.0], [284.0, 250.0], [283.0, 260.0], [282.0, 257.0], [281.0, 252.0], [279.0, 255.0], [274.0, 252.5], [272.0, 252.0], [278.0, 252.0], [277.0, 257.0], [276.0, 249.5], [302.0, 264.0], [288.0, 323.0], [289.0, 263.0], [291.0, 259.0], [290.0, 258.0], [295.0, 261.0], [294.0, 261.0], [293.0, 261.0], [292.0, 257.0], [303.0, 539.0], [301.0, 258.0], [300.0, 265.0], [299.0, 270.0], [298.0, 266.0], [297.0, 264.0], [296.0, 265.0], [318.0, 262.0], [319.0, 278.0], [317.0, 273.0], [316.0, 274.0], [315.0, 274.0], [314.0, 275.0], [313.0, 269.0], [312.0, 276.0], [311.0, 275.0], [305.0, 266.0], [304.0, 273.0], [307.0, 271.0], [306.0, 270.0], [310.0, 272.0], [309.0, 273.0], [308.0, 276.0], [334.0, 805.0], [335.0, 272.0], [333.0, 277.0], [332.0, 285.0], [331.0, 280.0], [329.0, 287.0], [328.0, 283.0], [327.0, 270.0], [321.0, 276.0], [323.0, 280.0], [322.0, 276.0], [326.0, 276.0], [325.0, 269.0], [324.0, 280.0], [350.0, 277.0], [351.0, 278.0], [349.0, 282.0], [348.0, 1879.0], [347.0, 270.0], [346.0, 823.0], [345.0, 282.0], [344.0, 277.0], [343.0, 277.0], [337.0, 272.0], [336.0, 270.0], [339.0, 266.0], [338.0, 273.0], [342.0, 281.0], [341.0, 269.0], [340.0, 271.0], [366.0, 280.0], [355.0, 281.5], [354.0, 269.0], [353.0, 276.0], [352.0, 276.0], [359.0, 270.0], [358.0, 273.0], [357.0, 267.0], [356.0, 796.0], [367.0, 268.0], [365.0, 277.0], [364.0, 271.0], [363.0, 277.0], [362.0, 264.0], [361.0, 273.0], [360.0, 275.0], [382.0, 270.5], [383.0, 271.0], [380.0, 282.0], [371.0, 270.0], [370.0, 271.0], [369.0, 272.5], [379.0, 286.0], [378.0, 804.0], [377.0, 275.0], [376.0, 271.0], [375.0, 273.0], [374.0, 271.0], [373.0, 277.0], [372.0, 270.0], [397.0, 272.0], [399.0, 273.5], [396.0, 280.0], [387.0, 284.0], [386.0, 288.5], [384.0, 280.0], [395.0, 277.0], [394.0, 294.0], [393.0, 281.0], [392.0, 281.0], [391.0, 298.0], [390.0, 284.0], [389.0, 272.0], [388.0, 271.0], [403.0, 283.0], [414.0, 277.5], [415.0, 275.0], [412.0, 278.0], [402.0, 282.0], [401.0, 287.0], [400.0, 776.0], [411.0, 268.0], [410.0, 284.0], [407.0, 288.0], [406.0, 288.0], [405.0, 288.0], [404.0, 285.0], [430.0, 787.0], [431.0, 280.0], [429.0, 272.0], [428.0, 276.0], [427.0, 270.0], [426.0, 272.0], [424.0, 279.0], [423.0, 270.0], [417.0, 278.0], [416.0, 278.0], [419.0, 280.0], [418.0, 280.0], [422.0, 270.0], [421.0, 276.0], [420.0, 277.0], [446.0, 273.0], [432.0, 272.0], [438.0, 304.0], [437.0, 268.0], [436.0, 277.0], [439.0, 2358.0], [447.0, 278.0], [445.0, 280.0], [444.0, 280.0], [435.0, 5097.0], [434.0, 279.0], [433.0, 271.0], [443.0, 277.0], [442.0, 277.0], [441.0, 773.0], [440.0, 285.0], [462.0, 276.5], [452.0, 277.0], [453.0, 278.0], [455.0, 282.0], [448.0, 278.0], [450.0, 275.0], [449.0, 1078.0], [454.0, 276.0], [451.0, 276.0], [463.0, 277.0], [461.0, 276.0], [460.0, 281.0], [459.0, 813.0], [458.0, 277.0], [457.0, 288.0], [478.0, 285.0], [472.0, 276.0], [473.0, 275.6666666666667], [479.0, 276.0], [477.0, 275.0], [476.0, 276.0], [475.0, 276.0], [474.0, 807.0], [471.0, 277.0], [465.0, 275.0], [464.0, 279.0], [467.0, 281.0], [466.0, 279.0], [469.0, 800.0], [468.0, 275.0], [495.0, 278.0], [488.0, 279.25], [490.0, 756.0], [491.0, 282.5], [494.0, 275.0], [493.0, 263.0], [492.0, 285.0], [483.0, 272.0], [482.0, 548.6666666666666], [489.0, 278.0], [487.0, 281.0], [486.0, 816.0], [485.0, 281.0], [484.0, 277.0], [510.0, 276.0], [503.0, 276.5], [497.0, 272.0], [496.0, 276.0], [499.0, 270.0], [498.0, 802.0], [505.0, 667.6666666666666], [511.0, 280.5], [509.0, 275.0], [508.0, 287.0], [507.0, 276.0], [506.0, 286.0], [502.0, 272.0], [501.0, 276.0], [500.0, 278.0], [539.0, 279.0], [543.0, 274.0], [528.0, 282.0], [529.0, 587.0], [531.0, 277.5], [530.0, 787.0], [533.0, 283.0], [532.0, 279.0], [535.0, 278.0], [534.0, 276.0], [541.0, 531.0], [542.0, 277.0], [540.0, 274.0], [538.0, 274.0], [537.0, 278.0], [536.0, 278.0], [519.0, 282.0], [518.0, 279.0], [517.0, 277.0], [516.0, 271.0], [515.0, 279.0], [514.0, 279.0], [513.0, 1048.0], [512.0, 272.0], [527.0, 294.0], [526.0, 684.5], [525.0, 289.0], [523.0, 277.0], [522.0, 278.0], [521.0, 270.0], [520.0, 278.0], [548.0, 679.0], [553.0, 491.6666666666667], [552.0, 273.0], [554.0, 281.0], [556.0, 274.0], [555.0, 277.0], [557.0, 668.0], [558.0, 663.0], [559.0, 274.0], [547.0, 277.0], [546.0, 276.0], [545.0, 278.0], [544.0, 799.0], [575.0, 283.0], [561.0, 273.0], [560.0, 273.0], [563.0, 284.0], [562.0, 783.0], [565.0, 281.0], [564.0, 277.0], [567.0, 280.0], [566.0, 276.0], [574.0, 278.0], [573.0, 284.0], [572.0, 277.0], [571.0, 706.5], [569.0, 279.0], [568.0, 1091.0], [551.0, 273.0], [550.0, 277.0], [549.0, 282.0], [603.0, 282.0], [579.0, 1488.0], [578.0, 278.0], [577.0, 282.0], [576.0, 278.0], [580.0, 564.0], [591.0, 282.0], [590.0, 1382.0], [589.0, 282.0], [588.0, 279.0], [587.0, 281.0], [586.0, 827.0], [585.0, 796.0], [584.0, 280.0], [581.0, 553.5], [583.0, 1407.0], [582.0, 277.0], [600.0, 287.0], [605.0, 577.0], [606.0, 283.0], [607.0, 286.0], [599.0, 274.0], [598.0, 801.0], [597.0, 284.0], [596.0, 846.0], [595.0, 276.0], [594.0, 283.0], [593.0, 278.0], [592.0, 814.0], [604.0, 275.0], [602.0, 282.0], [601.0, 1054.0], [635.0, 279.0], [627.0, 283.5], [609.0, 652.0], [608.0, 288.0], [623.0, 283.0], [622.0, 1057.0], [621.0, 279.0], [620.0, 285.0], [619.0, 283.0], [618.0, 281.0], [617.0, 279.0], [616.0, 265.0], [610.0, 277.0], [611.0, 275.6666666666667], [612.0, 275.0], [614.0, 277.0], [613.0, 279.0], [632.0, 280.0], [615.0, 279.0], [634.0, 278.0], [633.0, 801.0], [636.0, 278.0], [628.0, 551.5], [630.0, 283.0], [629.0, 548.5], [631.0, 667.5], [639.0, 816.0], [624.0, 279.0], [626.0, 1044.0], [625.0, 279.0], [637.0, 280.0], [668.0, 285.0], [641.0, 679.0], [655.0, 839.0], [640.0, 280.0], [654.0, 279.0], [653.0, 303.0], [652.0, 278.0], [651.0, 283.0], [650.0, 278.0], [649.0, 271.0], [648.0, 278.0], [671.0, 265.0], [656.0, 281.0], [658.0, 3703.0], [657.0, 282.0], [660.0, 280.0], [659.0, 283.0], [663.0, 281.5], [661.0, 283.0], [670.0, 281.0], [669.0, 277.0], [667.0, 819.0], [666.0, 281.0], [665.0, 848.0], [664.0, 283.0], [647.0, 797.0], [646.0, 837.0], [645.0, 284.0], [644.0, 280.0], [643.0, 277.0], [642.0, 282.0], [700.0, 672.5], [673.0, 666.0], [672.0, 280.0], [674.0, 538.3333333333334], [677.0, 282.5], [676.0, 810.0], [675.0, 1918.0], [679.0, 826.0], [678.0, 277.0], [697.0, 286.0], [696.0, 277.0], [699.0, 847.0], [698.0, 281.0], [684.0, 286.0], [683.0, 276.0], [682.0, 283.0], [681.0, 286.0], [680.0, 279.0], [686.0, 281.0], [685.0, 5152.0], [687.0, 1356.0], [689.0, 737.0], [691.0, 279.0], [690.0, 1063.0], [693.0, 1078.0], [692.0, 276.0], [695.0, 277.0], [694.0, 1111.0], [703.0, 284.0], [702.0, 274.0], [701.0, 1366.0], [732.0, 281.0], [704.0, 917.0], [705.0, 817.0], [707.0, 276.0], [706.0, 279.0], [709.0, 280.0], [708.0, 851.0], [711.0, 288.0], [710.0, 290.0], [719.0, 849.0], [718.0, 886.0], [717.0, 850.0], [716.0, 283.0], [729.0, 305.0], [728.0, 279.0], [713.0, 572.0], [712.0, 271.0], [714.0, 859.0], [715.0, 278.5], [734.0, 278.5], [735.0, 277.0], [721.0, 273.0], [720.0, 285.0], [723.0, 287.0], [722.0, 277.0], [725.0, 273.0], [724.0, 1050.0], [727.0, 276.0], [726.0, 878.0], [733.0, 283.0], [731.0, 855.0], [730.0, 274.0], [742.0, 278.0], [743.0, 2275.0], [741.0, 902.0], [740.0, 287.0], [739.0, 285.0], [738.0, 605.5], [736.0, 289.0], [1.0, 898.0]], "isOverall": false, "label": "CreateBooking", "isController": false}, {"data": [[386.03375000000005, 408.71374999999966]], "isOverall": false, "label": "CreateBooking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 743.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 232.83333333333334, "minX": 1.70943576E12, "maxY": 740790.1666666666, "series": [{"data": [[1.70943582E12, 24820.966666666667], [1.70943576E12, 740790.1666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70943582E12, 232.83333333333334], [1.70943576E12, 11020.5]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70943582E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 282.45454545454544, "minX": 1.70943576E12, "maxY": 39373.333333333336, "series": [{"data": [[1.70943582E12, 39373.333333333336], [1.70943576E12, 5562.592220828105]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[1.70943582E12, 12262.727272727274], [1.70943576E12, 11229.81619537275]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.70943582E12, 282.45454545454544], [1.70943576E12, 412.28406169665783]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70943582E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 282.40909090909093, "minX": 1.70943576E12, "maxY": 39373.333333333336, "series": [{"data": [[1.70943582E12, 39373.333333333336], [1.70943576E12, 5562.052697616063]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[1.70943582E12, 6846.454545454545], [1.70943576E12, 4632.430591259646]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.70943582E12, 282.40909090909093], [1.70943576E12, 412.2570694087408]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70943582E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70943576E12, "maxY": 39038.0, "series": [{"data": [[1.70943582E12, 39038.0], [1.70943576E12, 4818.14680050188]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[1.70943582E12, 0.0], [1.70943576E12, 0.0]], "isOverall": false, "label": "GetBooking", "isController": false}, {"data": [[1.70943582E12, 28.545454545454547], [1.70943576E12, 0.0]], "isOverall": false, "label": "CreateBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70943582E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 245.0, "minX": 1.70943576E12, "maxY": 57327.0, "series": [{"data": [[1.70943582E12, 57327.0], [1.70943576E12, 33407.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70943582E12, 246.0], [1.70943576E12, 245.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70943582E12, 30906.600000000002], [1.70943576E12, 15497.599999999999]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70943582E12, 57327.0], [1.70943576E12, 29125.340000000007]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70943582E12, 2573.0], [1.70943576E12, 3178.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70943582E12, 44947.39999999987], [1.70943576E12, 19177.599999999995]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70943582E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 253.0, "minX": 1.0, "maxY": 25278.0, "series": [{"data": [[32.0, 4037.5], [44.0, 2201.5], [3.0, 253.0], [53.0, 268.0], [58.0, 6705.5], [61.0, 2811.0], [62.0, 2494.5], [65.0, 5652.0], [66.0, 1072.5], [70.0, 4024.5], [71.0, 5830.5], [68.0, 5208.5], [75.0, 1297.0], [74.0, 8350.0], [76.0, 3303.5], [81.0, 3350.0], [89.0, 1950.0], [90.0, 4329.0], [94.0, 3967.5], [96.0, 5173.0], [102.0, 7848.0], [111.0, 5640.0], [119.0, 539.0], [118.0, 2917.0], [129.0, 776.0], [8.0, 1404.0], [9.0, 255.5], [10.0, 2131.0], [11.0, 4359.0], [12.0, 16308.5], [13.0, 18940.0], [15.0, 2806.0], [1.0, 3989.0], [19.0, 25278.0], [21.0, 22595.0], [24.0, 1967.0], [30.0, 268.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 129.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 253.0, "minX": 1.0, "maxY": 4708.0, "series": [{"data": [[32.0, 1501.5], [44.0, 1588.0], [3.0, 253.0], [53.0, 268.0], [58.0, 1563.5], [61.0, 2589.0], [62.0, 1841.0], [65.0, 4708.0], [66.0, 809.5], [70.0, 2267.0], [71.0, 3855.0], [68.0, 1154.5], [75.0, 1297.0], [74.0, 1715.0], [76.0, 1923.0], [81.0, 3080.0], [89.0, 1950.0], [90.0, 3387.5], [94.0, 346.0], [96.0, 1136.5], [102.0, 2122.0], [111.0, 1194.0], [119.0, 539.0], [118.0, 787.0], [129.0, 776.0], [8.0, 620.5], [9.0, 255.5], [10.0, 994.5], [11.0, 1749.0], [12.0, 1770.0], [13.0, 1539.0], [15.0, 1776.0], [1.0, 3246.0], [19.0, 2086.0], [21.0, 1911.0], [24.0, 1967.0], [30.0, 268.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 129.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.4166666666666667, "minX": 1.70943576E12, "maxY": 39.583333333333336, "series": [{"data": [[1.70943582E12, 0.4166666666666667], [1.70943576E12, 39.583333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70943582E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.7833333333333333, "minX": 1.70943576E12, "maxY": 39.21666666666667, "series": [{"data": [[1.70943582E12, 0.7833333333333333], [1.70943576E12, 39.21666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70943582E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.70943576E12, "maxY": 13.283333333333333, "series": [{"data": [[1.70943582E12, 0.36666666666666664], [1.70943576E12, 12.966666666666667]], "isOverall": false, "label": "GetBooking-success", "isController": false}, {"data": [[1.70943582E12, 0.36666666666666664], [1.70943576E12, 12.966666666666667]], "isOverall": false, "label": "CreateBooking-success", "isController": false}, {"data": [[1.70943582E12, 0.05], [1.70943576E12, 13.283333333333333]], "isOverall": false, "label": "auth-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70943582E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.7833333333333333, "minX": 1.70943576E12, "maxY": 39.21666666666667, "series": [{"data": [[1.70943582E12, 0.7833333333333333], [1.70943576E12, 39.21666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70943582E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

